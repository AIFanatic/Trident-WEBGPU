var __require = /* @__PURE__ */ ((x2) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x2, {
  get: (a2, b2) => (typeof require !== "undefined" ? require : a2)[b2]
}) : x2)(function(x2) {
  if (typeof require !== "undefined") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x2 + '" is not supported');
});

// src/Events.ts
var EventSystem = class {
  static events = /* @__PURE__ */ new Map();
  static on(event, callback) {
    const events = this.events.get(event) || [];
    events.push(callback);
    this.events.set(event, events);
  }
  static emit(event, ...args) {
    const callbacks = this.events.get(event);
    if (callbacks === void 0) return;
    for (let i3 = 0; i3 < callbacks.length; i3++) {
      callbacks[i3](...args);
    }
  }
};
var EventSystemLocal = class {
  static events = /* @__PURE__ */ new Map();
  static on(event, localId, callback) {
    const localEvents = this.events.get(event) || /* @__PURE__ */ new Map();
    const localEventsCallbacks = localEvents.get(localId) || [];
    localEventsCallbacks.push(callback);
    localEvents.set(localId, localEventsCallbacks);
    this.events.set(event, localEvents);
  }
  static emit(event, localId, ...args) {
    const localEvents = this.events.get(event);
    if (localEvents === void 0) return;
    const localEventsCallbacks = localEvents.get(localId);
    if (localEventsCallbacks === void 0) return;
    for (let i3 = 0; i3 < localEventsCallbacks.length; i3++) {
      localEventsCallbacks[i3](...args);
    }
  }
};

// src/utils/Utils.ts
var Utils = class {
  static UUID() {
    return Math.floor(Math.random() * 1e6).toString();
  }
  static StringFindAllBetween(source, start, end, exclusive = true) {
    const escapeRegExp = (string) => string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    const regex = new RegExp(`${escapeRegExp(start)}(.*?)${escapeRegExp(end)}`, "gs");
    const matches = [];
    let match;
    while ((match = regex.exec(source)) !== null) {
      if (exclusive) matches.push(match[1]);
      else matches.push(start + match[1] + end);
    }
    return matches;
  }
};

// src/components/Component.ts
var ComponentEvents = class {
  static CallUpdate = (component, shouldUpdate) => {
  };
  static AddedComponent = (component, scene) => {
  };
  static RemovedComponent = (component, scene) => {
  };
};
var Component = class _Component {
  id = Utils.UUID();
  enabled = true;
  hasStarted = false;
  name;
  gameObject;
  transform;
  constructor(gameObject) {
    this.gameObject = gameObject;
    this.transform = gameObject.transform;
    this.name = this.constructor.name;
    if (this.gameObject.scene.hasStarted) this.Start();
    if (this.constructor.prototype.Update !== _Component.prototype.Update) EventSystem.emit(ComponentEvents.CallUpdate, this, true);
    EventSystem.emit(ComponentEvents.AddedComponent, this, this.gameObject.scene);
  }
  Start() {
  }
  Update() {
  }
  LateUpdate() {
  }
  Destroy() {
  }
};

// src/math/Vector3.ts
var Vector3 = class _Vector3 {
  _x;
  _y;
  _z;
  get x() {
    return this._x;
  }
  get y() {
    return this._y;
  }
  get z() {
    return this._z;
  }
  set x(v2) {
    this._x = v2;
  }
  set y(v2) {
    this._y = v2;
  }
  set z(v2) {
    this._z = v2;
  }
  _elements = new Float32Array(3);
  get elements() {
    this._elements[0] = this._x;
    this._elements[1] = this._y;
    this._elements[2] = this._z;
    return this._elements;
  }
  constructor(x2 = 0, y2 = 0, z2 = 0) {
    this.x = x2;
    this.y = y2;
    this.z = z2;
  }
  set(x2, y2, z2) {
    this.x = x2;
    this.y = y2;
    this.z = z2;
    return this;
  }
  setX(x2) {
    this.x = x2;
    return this;
  }
  setY(y2) {
    this.y = y2;
    return this;
  }
  setZ(z2) {
    this.z = z2;
    return this;
  }
  clone() {
    return new _Vector3(this.x, this.y, this.z);
  }
  copy(v2) {
    return this.set(v2.x, v2.y, v2.z);
  }
  mul(v2) {
    if (v2 instanceof _Vector3) this.x *= v2.x, this.y *= v2.y, this.z *= v2.z;
    else this.x *= v2, this.y *= v2, this.z *= v2;
    return this;
  }
  div(v2) {
    if (v2 instanceof _Vector3) this.x /= v2.x, this.y /= v2.y, this.z /= v2.z;
    else this.x /= v2, this.y /= v2, this.z /= v2;
    return this;
  }
  add(v2) {
    if (v2 instanceof _Vector3) this.x += v2.x, this.y += v2.y, this.z += v2.z;
    else this.x += v2, this.y += v2, this.z += v2;
    return this;
  }
  sub(v2) {
    if (v2 instanceof _Vector3) this.x -= v2.x, this.y -= v2.y, this.z -= v2.z;
    else this.x -= v2, this.y -= v2, this.z -= v2;
    return this;
  }
  subVectors(a2, b2) {
    this.x = a2.x - b2.x;
    this.y = a2.y - b2.y;
    this.z = a2.z - b2.z;
    return this;
  }
  applyQuaternion(q2) {
    const vx = this.x, vy = this.y, vz = this.z;
    const qx = q2.x, qy = q2.y, qz = q2.z, qw = q2.w;
    const tx = 2 * (qy * vz - qz * vy);
    const ty = 2 * (qz * vx - qx * vz);
    const tz = 2 * (qx * vy - qy * vx);
    this.set(
      vx + qw * tx + qy * tz - qz * ty,
      vy + qw * ty + qz * tx - qx * tz,
      vz + qw * tz + qx * ty - qy * tx
    );
    return this;
  }
  length() {
    return Math.hypot(this.x, this.y, this.z);
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  normalize() {
    return this.div(this.length() || 1);
  }
  distanceTo(v2) {
    return Math.hypot(this.x - v2.x, this.y - v2.y, this.z - v2.z);
  }
  distanceToSquared(v2) {
    const dx = this.x - v2.x, dy = this.y - v2.y, dz = this.z - v2.z;
    return dx * dx + dy * dy + dz * dz;
  }
  dot(v2) {
    return this.x * v2.x + this.y * v2.y + this.z * v2.z;
  }
  cross(v2) {
    return this.set(this.y * v2.z - this.z * v2.y, this.z * v2.x - this.x * v2.z, this.x * v2.y - this.y * v2.x);
  }
  applyMatrix4(m2) {
    const x2 = this.x, y2 = this.y, z2 = this.z;
    const e2 = m2.elements;
    const w2 = 1 / (e2[3] * x2 + e2[7] * y2 + e2[11] * z2 + e2[15]);
    this.x = (e2[0] * x2 + e2[4] * y2 + e2[8] * z2 + e2[12]) * w2;
    this.y = (e2[1] * x2 + e2[5] * y2 + e2[9] * z2 + e2[13]) * w2;
    this.z = (e2[2] * x2 + e2[6] * y2 + e2[10] * z2 + e2[14]) * w2;
    return this;
  }
  min(v2) {
    this.x = Math.min(this.x, v2.x);
    this.y = Math.min(this.y, v2.y);
    this.z = Math.min(this.z, v2.z);
    return this;
  }
  max(v2) {
    this.x = Math.max(this.x, v2.x);
    this.y = Math.max(this.y, v2.y);
    this.z = Math.max(this.z, v2.z);
    return this;
  }
  lerp(v2, t2) {
    this.x = this.x + t2 * (v2.x - this.x);
    this.y = this.y + t2 * (v2.y - this.y);
    this.z = this.z + t2 * (v2.z - this.z);
    return this;
  }
  setFromSphericalCoords(radius, phi, theta) {
    const sinPhiRadius = Math.sin(phi) * radius;
    this.x = sinPhiRadius * Math.sin(theta);
    this.y = Math.cos(phi) * radius;
    this.z = sinPhiRadius * Math.cos(theta);
    return this;
  }
  setFromMatrixPosition(m2) {
    const e2 = m2.elements;
    this.x = e2[12];
    this.y = e2[13];
    this.z = e2[14];
    return this;
  }
  equals(v2) {
    const EPS = 1e-4;
    return Math.abs(v2.x - this.x) < EPS && Math.abs(v2.y - this.y) < EPS && Math.abs(v2.z - this.z) < EPS;
  }
  abs() {
    this.x = Math.abs(this.x);
    this.y = Math.abs(this.y);
    this.z = Math.abs(this.z);
    return this;
  }
  sign() {
    this.x = Math.sign(this.x);
    this.y = Math.sign(this.y);
    this.z = Math.sign(this.z);
    return this;
  }
  toString() {
    return `(${this.x.toPrecision(2)}, ${this.y.toPrecision(2)}, ${this.z.toPrecision(2)})`;
  }
};
var ObservableVector3 = class extends Vector3 {
  onChange;
  get x() {
    return this._x;
  }
  get y() {
    return this._y;
  }
  get z() {
    return this._z;
  }
  set x(value) {
    this._x = value;
    if (this.onChange) this.onChange();
  }
  set y(value) {
    this._y = value;
    if (this.onChange) this.onChange();
  }
  set z(value) {
    this._z = value;
    if (this.onChange) this.onChange();
  }
  constructor(onChange, x2 = 0, y2 = 0, z2 = 0) {
    super(x2, y2, z2);
    this.onChange = onChange;
  }
};

// src/math/Matrix4.ts
var Matrix4 = class _Matrix4 {
  elements;
  constructor(n11 = 1, n12 = 0, n13 = 0, n14 = 0, n21 = 0, n22 = 1, n23 = 0, n24 = 0, n31 = 0, n32 = 0, n33 = 1, n34 = 0, n41 = 0, n42 = 0, n43 = 0, n44 = 1) {
    this.elements = new Float32Array(16);
    this.set(
      n11,
      n12,
      n13,
      n14,
      n21,
      n22,
      n23,
      n24,
      n31,
      n32,
      n33,
      n34,
      n41,
      n42,
      n43,
      n44
    );
  }
  copy(m2) {
    const te = this.elements;
    const me = m2.elements;
    te[0] = me[0];
    te[1] = me[1];
    te[2] = me[2];
    te[3] = me[3];
    te[4] = me[4];
    te[5] = me[5];
    te[6] = me[6];
    te[7] = me[7];
    te[8] = me[8];
    te[9] = me[9];
    te[10] = me[10];
    te[11] = me[11];
    te[12] = me[12];
    te[13] = me[13];
    te[14] = me[14];
    te[15] = me[15];
    return this;
  }
  set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
    const te = this.elements;
    te[0] = n11;
    te[4] = n12;
    te[8] = n13;
    te[12] = n14;
    te[1] = n21;
    te[5] = n22;
    te[9] = n23;
    te[13] = n24;
    te[2] = n31;
    te[6] = n32;
    te[10] = n33;
    te[14] = n34;
    te[3] = n41;
    te[7] = n42;
    te[11] = n43;
    te[15] = n44;
    return this;
  }
  setFromArray(array) {
    this.elements.set(array);
    return this;
  }
  clone() {
    return new _Matrix4().setFromArray(this.elements);
  }
  compose(position, quaternion, scale2) {
    const te = this.elements;
    const x2 = quaternion.x, y2 = quaternion.y, z2 = quaternion.z, w2 = quaternion.w;
    const x22 = x2 + x2, y22 = y2 + y2, z22 = z2 + z2;
    const xx = x2 * x22, xy = x2 * y22, xz = x2 * z22;
    const yy = y2 * y22, yz = y2 * z22, zz = z2 * z22;
    const wx = w2 * x22, wy = w2 * y22, wz = w2 * z22;
    const sx = scale2.x, sy = scale2.y, sz = scale2.z;
    te[0] = (1 - (yy + zz)) * sx;
    te[1] = (xy + wz) * sx;
    te[2] = (xz - wy) * sx;
    te[3] = 0;
    te[4] = (xy - wz) * sy;
    te[5] = (1 - (xx + zz)) * sy;
    te[6] = (yz + wx) * sy;
    te[7] = 0;
    te[8] = (xz + wy) * sz;
    te[9] = (yz - wx) * sz;
    te[10] = (1 - (xx + yy)) * sz;
    te[11] = 0;
    te[12] = position.x;
    te[13] = position.y;
    te[14] = position.z;
    te[15] = 1;
    return this;
  }
  decompose(position, quaternion, scale2) {
    const te = this.elements;
    let sx = _v1.set(te[0], te[1], te[2]).length();
    const sy = _v1.set(te[4], te[5], te[6]).length();
    const sz = _v1.set(te[8], te[9], te[10]).length();
    const det = this.determinant();
    if (det < 0) sx = -sx;
    position.x = te[12];
    position.y = te[13];
    position.z = te[14];
    _m1.copy(this);
    const invSX = 1 / sx;
    const invSY = 1 / sy;
    const invSZ = 1 / sz;
    _m1.elements[0] *= invSX;
    _m1.elements[1] *= invSX;
    _m1.elements[2] *= invSX;
    _m1.elements[4] *= invSY;
    _m1.elements[5] *= invSY;
    _m1.elements[6] *= invSY;
    _m1.elements[8] *= invSZ;
    _m1.elements[9] *= invSZ;
    _m1.elements[10] *= invSZ;
    quaternion.setFromRotationMatrix(_m1);
    scale2.x = sx;
    scale2.y = sy;
    scale2.z = sz;
    return this;
  }
  mul(m2) {
    return this.multiplyMatrices(this, m2);
  }
  premultiply(m2) {
    return this.multiplyMatrices(m2, this);
  }
  multiplyMatrices(a2, b2) {
    const ae = a2.elements;
    const be = b2.elements;
    const te = this.elements;
    const a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];
    const a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];
    const a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];
    const a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];
    const b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];
    const b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];
    const b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];
    const b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];
    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
    return this;
  }
  invert() {
    const te = this.elements, n11 = te[0], n21 = te[1], n31 = te[2], n41 = te[3], n12 = te[4], n22 = te[5], n32 = te[6], n42 = te[7], n13 = te[8], n23 = te[9], n33 = te[10], n43 = te[11], n14 = te[12], n24 = te[13], n34 = te[14], n44 = te[15], t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44, t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44, t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44, t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;
    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const detInv = 1 / det;
    te[0] = t11 * detInv;
    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;
    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;
    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;
    te[4] = t12 * detInv;
    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;
    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;
    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;
    te[8] = t13 * detInv;
    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;
    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;
    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;
    te[12] = t14 * detInv;
    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;
    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;
    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;
    return this;
  }
  determinant() {
    const te = this.elements;
    const n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];
    const n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];
    const n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];
    const n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];
    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);
  }
  transpose() {
    const te = this.elements;
    let tmp;
    tmp = te[1];
    te[1] = te[4];
    te[4] = tmp;
    tmp = te[2];
    te[2] = te[8];
    te[8] = tmp;
    tmp = te[6];
    te[6] = te[9];
    te[9] = tmp;
    tmp = te[3];
    te[3] = te[12];
    te[12] = tmp;
    tmp = te[7];
    te[7] = te[13];
    te[13] = tmp;
    tmp = te[11];
    te[11] = te[14];
    te[14] = tmp;
    return this;
  }
  perspectiveLH(fovy, aspect, near, far) {
    const out = this.elements;
    const f2 = 1 / Math.tan(fovy / 2);
    out[0] = f2 / aspect;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = f2;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = far / (far - near);
    out[11] = 1;
    out[12] = 0;
    out[13] = 0;
    out[14] = -near * far / (far - near);
    out[15] = 0;
    return this;
  }
  orthoZO(left, right, bottom, top, near, far) {
    var lr = 1 / (left - right);
    var bt = 1 / (bottom - top);
    var nf = 1 / (near - far);
    const out = new Float32Array(16);
    out[0] = -2 * lr;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = -2 * bt;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = nf;
    out[11] = 0;
    out[12] = (left + right) * lr;
    out[13] = (top + bottom) * bt;
    out[14] = near * nf;
    out[15] = 1;
    return this.setFromArray(out);
  }
  identity() {
    this.elements[0] = 1;
    this.elements[1] = 0;
    this.elements[2] = 0;
    this.elements[3] = 0;
    this.elements[4] = 0;
    this.elements[5] = 1;
    this.elements[6] = 0;
    this.elements[7] = 0;
    this.elements[8] = 0;
    this.elements[9] = 0;
    this.elements[10] = 1;
    this.elements[11] = 0;
    this.elements[12] = 0;
    this.elements[13] = 0;
    this.elements[14] = 0;
    this.elements[15] = 1;
    return this;
  }
  // LH
  lookAt(eye, center, up) {
    let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;
    z0 = center.x - eye.x;
    z1 = center.y - eye.y;
    z2 = center.z - eye.z;
    len = z0 * z0 + z1 * z1 + z2 * z2;
    if (len > 0) {
      len = 1 / Math.sqrt(len);
      z0 *= len;
      z1 *= len;
      z2 *= len;
    }
    x0 = up.y * z2 - up.z * z1;
    x1 = up.z * z0 - up.x * z2;
    x2 = up.x * z1 - up.y * z0;
    len = x0 * x0 + x1 * x1 + x2 * x2;
    if (len > 0) {
      len = 1 / Math.sqrt(len);
      x0 *= len;
      x1 *= len;
      x2 *= len;
    }
    y0 = z1 * x2 - z2 * x1;
    y1 = z2 * x0 - z0 * x2;
    y2 = z0 * x1 - z1 * x0;
    const out = this.elements;
    out[0] = x0;
    out[1] = y0;
    out[2] = z0;
    out[3] = 0;
    out[4] = x1;
    out[5] = y1;
    out[6] = z1;
    out[7] = 0;
    out[8] = x2;
    out[9] = y2;
    out[10] = z2;
    out[11] = 0;
    out[12] = -(x0 * eye.x + x1 * eye.y + x2 * eye.z);
    out[13] = -(y0 * eye.x + y1 * eye.y + y2 * eye.z);
    out[14] = -(z0 * eye.x + z1 * eye.y + z2 * eye.z);
    out[15] = 1;
    return this;
  }
  translate(v2) {
    this.set(
      1,
      0,
      0,
      v2.x,
      0,
      1,
      0,
      v2.y,
      0,
      0,
      1,
      v2.z,
      0,
      0,
      0,
      1
    );
    return this;
  }
  scale(v2) {
    const te = this.elements;
    const x2 = v2.x, y2 = v2.y, z2 = v2.z;
    te[0] *= x2;
    te[4] *= y2;
    te[8] *= z2;
    te[1] *= x2;
    te[5] *= y2;
    te[9] *= z2;
    te[2] *= x2;
    te[6] *= y2;
    te[10] *= z2;
    te[3] *= x2;
    te[7] *= y2;
    te[11] *= z2;
    return this;
  }
};
var _v1 = new Vector3();
var _m1 = new Matrix4();

// src/math/Quaternion.ts
var EPSILON = 1e-4;
var Quaternion = class _Quaternion {
  _a = new Vector3();
  _b = new Vector3();
  _c = new Vector3();
  _x;
  _y;
  _z;
  _w;
  get x() {
    return this._x;
  }
  get y() {
    return this._y;
  }
  get z() {
    return this._z;
  }
  get w() {
    return this._w;
  }
  set x(v2) {
    this._x = v2;
  }
  set y(v2) {
    this._y = v2;
  }
  set z(v2) {
    this._z = v2;
  }
  set w(v2) {
    this._w = v2;
  }
  constructor(x2 = 0, y2 = 0, z2 = 0, w2 = 1) {
    this.x = x2;
    this.y = y2;
    this.z = z2;
    this.w = w2;
  }
  equals(v2) {
    return Math.abs(v2.x - this.x) < EPSILON && Math.abs(v2.y - this.y) < EPSILON && Math.abs(v2.z - this.z) < EPSILON && Math.abs(v2.w - this.w) < EPSILON;
  }
  set(x2, y2, z2, w2) {
    this.x = x2;
    this.y = y2;
    this.z = z2;
    this.w = w2;
    return this;
  }
  clone() {
    return new _Quaternion(this.x, this.y, this.z, this.w);
  }
  copy(quaternion) {
    this.x = quaternion.x;
    this.y = quaternion.y;
    this.z = quaternion.z;
    this.w = quaternion.w;
    return this;
  }
  fromEuler(euler, inDegrees = false) {
    const roll = inDegrees ? euler.x * Math.PI / 180 : euler.x;
    const pitch = inDegrees ? euler.y * Math.PI / 180 : euler.y;
    const yaw = inDegrees ? euler.z * Math.PI / 180 : euler.z;
    const cr = Math.cos(roll * 0.5);
    const sr = Math.sin(roll * 0.5);
    const cp = Math.cos(pitch * 0.5);
    const sp = Math.sin(pitch * 0.5);
    const cy = Math.cos(yaw * 0.5);
    const sy = Math.sin(yaw * 0.5);
    this.w = cr * cp * cy + sr * sp * sy;
    this.x = sr * cp * cy - cr * sp * sy;
    this.y = cr * sp * cy + sr * cp * sy;
    this.z = cr * cp * sy - sr * sp * cy;
    return this;
  }
  toEuler(out, inDegrees = false) {
    if (!out) out = new Vector3();
    const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);
    const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);
    out.x = Math.atan2(sinr_cosp, cosr_cosp);
    const sinp = Math.sqrt(1 + 2 * (this.w * this.y - this.x * this.z));
    const cosp = Math.sqrt(1 - 2 * (this.w * this.y - this.x * this.z));
    out.y = 2 * Math.atan2(sinp, cosp) - Math.PI / 2;
    const siny_cosp = 2 * (this.w * this.z + this.x * this.y);
    const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);
    out.z = Math.atan2(siny_cosp, cosy_cosp);
    if (inDegrees) {
      out.x *= 180 / Math.PI;
      out.y *= 180 / Math.PI;
      out.z *= 180 / Math.PI;
    }
    return out;
  }
  mul(b2) {
    const qax = this._x, qay = this._y, qaz = this._z, qaw = this._w;
    const qbx = b2._x, qby = b2._y, qbz = b2._z, qbw = b2._w;
    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
    return this;
  }
  lookAt(eye, target, up) {
    const z2 = this._a.copy(eye).sub(target);
    if (z2.length() === 0) z2.z = 1;
    else z2.normalize();
    const x2 = this._b.copy(up).cross(z2);
    if (x2.length() === 0) {
      const pup = this._c.copy(up);
      if (pup.z) pup.x += EPSILON;
      else if (pup.y) pup.z += EPSILON;
      else pup.y += EPSILON;
      x2.cross(pup);
    }
    x2.normalize();
    const y2 = this._c.copy(z2).cross(x2);
    const [sm11, sm12, sm13] = [x2.x, x2.y, x2.z];
    const [sm21, sm22, sm23] = [y2.x, y2.y, y2.z];
    const [sm31, sm32, sm33] = [z2.x, z2.y, z2.z];
    const trace = sm11 + sm22 + sm33;
    if (trace > 0) {
      const S2 = Math.sqrt(trace + 1) * 2;
      return this.set((sm23 - sm32) / S2, (sm31 - sm13) / S2, (sm12 - sm21) / S2, S2 / 4);
    } else if (sm11 > sm22 && sm11 > sm33) {
      const S2 = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;
      return this.set(S2 / 4, (sm12 + sm21) / S2, (sm31 + sm13) / S2, (sm23 - sm32) / S2);
    } else if (sm22 > sm33) {
      const S2 = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;
      return this.set((sm12 + sm21) / S2, S2 / 4, (sm23 + sm32) / S2, (sm31 - sm13) / S2);
    } else {
      const S2 = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;
      return this.set((sm31 + sm13) / S2, (sm23 + sm32) / S2, S2 / 4, (sm12 - sm21) / S2);
    }
  }
  setFromAxisAngle(axis, angle) {
    const halfAngle = angle / 2, s2 = Math.sin(halfAngle);
    this._x = axis.x * s2;
    this._y = axis.y * s2;
    this._z = axis.z * s2;
    this._w = Math.cos(halfAngle);
    return this;
  }
  setFromRotationMatrix(m2) {
    const te = m2.elements, m11 = te[0], m12 = te[4], m13 = te[8], m21 = te[1], m22 = te[5], m23 = te[9], m31 = te[2], m32 = te[6], m33 = te[10], trace = m11 + m22 + m33;
    if (trace > 0) {
      const s2 = 0.5 / Math.sqrt(trace + 1);
      this._w = 0.25 / s2;
      this._x = (m32 - m23) * s2;
      this._y = (m13 - m31) * s2;
      this._z = (m21 - m12) * s2;
    } else if (m11 > m22 && m11 > m33) {
      const s2 = 2 * Math.sqrt(1 + m11 - m22 - m33);
      this._w = (m32 - m23) / s2;
      this._x = 0.25 * s2;
      this._y = (m12 + m21) / s2;
      this._z = (m13 + m31) / s2;
    } else if (m22 > m33) {
      const s2 = 2 * Math.sqrt(1 + m22 - m11 - m33);
      this._w = (m13 - m31) / s2;
      this._x = (m12 + m21) / s2;
      this._y = 0.25 * s2;
      this._z = (m23 + m32) / s2;
    } else {
      const s2 = 2 * Math.sqrt(1 + m33 - m11 - m22);
      this._w = (m21 - m12) / s2;
      this._x = (m13 + m31) / s2;
      this._y = (m23 + m32) / s2;
      this._z = 0.25 * s2;
    }
    return this;
  }
};
var ObservableQuaternion = class extends Quaternion {
  onChange;
  get x() {
    return this._x;
  }
  get y() {
    return this._y;
  }
  get z() {
    return this._z;
  }
  get w() {
    return this._w;
  }
  set x(value) {
    this._x = value;
    if (this.onChange) this.onChange();
  }
  set y(value) {
    this._y = value;
    if (this.onChange) this.onChange();
  }
  set z(value) {
    this._z = value;
    if (this.onChange) this.onChange();
  }
  set w(value) {
    this._w = value;
    if (this.onChange) this.onChange();
  }
  constructor(onChange, x2 = 0, y2 = 0, z2 = 0, w2 = 1) {
    super(x2, y2, z2, w2);
    this.onChange = onChange;
  }
};

// src/components/Transform.ts
var TransformEvents = class {
  static Updated = () => {
  };
};
var Transform = class extends Component {
  up = new Vector3(0, 1, 0);
  forward = new Vector3(0, 0, 1);
  right = new Vector3(1, 0, 0);
  _localToWorldMatrix = new Matrix4();
  _worldToLocalMatrix = new Matrix4();
  get localToWorldMatrix() {
    return this._localToWorldMatrix;
  }
  get worldToLocalMatrix() {
    return this._worldToLocalMatrix;
  }
  _position = new ObservableVector3(() => {
    this.onChanged();
  }, 0, 0, 0);
  _rotation = new ObservableQuaternion(() => {
    this.onChanged();
  });
  _scale = new ObservableVector3(() => {
    this.onChanged();
  }, 1, 1, 1);
  _eulerAngles = new ObservableVector3(() => {
    this.onEulerChanged();
  });
  get position() {
    return this._position;
  }
  set position(value) {
    this._position.copy(value);
    this.onChanged();
  }
  get rotation() {
    return this._rotation;
  }
  set rotation(value) {
    this._rotation.copy(value);
    this.onChanged();
  }
  get eulerAngles() {
    return this._eulerAngles;
  }
  set eulerAngles(value) {
    this.eulerAngles.copy(value);
    this.onEulerChanged();
  }
  get scale() {
    return this._scale;
  }
  set scale(value) {
    this._scale.copy(value);
    this.onChanged();
  }
  children = /* @__PURE__ */ new Set();
  _parent = null;
  get parent() {
    return this._parent;
  }
  set parent(parent) {
    if (parent === null) {
      if (this._parent !== null) this._parent.children.delete(this);
    } else {
      parent.children.add(this);
    }
    this._parent = parent;
  }
  onEulerChanged() {
    this._rotation.fromEuler(this._eulerAngles, true);
    EventSystem.emit(ComponentEvents.CallUpdate, this, true);
  }
  onChanged() {
    EventSystem.emit(ComponentEvents.CallUpdate, this, true);
  }
  UpdateMatrices() {
    this._localToWorldMatrix.compose(this.position, this.rotation, this.scale);
    this._worldToLocalMatrix.copy(this._localToWorldMatrix).invert();
    if (this.parent !== null) {
      this._localToWorldMatrix.premultiply(this.parent._localToWorldMatrix);
    }
    for (const child of this.children) {
      child.UpdateMatrices();
    }
    EventSystem.emit(TransformEvents.Updated);
    EventSystemLocal.emit(TransformEvents.Updated, this);
  }
  Update() {
    this.UpdateMatrices();
    EventSystem.emit(ComponentEvents.CallUpdate, this, false);
  }
  LookAt(target) {
    m1.lookAt(this.position, target, this.up);
    this.rotation.setFromRotationMatrix(m1);
    this.UpdateMatrices();
    this.onChanged();
  }
  LookAtV1(target) {
    this.rotation.lookAt(this.position, target, this.up);
    this.UpdateMatrices();
    this.onChanged();
  }
};
var m1 = new Matrix4();

// src/math/Vector4.ts
var Vector4 = class _Vector4 {
  _x;
  _y;
  _z;
  _w;
  get x() {
    return this._x;
  }
  get y() {
    return this._y;
  }
  get z() {
    return this._z;
  }
  get w() {
    return this._w;
  }
  set x(v2) {
    this._x = v2;
  }
  set y(v2) {
    this._y = v2;
  }
  set z(v2) {
    this._z = v2;
  }
  set w(v2) {
    this._w = v2;
  }
  _elements = new Float32Array(4);
  get elements() {
    this._elements[0] = this._x;
    this._elements[1] = this._y;
    this._elements[2] = this._z;
    this._elements[3] = this._w;
    return this._elements;
  }
  constructor(x2 = 0, y2 = 0, z2 = 0, w2 = 0) {
    this.x = x2;
    this.y = y2;
    this.z = z2;
    this.w = w2;
  }
  set(x2, y2, z2, w2) {
    this.x = x2;
    this.y = y2;
    this.z = z2;
    this.w = w2;
    return this;
  }
  setX(x2) {
    this.x = x2;
    return this;
  }
  setY(y2) {
    this.y = y2;
    return this;
  }
  setZ(z2) {
    this.z = z2;
    return this;
  }
  setW(w2) {
    this.w = w2;
    return this;
  }
  clone() {
    return new _Vector4(this.x, this.y, this.z, this.w);
  }
  copy(v2) {
    return this.set(v2.x, v2.y, v2.z, v2.w);
  }
  applyMatrix4(m2) {
    const x2 = this.x, y2 = this.y, z2 = this.z, w2 = this.w;
    const e2 = m2.elements;
    this.x = e2[0] * x2 + e2[4] * y2 + e2[8] * z2 + e2[12] * w2;
    this.y = e2[1] * x2 + e2[5] * y2 + e2[9] * z2 + e2[13] * w2;
    this.z = e2[2] * x2 + e2[6] * y2 + e2[10] * z2 + e2[14] * w2;
    this.w = e2[3] * x2 + e2[7] * y2 + e2[11] * z2 + e2[15] * w2;
    return this;
  }
  normalize() {
    let x2 = this.x;
    let y2 = this.y;
    let z2 = this.z;
    let w2 = this.w;
    let len = x2 * x2 + y2 * y2 + z2 * z2 + w2 * w2;
    if (len > 0) len = 1 / Math.sqrt(len);
    this.x = x2 * len;
    this.y = y2 * len;
    this.z = z2 * len;
    this.w = w2 * len;
    return this;
  }
  toString() {
    return `(${this.x.toPrecision(2)}, ${this.y.toPrecision(2)}, ${this.z.toPrecision(2)}, ${this.w.toPrecision(2)})`;
  }
};

// src/math/Color.ts
var Color = class _Color {
  constructor(r2 = 0, g2 = 0, b2 = 0, a2 = 1) {
    this.r = r2;
    this.g = g2;
    this.b = b2;
    this.a = a2;
  }
  _elements = new Float32Array([0, 0, 0, 0]);
  get elements() {
    this._elements.set([this.r, this.g, this.b, this.a]);
    return this._elements;
  }
  set(r2, g2, b2, a2) {
    this.r = r2;
    this.g = g2;
    this.b = b2;
    this.a = a2;
  }
  static fromVector(v2) {
    return new _Color(v2.x, v2.y, v2.z, v2 instanceof Vector4 ? v2.w : 0);
  }
};

// src/components/Camera.ts
var Camera = class extends Component {
  backgroundColor = new Color(0, 0, 0, 1);
  projectionMatrix = new Matrix4();
  viewMatrix = new Matrix4();
  static mainCamera;
  near;
  far;
  SetPerspective(fov, aspect, near, far) {
    this.near = near;
    this.far = far;
    this.projectionMatrix.perspectiveLH(fov * (Math.PI / 180), aspect, near, far);
  }
  SetOrthographic(left, right, top, bottom, near, far) {
    this.near = near;
    this.far = far;
    this.projectionMatrix.orthoZO(left, right, top, bottom, near, far);
  }
  Start() {
  }
  Update() {
    this.viewMatrix.copy(this.transform.worldToLocalMatrix);
  }
};

// src/GameObject.ts
var GameObject = class {
  id = Utils.UUID();
  name = "GameObject";
  scene;
  transform;
  componentsArray = [];
  componentsMapped = /* @__PURE__ */ new Map();
  constructor(scene) {
    this.scene = scene;
    this.transform = new Transform(this);
    this.scene.AddGameObject(this);
  }
  AddComponent(component) {
    try {
      let componentInstance = new component(this);
      if (!(componentInstance instanceof Component)) throw Error("Invalid component");
      if (componentInstance instanceof Transform) throw Error("A GameObject can only have one Transform");
      const AddComponentInternal = (component2, instance) => {
        if (!this.componentsMapped.has(component2.name)) this.componentsMapped.set(component2.name, []);
        this.componentsMapped.get(component2.name)?.push(instance);
        this.componentsArray.push(instance);
      };
      AddComponentInternal(component, componentInstance);
      let currentComponent = component;
      let i3 = 0;
      while (i3 < 10) {
        currentComponent = Object.getPrototypeOf(currentComponent);
        if (currentComponent.name === Component.name || currentComponent.name === "") {
          break;
        }
        AddComponentInternal(currentComponent, componentInstance);
        i3++;
      }
      if (componentInstance instanceof Camera && !Camera.mainCamera) Camera.mainCamera = componentInstance;
      if (this.scene.hasStarted) componentInstance.Start();
      return componentInstance;
    } catch (error) {
      throw Error(`Error creating component` + error);
    }
  }
  GetComponent(type) {
    const components = this.GetComponents(type);
    if (components.length > 0) return components[0];
    return null;
  }
  GetComponents(type) {
    return this.componentsMapped.get(type.name) || [];
  }
  Start() {
    for (const component of this.componentsArray) {
      if (!component.hasStarted) {
        component.Start();
        component.hasStarted = true;
      }
    }
  }
  Destroy() {
    for (const component of this.componentsArray) {
      component.Destroy();
    }
    this.componentsArray = [];
    this.componentsMapped.clear();
    this.scene.RemoveGameObject(this);
  }
};

// src/renderer/webgpu/WEBGPURenderer.ts
var adapter = navigator ? await navigator.gpu.requestAdapter() : null;
if (!adapter) throw Error("WEBGPU not supported");
var requiredLimits = {};
for (const key in adapter.limits) requiredLimits[key] = adapter.limits[key];
var device = adapter ? await adapter.requestDevice({
  requiredFeatures: ["timestamp-query"],
  requiredLimits
}) : null;
var WEBGPURenderer = class _WEBGPURenderer {
  static adapter;
  static device;
  static context;
  static presentationFormat;
  static activeCommandEncoder = null;
  constructor(canvas2) {
    if (!adapter || !device) throw Error("WEBGPU not supported");
    const context = canvas2.getContext("webgpu");
    if (!context) throw Error("Could not get WEBGPU context");
    _WEBGPURenderer.adapter = adapter;
    console.log(adapter);
    _WEBGPURenderer.device = device;
    _WEBGPURenderer.presentationFormat = navigator.gpu.getPreferredCanvasFormat();
    context.configure({ device, format: _WEBGPURenderer.presentationFormat });
    _WEBGPURenderer.adapter = adapter;
    _WEBGPURenderer.device = device;
    _WEBGPURenderer.context = context;
    _WEBGPURenderer.context.configure({
      device: _WEBGPURenderer.device,
      format: _WEBGPURenderer.presentationFormat,
      alphaMode: "opaque"
    });
  }
  static GetActiveCommandEncoder() {
    return _WEBGPURenderer.activeCommandEncoder;
  }
  static BeginRenderFrame() {
    if (_WEBGPURenderer.activeCommandEncoder !== null) {
      console.warn("Only one active encoder pipeline is allowed.");
      return;
    }
    _WEBGPURenderer.activeCommandEncoder = _WEBGPURenderer.device.createCommandEncoder();
  }
  static EndRenderFrame() {
    if (_WEBGPURenderer.activeCommandEncoder === null) {
      console.log("There is no active render pass.");
      return;
    }
    _WEBGPURenderer.device.queue.submit([_WEBGPURenderer.activeCommandEncoder.finish()]);
    _WEBGPURenderer.activeCommandEncoder = null;
  }
  static HasActiveFrame() {
    return _WEBGPURenderer.activeCommandEncoder !== null;
  }
};

// src/renderer/Renderer.ts
var Renderer = class _Renderer {
  static type;
  static width;
  static height;
  static activeRenderer;
  static Create(canvas2, type) {
    _Renderer.type = type;
    _Renderer.width = canvas2.width;
    _Renderer.height = canvas2.height;
    if (type === "webgpu") {
      this.activeRenderer = new WEBGPURenderer(canvas2);
      return this.activeRenderer;
    }
    throw Error("Unknown render api type.");
  }
  static get SwapChainFormat() {
    if (_Renderer.type === "webgpu") return WEBGPURenderer.presentationFormat;
    throw Error("Unknown render api type.");
  }
  static BeginRenderFrame() {
    if (_Renderer.type === "webgpu") return WEBGPURenderer.BeginRenderFrame();
    throw Error("Unknown render api type.");
  }
  static EndRenderFrame() {
    if (_Renderer.type === "webgpu") return WEBGPURenderer.EndRenderFrame();
    throw Error("Unknown render api type.");
  }
  static HasActiveFrame() {
    if (_Renderer.type === "webgpu") return WEBGPURenderer.HasActiveFrame();
    throw Error("Unknown render api type.");
  }
};

// src/renderer/RenderGraph.ts
var RenderPass = class {
  name;
  inputs = [];
  outputs = [];
  initialized = false;
  constructor(params) {
    if (params.inputs) this.inputs = params.inputs;
    if (params.outputs) this.outputs = params.outputs;
  }
  async init(resources) {
  }
  execute(resources, ...args) {
  }
  set(data) {
    if (data.inputs) this.inputs = data.inputs;
    if (data.outputs) this.outputs = data.outputs;
  }
};
var ResourcePool = class {
  resources = {};
  setResource(name, resource) {
    this.resources[name] = resource;
  }
  getResource(name) {
    return this.resources[name];
  }
};
var RenderGraph = class {
  passes = [];
  resourcePool = new ResourcePool();
  addPass(pass) {
    this.passes.push(pass);
  }
  async init() {
    const sortedPasses = this.topologicalSort();
    for (const pass of sortedPasses) {
      if (pass.initialized) continue;
      await pass.init(this.resourcePool);
      pass.initialized = true;
    }
  }
  execute() {
    const sortedPasses = this.topologicalSort();
    for (const pass of sortedPasses) {
      if (!pass.initialized) {
        console.log(`didnt execute ${pass.name} because its not initialized`);
        return;
      }
      const inputs = pass.inputs.map((value) => this.resourcePool.getResource(value));
      pass.execute(this.resourcePool, ...inputs, ...pass.outputs);
    }
  }
  topologicalSort() {
    return this.passes;
  }
};

// src/Assets.ts
var Assets = class _Assets {
  static cache = /* @__PURE__ */ new Map();
  static async Load(url, type) {
    const cached = _Assets.cache.get(url);
    if (cached) {
      return cached;
    }
    return fetch(url).then((response) => {
      if (!response.ok) throw Error(`File not found ${url}`);
      if (type === "json") return response.json();
      else if (type === "text") return response.text();
      else if (type === "binary") return response.arrayBuffer();
    }).then((result) => {
      _Assets.cache.set(url, result);
      return result;
    });
  }
};

// src/renderer/webgpu/shaders/deferred/Cull.wgsl
var Cull_default = "./resources/renderer/webgpu/shaders/deferred/Cull.wgsl";

// src/renderer/webgpu/shaders/deferred/CullStructs.wgsl
var CullStructs_default = "./resources/renderer/webgpu/shaders/deferred/CullStructs.wgsl";

// src/renderer/webgpu/shaders/deferred/SettingsStructs.wgsl
var SettingsStructs_default = "./resources/renderer/webgpu/shaders/deferred/SettingsStructs.wgsl";

// src/renderer/webgpu/shaders/deferred/DrawIndirectGBuffer.wgsl
var DrawIndirectGBuffer_default = "./resources/renderer/webgpu/shaders/deferred/DrawIndirectGBuffer.wgsl";

// src/renderer/webgpu/shaders/deferred/DrawGBuffer.wgsl
var DrawGBuffer_default = "./resources/renderer/webgpu/shaders/deferred/DrawGBuffer.wgsl";

// src/renderer/webgpu/shaders/Blit.wgsl
var Blit_default = "./resources/renderer/webgpu/shaders/Blit.wgsl";

// src/renderer/webgpu/shaders/BlitDepth.wgsl
var BlitDepth_default = "./resources/renderer/webgpu/shaders/BlitDepth.wgsl";

// src/renderer/webgpu/shaders/DepthDownsample.wgsl
var DepthDownsample_default = "./resources/renderer/webgpu/shaders/DepthDownsample.wgsl";

// src/renderer/webgpu/shaders/deferred/DeferredLightingPBR.wgsl
var DeferredLightingPBR_default = "./resources/renderer/webgpu/shaders/deferred/DeferredLightingPBR.wgsl";

// src/renderer/ShaderUtils.ts
var ShaderPreprocessor = class {
  static ProcessDefines(code, defines) {
    const coditions = Utils.StringFindAllBetween(code, "#if", "#endif", false);
    for (const condition of coditions) {
      const variable = Utils.StringFindAllBetween(condition, "#if ", "\n")[0];
      const value = condition.replaceAll(`#if ${variable}`, "").replaceAll("#endif", "");
      if (defines[variable] === true) code = code.replaceAll(condition, value);
      else code = code.replaceAll(condition, "");
    }
    return code;
  }
  static async ProcessIncludes(code, url = "./") {
    const basepath = url.substring(url.lastIndexOf("/"), -1) + "/";
    const includes = Utils.StringFindAllBetween(code, "#include", "\n", false);
    for (const includeStr of includes) {
      const filenameArray = Utils.StringFindAllBetween(includeStr, '"', '"', true);
      if (filenameArray.length !== 1) throw Error(`Invalid include ${filenameArray}`);
      const includeFullPath = filenameArray[0];
      const includePath = includeFullPath.substring(includeFullPath.lastIndexOf("/"), -1) + "/";
      const includeFilename = includeFullPath.substring(includeFullPath.lastIndexOf("/")).slice(1);
      const new_path = basepath + includePath + includeFilename;
      const newCode = await Assets.Load(new_path, "text");
      const includedCode = await this.ProcessIncludes(newCode, new_path);
      code = code.replace(includeStr, includedCode + "\n");
    }
    return code;
  }
};
var ShaderLoader = class _ShaderLoader {
  static async Load(shader_url) {
    if (Renderer.type === "webgpu") {
      if (shader_url === "") throw Error(`Invalid shader ${shader_url}`);
      let code = await Assets.Load(shader_url, "text");
      code = await ShaderPreprocessor.ProcessIncludes(code, shader_url);
      return code;
    }
    throw Error("Unknown api");
  }
  static get Cull() {
    return _ShaderLoader.Load(Cull_default);
  }
  static get CullStructs() {
    return _ShaderLoader.Load(CullStructs_default);
  }
  static get SettingsStructs() {
    return _ShaderLoader.Load(SettingsStructs_default);
  }
  static get DepthDownsample() {
    return _ShaderLoader.Load(DepthDownsample_default);
  }
  static get DrawIndirect() {
    return _ShaderLoader.Load(DrawIndirectGBuffer_default);
  }
  static get Draw() {
    return _ShaderLoader.Load(DrawGBuffer_default);
  }
  static get Blit() {
    return _ShaderLoader.Load(Blit_default);
  }
  static get BlitDepth() {
    return _ShaderLoader.Load(BlitDepth_default);
  }
  static get DeferredLighting() {
    return _ShaderLoader.Load(DeferredLightingPBR_default);
  }
};

// src/plugins/ui/UIStats.ts
var Stat = class {
  statContainer;
  constructor(container, label) {
    this.statContainer = document.createElement("div");
    this.statContainer.classList.add("stat");
    container.appendChild(this.statContainer);
    if (label !== null) {
      const labelElement = document.createElement("label");
      labelElement.classList.add("title");
      labelElement.classList.add("title");
      labelElement.textContent = label;
      this.statContainer.append(labelElement);
    }
  }
  Disable() {
    this.statContainer.classList.add("disabled");
  }
  Enable() {
    this.statContainer.classList.remove("disabled");
  }
};
var UIDropdownStat = class extends Stat {
  selectElement;
  constructor(folder, label, options, onChanged, defaultIndex = 0) {
    super(folder.container, label);
    this.selectElement = document.createElement("select");
    this.selectElement.classList.add("value");
    for (let i3 = 0; i3 < options.length; i3++) {
      const option = options[i3];
      const optionElement = document.createElement("option");
      optionElement.value = option;
      optionElement.textContent = option;
      this.selectElement.append(optionElement);
      if (i3 === defaultIndex) {
        this.selectElement.value = option;
      }
    }
    this.statContainer.append(this.selectElement);
    this.selectElement.addEventListener("change", (event) => {
      onChanged(this.selectElement.selectedIndex, event.target.value);
    });
  }
};
var UIButtonStat = class extends Stat {
  button;
  state;
  onText;
  offText;
  constructor(folder, label, onClicked, defaultState = false, onText = "Enable", offText = "Disable") {
    super(folder.container, label);
    this.state = defaultState;
    this.onText = onText;
    this.offText = offText;
    this.button = document.createElement("button");
    this.button.classList.add("value");
    this.button.textContent = defaultState === true ? offText : onText;
    this.statContainer.append(this.button);
    this.button.addEventListener("click", (event) => {
      this.state = !this.state;
      if (this.state === true) this.button.textContent = this.offText;
      else this.button.textContent = this.onText;
      onClicked(this.state);
    });
  }
};
var UISliderStat = class extends Stat {
  constructor(folder, label, min, max, step, defaultValue, callback) {
    super(folder.container, label);
    const container = document.createElement("div");
    container.classList.add("value");
    container.style.display = "inline-flex";
    container.style.alignItems = "center";
    container.style.padding = "0px";
    const sliderElement = document.createElement("input");
    sliderElement.classList.add("slider");
    sliderElement.style.width = "60px";
    sliderElement.style.margin = "0px";
    sliderElement.type = "range";
    sliderElement.min = `${min}`;
    sliderElement.max = `${max}`;
    sliderElement.step = `${step}`;
    sliderElement.value = `${defaultValue}`;
    const textElement = document.createElement("input");
    textElement.style.width = "25px";
    textElement.style.marginLeft = "5px";
    textElement.value = defaultValue.toString();
    textElement.addEventListener("input", (event) => {
      sliderElement.value = textElement.value;
      callback(parseFloat(sliderElement.value));
      if (textElement.value !== "") textElement.value = sliderElement.value;
    });
    sliderElement.addEventListener("input", (event) => {
      callback(parseFloat(sliderElement.value));
      textElement.value = sliderElement.value;
    });
    container.append(sliderElement, textElement);
    this.statContainer.append(container);
  }
};
var UITextStat = class extends Stat {
  textElement;
  previousValue;
  precision;
  unit;
  rolling;
  constructor(folder, label, defaultValue = 0, precision = 0, unit = "", rolling = false) {
    super(folder.container, label);
    this.previousValue = defaultValue;
    this.precision = precision;
    this.unit = unit;
    this.rolling = rolling;
    this.textElement = document.createElement("pre");
    this.textElement.classList.add("value");
    this.textElement.textContent = defaultValue.toFixed(precision);
    this.statContainer.append(this.textElement);
  }
  SetValue(value) {
    if (this.rolling === true) {
      value = this.previousValue * 0.95 + value * 0.05;
    }
    const valueStr = this.precision === 0 ? value.toString() : value.toFixed(this.precision);
    this.textElement.textContent = valueStr + this.unit;
    this.previousValue = value;
  }
  GetValue() {
    return this.previousValue;
  }
  // TODO: Current value
  GetPrecision() {
    return this.precision;
  }
  SetUnit(unit) {
    this.unit = unit;
  }
};
var UIFolder = class extends Stat {
  folderElement;
  container;
  constructor(container, title) {
    super(container instanceof HTMLDivElement ? container : container.container, null);
    this.folderElement = document.createElement("details");
    const folderTitle = document.createElement("summary");
    folderTitle.textContent = title;
    this.container = document.createElement("div");
    this.folderElement.append(folderTitle, this.container);
    this.statContainer.append(this.folderElement);
  }
  SetPosition(position) {
    if (position.left) this.container.style.left = `${position.left}px`;
    if (position.right) this.container.style.right = `${position.right}px`;
    if (position.top) this.container.style.top = `${position.top}px`;
    if (position.bottom) this.container.style.bottom = `${position.bottom}px`;
  }
  Open() {
    this.folderElement.setAttribute("open", "");
  }
};

// src/plugins/Debugger.ts
var _Debugger = class {
  isDebugDepthPassEnabled = false;
  debugDepthMipLevel = 0;
  debugDepthExposure = 0;
  isFrustumCullingEnabled = true;
  isBackFaceCullingEnabled = false;
  isOcclusionCullingEnabled = true;
  isSmallFeaturesCullingEnabled = true;
  dynamicLODErrorThreshold = 1;
  isDynamicLODEnabled = true;
  staticLOD = 20;
  meshletsViewType = 0;
  viewType = 0;
  heightScale = 0.05;
  useHeightMap = false;
  ui;
  renderPassesFolder;
  framePassesStats = /* @__PURE__ */ new Map();
  fps;
  totalMeshlets;
  visibleMeshes;
  triangleCount;
  visibleTriangles;
  gpuTime;
  gpuBufferSizeStat;
  gpuBufferSizeTotal = 0;
  gpuTextureSizeStat;
  gpuTextureSizeTotal = 0;
  constructor() {
    const container = document.createElement("div");
    container.classList.add("stats-panel");
    this.ui = new UIFolder(container, "Debugger");
    this.ui.Open();
    document.body.append(container);
    this.fps = new UITextStat(this.ui, "FPS", 0, 2, "", true);
    this.triangleCount = new UITextStat(this.ui, "Triangles: ");
    this.visibleTriangles = new UITextStat(this.ui, "Visible triangles: ");
    this.gpuTime = new UITextStat(this.ui, "GPU: ", 0, 2, "ms", true);
    this.gpuBufferSizeStat = new UITextStat(this.ui, "GPU buffer size: ", 0, 2);
    this.gpuTextureSizeStat = new UITextStat(this.ui, "GPU texture size: ", 0, 2);
    const meshletsFolder = new UIFolder(this.ui, "Plugin - Meshlets");
    const viewTypeStat2 = new UIDropdownStat(meshletsFolder, "Show:", ["Default", "Meshlets", "Triangles"], (index, value) => {
      this.meshletsViewType = index;
    }, this.meshletsViewType);
    this.totalMeshlets = new UITextStat(meshletsFolder, "Total meshlets");
    this.visibleMeshes = new UITextStat(meshletsFolder, "Visible meshlets: ");
    meshletsFolder.Open();
    const hizFolder = new UIFolder(meshletsFolder, "- Hierarchical Z depth");
    hizFolder.Open();
    const debugDepthMipLevel = new UISliderStat(hizFolder, "Depth mip:", 0, 20, 1, 0, (value) => {
      this.debugDepthMipLevel = value;
    });
    const debugDepthExposure = new UISliderStat(hizFolder, "Depth exposure:", -10, 10, 0.01, 0, (value) => {
      this.debugDepthExposure = value;
    });
    debugDepthMipLevel.Disable();
    debugDepthExposure.Disable();
    const debugDepth = new UIButtonStat(hizFolder, "View depth:", (state) => {
      this.isDebugDepthPassEnabled = state;
      if (this.isDebugDepthPassEnabled === true) {
        debugDepthMipLevel.Enable();
        debugDepthExposure.Enable();
      } else {
        debugDepthMipLevel.Disable();
        debugDepthExposure.Disable();
      }
    });
    const cullingFolder = new UIFolder(meshletsFolder, "- Culling");
    const frustumCulling = new UIButtonStat(cullingFolder, "Frustum culling:", (state) => {
      this.isFrustumCullingEnabled = state;
    }, this.isFrustumCullingEnabled);
    const backFaceCulling = new UIButtonStat(cullingFolder, "Backface culling:", (state) => {
      this.isBackFaceCullingEnabled = state;
    }, this.isBackFaceCullingEnabled);
    const occlusionCulling = new UIButtonStat(cullingFolder, "Occlusion culling:", (state) => {
      this.isOcclusionCullingEnabled = state;
    }, this.isOcclusionCullingEnabled);
    const smallFeatureCulling = new UIButtonStat(cullingFolder, "Small features:", (state) => {
      this.isSmallFeaturesCullingEnabled = state;
    }, this.isSmallFeaturesCullingEnabled);
    const staticLOD = new UISliderStat(cullingFolder, "Static LOD:", 0, this.staticLOD, 1, 0, (state) => {
      this.staticLOD = state;
    });
    staticLOD.Disable();
    const dynamicLODErrorThreshold = new UISliderStat(cullingFolder, "Dynamic LOD error:", 0, 20, 0.01, this.dynamicLODErrorThreshold, (value) => {
      this.dynamicLODErrorThreshold = value;
    });
    const dynamicLOD = new UIButtonStat(cullingFolder, "Dynamic LOD:", (state) => {
      this.isDynamicLODEnabled = state;
      if (this.isDynamicLODEnabled === true) {
        staticLOD.Disable();
        dynamicLODErrorThreshold.Enable();
      } else {
        staticLOD.Enable();
        dynamicLODErrorThreshold.Disable();
      }
    }, this.isDynamicLODEnabled);
    cullingFolder.Open();
    const rendererFolder = new UIFolder(this.ui, "Renderer");
    rendererFolder.Open();
    const viewTypeStat = new UIDropdownStat(rendererFolder, "GBuffer:", ["Lighting", "Albedo Map", "Normal Map", "Metalness", "Roughness", "Emissive"], (index, value) => {
      this.viewType = index;
    }, this.viewType);
    const heightScale = new UISliderStat(rendererFolder, "Height scale:", 0, 1, 0.01, this.heightScale, (state) => {
      this.heightScale = state;
    });
    const useHeightMapStat = new UIButtonStat(rendererFolder, "Use heightmap:", (state) => {
      this.useHeightMap = state;
    }, this.useHeightMap);
    this.renderPassesFolder = new UIFolder(this.ui, "Frame passes");
    this.renderPassesFolder.Open();
  }
  SetPassTime(name, time) {
    let framePass = this.framePassesStats.get(name);
    if (!framePass) {
      framePass = new UITextStat(this.renderPassesFolder, name, 0, 2, "ms", true);
      this.framePassesStats.set(name, framePass);
    }
    framePass.SetValue(time / 1e6);
  }
  FormatBytes(bytes, decimals = 2) {
    const k2 = 1024;
    const sizes = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
    const i3 = Math.floor(Math.log(bytes) / Math.log(k2));
    return { value: parseFloat((bytes / Math.pow(k2, i3)).toFixed(decimals)), rank: sizes[i3] };
  }
  IncrementGPUBufferSize(value) {
    this.gpuBufferSizeTotal += value;
    const formatted = this.FormatBytes(this.gpuBufferSizeTotal, this.gpuBufferSizeStat.GetPrecision());
    this.gpuBufferSizeStat.SetUnit(formatted.rank);
    this.gpuBufferSizeStat.SetValue(formatted.value);
  }
  IncrementGPUTextureSize(value) {
    this.gpuTextureSizeTotal += value;
    const formatted = this.FormatBytes(this.gpuTextureSizeTotal, this.gpuTextureSizeStat.GetPrecision());
    this.gpuTextureSizeStat.SetUnit(formatted.rank);
    this.gpuTextureSizeStat.SetValue(formatted.value);
  }
  SetTotalMeshlets(count) {
    this.totalMeshlets.SetValue(count);
  }
  SetVisibleMeshes(count) {
    this.visibleMeshes.SetValue(count);
  }
  SetTriangleCount(count) {
    this.triangleCount.SetValue(count);
  }
  SetVisibleTriangleCount(count) {
    this.visibleTriangles.SetValue(count);
  }
  SetFPS(count) {
    this.fps.SetValue(count);
    let totalGPUTime = 0;
    for (const [_2, framePass] of this.framePassesStats) {
      totalGPUTime += framePass.GetValue();
    }
    this.gpuTime.SetValue(totalGPUTime);
  }
};
var Debugger = new _Debugger();

// src/renderer/webgpu/WEBGPUBuffer.ts
var BaseBuffer = class {
  id = Utils.UUID();
  buffer;
  size;
  set name(name) {
    this.buffer.label = name;
  }
  get name() {
    return this.buffer.label;
  }
  constructor(sizeInBytes, type) {
    let usage = void 0;
    if (type == 0 /* STORAGE */) usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST;
    else if (type == 1 /* STORAGE_WRITE */) usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST;
    else if (type == 3 /* VERTEX */) usage = GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST;
    else if (type == 4 /* INDEX */) usage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST;
    else if (type == 2 /* UNIFORM */) usage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST;
    else if (type == 5 /* INDIRECT */) usage = GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE;
    else if (type == 10) usage = GPUBufferUsage.INDEX | GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST;
    if (!usage) throw Error("Invalid buffer usage");
    this.buffer = WEBGPURenderer.device.createBuffer({ size: sizeInBytes, usage });
    this.size = sizeInBytes;
  }
  GetBuffer() {
    return this.buffer;
  }
  SetArray(array, bufferOffset = 0, dataOffset, size) {
    WEBGPURenderer.device.queue.writeBuffer(this.buffer, bufferOffset, array, dataOffset, size);
  }
  async GetData(sourceOffset = 0, destinationOffset = 0, size) {
    const readBuffer = WEBGPURenderer.device.createBuffer({
      size: size ? size : this.buffer.size,
      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ
    });
    const commandEncoder = WEBGPURenderer.device.createCommandEncoder();
    commandEncoder.copyBufferToBuffer(this.buffer, sourceOffset, readBuffer, destinationOffset, size ? size : this.buffer.size);
    WEBGPURenderer.device.queue.submit([commandEncoder.finish()]);
    await readBuffer.mapAsync(GPUMapMode.READ);
    const arrayBuffer = readBuffer.getMappedRange().slice(0);
    readBuffer.unmap();
    readBuffer.destroy();
    return arrayBuffer;
  }
};
var WEBGPUBuffer = class extends BaseBuffer {
  constructor(sizeInBytes, type) {
    super(sizeInBytes, type);
  }
};
var WEBGPUDynamicBuffer = class extends BaseBuffer {
  minBindingSize;
  dynamicOffset = 0;
  constructor(sizeInBytes, type, minBindingSize) {
    super(sizeInBytes, type);
    this.minBindingSize = minBindingSize;
  }
};

// src/renderer/Buffer.ts
var Buffer3 = class {
  size;
  set name(name) {
  }
  get name() {
    return "Buffer";
  }
  constructor() {
  }
  static Create(size, type) {
    if (size === 0) throw Error("Tried to create a buffer with size 0");
    Debugger.IncrementGPUBufferSize(size);
    if (Renderer.type === "webgpu") return new WEBGPUBuffer(size, type);
    else throw Error("Renderer type invalid");
  }
  SetArray(array, bufferOffset = 0, dataOffset, size) {
  }
  async GetData(sourceOffset, destinationOffset, size) {
    return new ArrayBuffer(1);
  }
};

// src/math/Vector2.ts
var Vector2 = class _Vector2 {
  _x;
  _y;
  get x() {
    return this._x;
  }
  get y() {
    return this._y;
  }
  set x(v2) {
    this._x = v2;
  }
  set y(v2) {
    this._y = v2;
  }
  _elements = new Float32Array(3);
  get elements() {
    this._elements[0] = this._x;
    this._elements[1] = this._y;
    return this._elements;
  }
  constructor(x2 = 0, y2 = 0) {
    this.x = x2;
    this.y = y2;
  }
  set(x2, y2) {
    this.x = x2;
    this.y = y2;
  }
  mul(v2) {
    if (v2 instanceof _Vector2) this.x *= v2.x, this.y *= v2.y;
    else this.x *= v2, this.y *= v2;
    return this;
  }
  div(v2) {
    if (v2 instanceof _Vector2) this.x /= v2.x, this.y /= v2.y;
    else this.x /= v2, this.y /= v2;
    return this;
  }
  add(v2) {
    if (v2 instanceof _Vector2) this.x += v2.x, this.y += v2.y;
    else this.x += v2, this.y += v2;
    return this;
  }
  sub(v2) {
    if (v2 instanceof _Vector2) this.x -= v2.x, this.y -= v2.y;
    else this.x -= v2, this.y -= v2;
    return this;
  }
  dot(v2) {
    return this.x * v2.x + this.y * v2.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  clone() {
    return new _Vector2(this.x, this.y);
  }
  copy(v2) {
    this.x = v2.x;
    this.y = v2.y;
    return this;
  }
  toString() {
    return `(${this.x.toPrecision(2)}, ${this.y.toPrecision(2)})`;
  }
};

// src/renderer/webgpu/utils/WEBGPUMipsGenerator.ts
var WEBGPUMipsGenerator = class {
  static sampler;
  static module;
  static pipelineByFormat = {};
  static numMipLevels(...sizes) {
    return 1 + Math.log2(Math.max(...sizes)) | 0;
  }
  // TODO: Cannot call this twice because of texture usages
  static generateMips(source) {
    if (!WEBGPURenderer.device) throw Error("WEBGPU not initialized");
    const device2 = WEBGPURenderer.device;
    const sourceBuffer = source.GetBuffer();
    if (!this.module) {
      this.module = device2.createShaderModule({
        label: "textured quad shaders for mip level generation",
        code: `
                    struct VSOutput {
                        @builtin(position) position: vec4f,
                        @location(0) texcoord: vec2f,
                    };
                    
                    @vertex fn vs(@builtin(vertex_index) vertexIndex : u32) -> VSOutput {
                        const pos = array(
                            vec2f( 0.0,  0.0),  // center
                            vec2f( 1.0,  0.0),  // right, center
                            vec2f( 0.0,  1.0),  // center, top
                    
                            // 2st triangle
                            vec2f( 0.0,  1.0),  // center, top
                            vec2f( 1.0,  0.0),  // right, center
                            vec2f( 1.0,  1.0),  // right, top
                        );
                    
                        var vsOutput: VSOutput;
                        let xy = pos[vertexIndex];
                        vsOutput.position = vec4f(xy * 2.0 - 1.0, 0.0, 1.0);
                        vsOutput.texcoord = vec2f(xy.x, 1.0 - xy.y);
                        return vsOutput;
                    }
                    
                    @group(0) @binding(0) var ourSampler: sampler;
                    @group(0) @binding(1) var ourTexture: texture_2d<f32>;
                    
                    @fragment fn fs(fsInput: VSOutput) -> @location(0) vec4f {
                        return textureSample(ourTexture, ourSampler, fsInput.texcoord);
                    }
                `
      });
      this.sampler = device2.createSampler({ minFilter: "linear", magFilter: "linear" });
    }
    if (!this.pipelineByFormat[sourceBuffer.format]) {
      this.pipelineByFormat[sourceBuffer.format] = device2.createRenderPipeline({
        label: "mip level generator pipeline",
        layout: "auto",
        vertex: { module: this.module },
        fragment: { module: this.module, targets: [{ format: sourceBuffer.format }] }
      });
    }
    const pipeline = this.pipelineByFormat[sourceBuffer.format];
    const encoder = device2.createCommandEncoder({ label: "mip gen encoder" });
    const destinationBuffer = device2.createTexture({
      label: "destinationBuffer",
      format: sourceBuffer.format,
      mipLevelCount: this.numMipLevels(source.width, source.height),
      size: [source.width, source.height, 1],
      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT
    });
    let width = sourceBuffer.width;
    let height = sourceBuffer.height;
    encoder.copyTextureToTexture({ texture: sourceBuffer }, { texture: destinationBuffer }, [width, height]);
    let baseMipLevel = 0;
    while (width > 1 || height > 1) {
      width = Math.max(1, width / 2 | 0);
      height = Math.max(1, height / 2 | 0);
      const bindGroup = device2.createBindGroup({
        layout: pipeline.getBindGroupLayout(0),
        entries: [
          { binding: 0, resource: this.sampler },
          { binding: 1, resource: destinationBuffer.createView({ baseMipLevel, mipLevelCount: 1 }) }
        ]
      });
      ++baseMipLevel;
      const renderPassDescriptor = {
        label: "WEBGPUMipsGenerator",
        colorAttachments: [
          {
            view: destinationBuffer.createView({ baseMipLevel, mipLevelCount: 1 }),
            loadOp: "clear",
            storeOp: "store"
          }
        ]
      };
      const pass = encoder.beginRenderPass(renderPassDescriptor);
      pass.setPipeline(pipeline);
      pass.setBindGroup(0, bindGroup);
      pass.draw(6);
      pass.end();
    }
    const commandBuffer = encoder.finish();
    device2.queue.submit([commandBuffer]);
    return destinationBuffer;
  }
};

// src/renderer/webgpu/WEBGPUTexture.ts
var WEBGPUTexture = class _WEBGPUTexture {
  id = Utils.UUID();
  width;
  height;
  depth;
  format;
  type;
  dimension;
  mipLevels;
  buffer;
  viewCache = /* @__PURE__ */ new Map();
  currentLayer = 0;
  currentMip = 0;
  activeMipCount = 1;
  constructor(width, height, depth, format, type, dimension, mipLevels) {
    let textureUsage = GPUTextureUsage.COPY_DST;
    let textureType = GPUTextureUsage.TEXTURE_BINDING;
    if (!type) textureType = GPUTextureUsage.TEXTURE_BINDING;
    else if (type === 1 /* DEPTH */) textureType = GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC;
    else if (type === 2 /* RENDER_TARGET */) textureType = GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC;
    else if (type === 3 /* RENDER_TARGET_STORAGE */) textureType = GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_SRC;
    else throw Error(`Unknown texture format ${format}`);
    let dim = "2d";
    if (dimension === "1d") dim = "1d";
    else if (dimension === "3d") dim = "3d";
    this.buffer = WEBGPURenderer.device.createTexture({
      size: [width, height, depth],
      dimension: dim,
      format,
      usage: textureUsage | textureType,
      mipLevelCount: mipLevels
    });
    this.width = width;
    this.height = height;
    this.depth = depth;
    this.format = format;
    this.type = type;
    this.dimension = dimension;
    this.mipLevels = mipLevels;
  }
  GetBuffer() {
    return this.buffer;
  }
  GetView() {
    const key = `${this.currentLayer}-${this.currentMip}`;
    let view = this.viewCache.get(key);
    if (!view) {
      view = this.buffer.createView({
        dimension: this.dimension,
        baseArrayLayer: this.currentLayer,
        arrayLayerCount: 1,
        baseMipLevel: this.currentMip,
        mipLevelCount: this.activeMipCount
      });
      this.viewCache.set(key, view);
    }
    return view;
  }
  GenerateMips() {
    this.buffer = WEBGPUMipsGenerator.generateMips(this);
  }
  SetActiveLayer(layer) {
    if (layer > this.depth) throw Error("Active layer cannot be bigger than depth size");
    this.currentLayer = layer;
  }
  GetActiveLayer() {
    return this.currentLayer;
  }
  SetActiveMip(mip) {
    if (mip > this.mipLevels) throw Error("Active mip cannot be bigger than mip levels size");
    this.currentMip = mip;
  }
  GetActiveMip() {
    return this.currentMip;
  }
  SetActiveMipCount(mipCount) {
    return this.activeMipCount = mipCount;
  }
  GetActiveMipCount() {
    return this.activeMipCount;
  }
  Destroy() {
    this.buffer.destroy();
  }
  // Format and types are very limited for now
  // https://github.com/gpuweb/gpuweb/issues/2322
  static FromImageBitmap(imageBitmap, width, height, format, flipY) {
    const texture = new _WEBGPUTexture(width, height, 1, format, 2 /* RENDER_TARGET */, "2d", 1);
    WEBGPURenderer.device.queue.copyExternalImageToTexture(
      { source: imageBitmap, flipY },
      { texture: texture.GetBuffer() },
      [imageBitmap.width, imageBitmap.height]
    );
    return texture;
  }
};

// src/math/BoundingVolume.ts
var BoundingVolume = class _BoundingVolume {
  min;
  max;
  center;
  radius;
  constructor(min = new Vector3(Infinity, Infinity, Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity), center = new Vector3(), radius = 0) {
    this.min = min;
    this.max = max;
    this.center = center;
    this.radius = radius;
  }
  static FromVertices(vertices) {
    let maxX = -Infinity;
    let maxY = -Infinity;
    let maxZ = -Infinity;
    let minX = Infinity;
    let minY = Infinity;
    let minZ = Infinity;
    for (let i3 = 0; i3 < vertices.length; i3 += 3) {
      maxX = Math.max(maxX, vertices[i3]);
      minX = Math.min(minX, vertices[i3]);
      maxY = Math.max(maxY, vertices[i3 + 1]);
      minY = Math.min(minY, vertices[i3 + 1]);
      maxZ = Math.max(maxZ, vertices[i3 + 2]);
      minZ = Math.min(minZ, vertices[i3 + 2]);
    }
    const centerX = minX + (maxX - minX) / 2;
    const centerY = minY + (maxY - minY) / 2;
    const centerZ = minZ + (maxZ - minZ) / 2;
    const newCenter = new Vector3(centerX, centerY, centerZ);
    const halfWidth = (maxX - minX) / 2;
    const halfHeight = (maxY - minY) / 2;
    const halfDepth = (maxZ - minZ) / 2;
    const newRadius = Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight + halfDepth * halfDepth);
    return new _BoundingVolume(
      new Vector3(minX, minY, minZ),
      new Vector3(maxX, maxY, maxZ),
      newCenter,
      newRadius
    );
  }
};

// src/Geometry.ts
var GeometryAttribute = class {
  array;
  buffer;
  constructor(array, type) {
    if (array.length === 0) throw Error("GeometryAttribute data is empty");
    this.array = array;
    this.buffer = Buffer3.Create(array.byteLength, type);
    this.buffer.SetArray(this.array);
  }
  GetBuffer() {
    return this.buffer;
  }
};
var VertexAttribute = class extends GeometryAttribute {
  constructor(array) {
    super(array, 3 /* VERTEX */);
  }
};
var InterleavedVertexAttribute = class _InterleavedVertexAttribute {
  constructor(array, stride) {
    this.array = array;
    this.stride = stride;
  }
  static fromArrays(attributes, inputStrides, outputStrides) {
    function stridedCopy(target, values, offset2, inputStride, outputStride, interleavedStride2) {
      let writeIndex = offset2;
      for (let i3 = 0; i3 < values.length; i3 += inputStride) {
        for (let j2 = 0; j2 < inputStride && i3 + j2 < values.length; j2++) {
          target[writeIndex + j2] = values[i3 + j2];
        }
        for (let j2 = inputStride; j2 < outputStride; j2++) {
          target[writeIndex + j2] = 0;
        }
        writeIndex += interleavedStride2;
      }
    }
    if (!outputStrides) outputStrides = inputStrides;
    const interleavedStride = outputStrides.reduce((a2, b2) => a2 + b2, 0);
    let totalLength = 0;
    for (let i3 = 0; i3 < attributes.length; i3++) {
      totalLength += attributes[i3].length / inputStrides[i3] * outputStrides[i3];
    }
    const interleavedArray = new Float32Array(totalLength);
    let offset = 0;
    for (let i3 = 0; i3 < attributes.length; i3++) {
      const attribute = attributes[i3];
      const inputStride = inputStrides[i3];
      const outputStride = outputStrides[i3];
      stridedCopy(interleavedArray, attribute, offset, inputStride, outputStride, interleavedStride);
      offset += outputStride;
    }
    return new _InterleavedVertexAttribute(interleavedArray, interleavedStride);
  }
};
var IndexAttribute = class extends GeometryAttribute {
  constructor(array) {
    super(array, 4 /* INDEX */);
  }
};
var Geometry = class _Geometry {
  id = Utils.UUID();
  index;
  attributes = /* @__PURE__ */ new Map();
  enableShadows = true;
  _boundingVolume;
  get boundingVolume() {
    const positions = this.attributes.get("position");
    if (!positions) throw Error("Geometry has no position attribute");
    if (!this._boundingVolume) this._boundingVolume = BoundingVolume.FromVertices(positions.array);
    return this._boundingVolume;
  }
  ComputeBoundingVolume() {
    const positions = this.attributes.get("position");
    if (!positions) throw Error("Geometry has no position attribute");
    this._boundingVolume = BoundingVolume.FromVertices(positions.array);
  }
  Clone() {
    const clone = new _Geometry();
    for (const attribute of this.attributes) {
      clone.attributes.set(attribute[0], attribute[1]);
    }
    if (this.index) {
      clone.index = new IndexAttribute(this.index.array);
    }
    clone.enableShadows = this.enableShadows;
    return clone;
  }
  ApplyOperationToVertices(operation, vec) {
    let verts = this.attributes.get("position");
    if (!verts) throw Error("No verts");
    if (verts instanceof InterleavedVertexAttribute) throw Error("InterleavedVertexAttribute not implemented.");
    const center = this.boundingVolume.center;
    let vertsCentered = new Float32Array(verts.array.length);
    for (let i3 = 0; i3 < verts.array.length; i3 += 3) {
      if (operation === "+") {
        vertsCentered[i3 + 0] = verts.array[i3 + 0] + vec.x;
        vertsCentered[i3 + 1] = verts.array[i3 + 1] + vec.y;
        vertsCentered[i3 + 2] = verts.array[i3 + 2] + vec.z;
      } else if (operation === "*") {
        vertsCentered[i3 + 0] = verts.array[i3 + 0] * vec.x;
        vertsCentered[i3 + 1] = verts.array[i3 + 1] * vec.y;
        vertsCentered[i3 + 2] = verts.array[i3 + 2] * vec.z;
      }
    }
    const geometryCentered = this.Clone();
    geometryCentered.attributes.set("position", new VertexAttribute(vertsCentered));
    return geometryCentered;
  }
  Center() {
    const center = this.boundingVolume.center;
    console.log("center", center);
    return this.ApplyOperationToVertices("+", center.mul(-1));
  }
  Scale(scale2) {
    return this.ApplyOperationToVertices("*", scale2);
  }
  ComputeNormals() {
    let posAttrData = this.attributes.get("position")?.array;
    let indexAttrData = this.index?.array;
    if (!posAttrData || !indexAttrData) throw Error("Cannot compute normals without vertices and indices");
    let normalAttrData = new Float32Array(posAttrData.length);
    let trianglesCount = indexAttrData.length / 3;
    let point1 = new Vector3(0, 1, 0);
    let point2 = new Vector3(0, 1, 0);
    let point3 = new Vector3(0, 1, 0);
    let crossA = new Vector3(0, 1, 0);
    let crossB = new Vector3(0, 1, 0);
    for (let i3 = 0; i3 < trianglesCount; i3++) {
      let index1 = indexAttrData[i3 * 3];
      let index2 = indexAttrData[i3 * 3 + 1];
      let index3 = indexAttrData[i3 * 3 + 2];
      point1.set(posAttrData[index1 * 3], posAttrData[index1 * 3 + 1], posAttrData[index1 * 3 + 2]);
      point2.set(posAttrData[index2 * 3], posAttrData[index2 * 3 + 1], posAttrData[index2 * 3 + 2]);
      point3.set(posAttrData[index3 * 3], posAttrData[index3 * 3 + 1], posAttrData[index3 * 3 + 2]);
      crossA.copy(point1).sub(point2).normalize();
      crossB.copy(point1).sub(point3).normalize();
      let normal = crossA.clone().cross(crossB).normalize();
      normalAttrData[index1 * 3] = normalAttrData[index2 * 3] = normalAttrData[index3 * 3] = normal.x;
      normalAttrData[index1 * 3 + 1] = normalAttrData[index2 * 3 + 1] = normalAttrData[index3 * 3 + 1] = normal.y;
      normalAttrData[index1 * 3 + 2] = normalAttrData[index2 * 3 + 2] = normalAttrData[index3 * 3 + 2] = normal.z;
    }
    let normals = this.attributes.get("normal");
    if (!normals) normals = new VertexAttribute(normalAttrData);
    this.attributes.set("normal", normals);
  }
  static ToNonIndexed(vertices, indices) {
    const itemSize = 3;
    const array2 = new Float32Array(indices.length * itemSize);
    let index = 0, index2 = 0;
    for (let i3 = 0, l2 = indices.length; i3 < l2; i3++) {
      index = indices[i3] * itemSize;
      for (let j2 = 0; j2 < itemSize; j2++) {
        array2[index2++] = vertices[index++];
      }
    }
    return array2;
  }
  static Cube() {
    const vertices = new Float32Array([
      0.5,
      0.5,
      0.5,
      0.5,
      0.5,
      -0.5,
      0.5,
      -0.5,
      0.5,
      0.5,
      -0.5,
      -0.5,
      -0.5,
      0.5,
      -0.5,
      -0.5,
      0.5,
      0.5,
      -0.5,
      -0.5,
      -0.5,
      -0.5,
      -0.5,
      0.5,
      -0.5,
      0.5,
      -0.5,
      0.5,
      0.5,
      -0.5,
      -0.5,
      0.5,
      0.5,
      0.5,
      0.5,
      0.5,
      -0.5,
      -0.5,
      0.5,
      0.5,
      -0.5,
      0.5,
      -0.5,
      -0.5,
      -0.5,
      0.5,
      -0.5,
      -0.5,
      -0.5,
      0.5,
      0.5,
      0.5,
      0.5,
      0.5,
      -0.5,
      -0.5,
      0.5,
      0.5,
      -0.5,
      0.5,
      0.5,
      0.5,
      -0.5,
      -0.5,
      0.5,
      -0.5,
      0.5,
      -0.5,
      -0.5,
      -0.5,
      -0.5,
      -0.5
    ]);
    const uvs = new Float32Array([
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      0
    ]);
    const normals = new Float32Array([
      1,
      0,
      0,
      1,
      0,
      -0,
      1,
      0,
      -0,
      1,
      0,
      -0,
      -1,
      0,
      0,
      -1,
      0,
      -0,
      -1,
      0,
      -0,
      -1,
      0,
      -0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      -1,
      0,
      -0,
      -1,
      0,
      -0,
      -1,
      0,
      -0,
      -1,
      0,
      0,
      -0,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      -1,
      0,
      0,
      -1,
      0,
      0,
      -1,
      0,
      0,
      -1
    ]);
    const indices = new Uint32Array([
      0,
      2,
      1,
      2,
      3,
      1,
      4,
      6,
      5,
      6,
      7,
      5,
      8,
      10,
      9,
      10,
      11,
      9,
      12,
      14,
      13,
      14,
      15,
      13,
      16,
      18,
      17,
      18,
      19,
      17,
      20,
      22,
      21,
      22,
      23,
      21
    ]);
    const geometry = new _Geometry();
    geometry.attributes.set("position", new VertexAttribute(vertices));
    geometry.attributes.set("uv", new VertexAttribute(uvs));
    geometry.attributes.set("normal", new VertexAttribute(normals));
    geometry.index = new IndexAttribute(indices);
    return geometry;
  }
  static Plane() {
    const vertices = new Float32Array([
      -1,
      -1,
      0,
      // Bottom left
      1,
      -1,
      0,
      // Bottom right
      1,
      1,
      0,
      // Top right
      -1,
      1,
      0
      // Top left
    ]);
    const indices = new Uint32Array([
      0,
      1,
      2,
      // First triangle (bottom left to top right)
      2,
      3,
      0
      // Second triangle (top right to top left)
    ]);
    const uvs = new Float32Array([
      0,
      1,
      // Bottom left (now top left)
      1,
      1,
      // Bottom right (now top right)
      1,
      0,
      // Top right (now bottom right)
      0,
      0
      // Top left (now bottom left)
    ]);
    const normals = new Float32Array([
      0,
      0,
      1,
      // Normal for bottom left vertex
      0,
      0,
      1,
      // Normal for bottom right vertex
      0,
      0,
      1,
      // Normal for top right vertex
      0,
      0,
      1
      // Normal for top left vertex
    ]);
    const geometry = new _Geometry();
    geometry.attributes.set("position", new VertexAttribute(vertices));
    geometry.attributes.set("normal", new VertexAttribute(normals));
    geometry.attributes.set("uv", new VertexAttribute(uvs));
    geometry.index = new IndexAttribute(indices);
    return geometry;
  }
  static Sphere() {
    const radius = 0.5;
    const phiStart = 0;
    const phiLength = Math.PI * 2;
    const thetaStart = 0;
    const thetaLength = Math.PI;
    let widthSegments = 16;
    let heightSegments = 8;
    widthSegments = Math.max(3, Math.floor(widthSegments));
    heightSegments = Math.max(2, Math.floor(heightSegments));
    const thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);
    let index = 0;
    const grid = [];
    const vertex = new Vector3();
    const normal = new Vector3();
    const indices = [];
    const vertices = [];
    const normals = [];
    const uvs = [];
    for (let iy = 0; iy <= heightSegments; iy++) {
      const verticesRow = [];
      const v2 = iy / heightSegments;
      let uOffset = 0;
      if (iy === 0 && thetaStart === 0) uOffset = 0.5 / widthSegments;
      else if (iy === heightSegments && thetaEnd === Math.PI) uOffset = -0.5 / widthSegments;
      for (let ix = 0; ix <= widthSegments; ix++) {
        const u2 = ix / widthSegments;
        vertex.x = -radius * Math.cos(phiStart + u2 * phiLength) * Math.sin(thetaStart + v2 * thetaLength);
        vertex.y = radius * Math.cos(thetaStart + v2 * thetaLength);
        vertex.z = radius * Math.sin(phiStart + u2 * phiLength) * Math.sin(thetaStart + v2 * thetaLength);
        vertices.push(vertex.x, vertex.y, vertex.z);
        normal.copy(vertex).normalize();
        normals.push(normal.x, normal.y, normal.z);
        uvs.push(u2 + uOffset, 1 - v2);
        verticesRow.push(index++);
      }
      grid.push(verticesRow);
    }
    for (let iy = 0; iy < heightSegments; iy++) {
      for (let ix = 0; ix < widthSegments; ix++) {
        const a2 = grid[iy][ix + 1];
        const b2 = grid[iy][ix];
        const c2 = grid[iy + 1][ix];
        const d2 = grid[iy + 1][ix + 1];
        if (iy !== 0 || thetaStart > 0) indices.push(a2, b2, d2);
        if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b2, c2, d2);
      }
    }
    const geometry = new _Geometry();
    geometry.index = new IndexAttribute(new Uint32Array(indices));
    geometry.attributes.set("position", new VertexAttribute(new Float32Array(vertices)));
    geometry.attributes.set("normal", new VertexAttribute(new Float32Array(normals)));
    geometry.attributes.set("uv", new VertexAttribute(new Float32Array(uvs)));
    return geometry;
  }
};

// src/renderer/webgpu/WEBGPUTimestampQuery.ts
var WEBGPUTimestampQuery = class {
  static querySet;
  static resolveBuffer;
  static resultBuffer;
  static isTimestamping = false;
  static links = /* @__PURE__ */ new Map();
  static currentLinkIndex = 0;
  static BeginRenderTimestamp(name) {
    if (this.links.has(name)) return void 0;
    if (!navigator.userAgent.toLowerCase().includes("chrome")) return void 0;
    if (this.isTimestamping === true) throw Error("Already timestamping");
    if (!this.querySet) {
      this.querySet = WEBGPURenderer.device.createQuerySet({
        type: "timestamp",
        count: 200
      });
    }
    if (!this.resolveBuffer) {
      this.resolveBuffer = WEBGPURenderer.device.createBuffer({
        size: this.querySet.count * 8,
        usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_SRC
      });
    }
    if (!this.resultBuffer) {
      this.resultBuffer = WEBGPURenderer.device.createBuffer({
        size: this.querySet.count * 8,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ
      });
    }
    this.isTimestamping = true;
    const currentLinkIndex = this.currentLinkIndex;
    this.currentLinkIndex += 2;
    this.links.set(name, currentLinkIndex);
    return { querySet: this.querySet, beginningOfPassWriteIndex: currentLinkIndex, endOfPassWriteIndex: currentLinkIndex + 1 };
  }
  static EndRenderTimestamp() {
    if (this.isTimestamping === false) return;
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    if (this.resultBuffer.mapState === "unmapped") {
      activeCommandEncoder.resolveQuerySet(this.querySet, 0, this.querySet.count, this.resolveBuffer, 0);
      activeCommandEncoder.copyBufferToBuffer(this.resolveBuffer, 0, this.resultBuffer, 0, this.resultBuffer.size);
    }
    this.isTimestamping = false;
  }
  static async GetResult() {
    if (!this.resultBuffer || this.resultBuffer.mapState !== "unmapped") return;
    await this.resultBuffer.mapAsync(GPUMapMode.READ);
    const arrayBuffer = this.resultBuffer.getMappedRange().slice(0);
    const times = new BigInt64Array(arrayBuffer);
    let visited = {};
    let frameTimes = /* @__PURE__ */ new Map();
    for (const [name, num] of this.links) {
      if (visited[name] === true) continue;
      const duration = Number(times[num + 1] - times[num]);
      frameTimes.set(name, duration);
      visited[name] = true;
    }
    this.resultBuffer.unmap();
    this.currentLinkIndex = 0;
    this.links.clear();
    return frameTimes;
  }
};

// src/renderer/webgpu/WEBGPURendererContext.ts
var WEBGPURendererContext = class {
  static activeRenderPass = null;
  static BeginRenderPass(name, renderTargets, depthTarget, timestamp) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    if (this.activeRenderPass) throw Error("There is already an active render pass");
    const renderPassDescriptor = { colorAttachments: [], label: "RenderPassDescriptor: " + name };
    if (timestamp === true) renderPassDescriptor.timestampWrites = WEBGPUTimestampQuery.BeginRenderTimestamp(name);
    const attachments = [];
    for (const renderTarget of renderTargets) {
      attachments.push({
        view: renderTarget.target ? renderTarget.target.GetView() : WEBGPURenderer.context.getCurrentTexture().createView(),
        clearValue: renderTarget.color,
        loadOp: renderTarget.clear ? "clear" : "load",
        storeOp: "store"
      });
    }
    renderPassDescriptor.colorAttachments = attachments;
    if (depthTarget?.target) {
      renderPassDescriptor.depthStencilAttachment = {
        view: depthTarget.target.GetView(),
        depthClearValue: 1,
        depthLoadOp: depthTarget.clear ? "clear" : "load",
        depthStoreOp: "store"
      };
    }
    this.activeRenderPass = activeCommandEncoder.beginRenderPass(renderPassDescriptor);
    this.activeRenderPass.label = "RenderPass: " + name;
  }
  static EndRenderPass() {
    if (!this.activeRenderPass) throw Error("No active render pass");
    this.activeRenderPass.end();
    this.activeRenderPass = null;
    WEBGPUTimestampQuery.EndRenderTimestamp();
  }
  static DrawGeometry(geometry, shader, instanceCount = 1) {
    if (!this.activeRenderPass) throw Error("No active render pass");
    shader.OnPreRender();
    if (!shader.pipeline) throw Error("Shader doesnt have a pipeline");
    this.activeRenderPass.setPipeline(shader.pipeline);
    for (let i3 = 0; i3 < shader.bindGroups.length; i3++) {
      let dynamicOffsets = [];
      for (const buffer of shader.bindGroupsInfo[i3].buffers) {
        if (buffer instanceof WEBGPUDynamicBuffer) {
          dynamicOffsets.push(buffer.dynamicOffset);
        }
      }
      this.activeRenderPass.setBindGroup(i3, shader.bindGroups[i3], dynamicOffsets);
    }
    for (const [name, attribute] of geometry.attributes) {
      const attributeSlot = shader.GetAttributeSlot(name);
      if (attributeSlot === void 0) continue;
      const attributeBuffer = attribute.buffer;
      this.activeRenderPass.setVertexBuffer(attributeSlot, attributeBuffer.GetBuffer());
    }
    if (!shader.params.topology || shader.params.topology === "triangle-list" /* Triangles */) {
      if (!geometry.index) {
        const positions = geometry.attributes.get("position");
        this.activeRenderPass.draw(positions.GetBuffer().size / 3 / 4, instanceCount);
      } else {
        const indexBuffer = geometry.index.buffer;
        this.activeRenderPass.setIndexBuffer(indexBuffer.GetBuffer(), "uint32");
        this.activeRenderPass.drawIndexed(indexBuffer.size / 4, instanceCount);
      }
    } else if (shader.params.topology === "line-list" /* Lines */) {
      const positions = geometry.attributes.get("position");
      this.activeRenderPass.draw(positions.GetBuffer().size / 3 / 4, instanceCount);
    }
  }
  static DrawIndirect(geometry, shader, indirectBuffer, indirectOffset) {
    if (!this.activeRenderPass) throw Error("No active render pass");
    shader.OnPreRender();
    if (!shader.pipeline) throw Error("Shader doesnt have a pipeline");
    this.activeRenderPass.setPipeline(shader.pipeline);
    for (let i3 = 0; i3 < shader.bindGroups.length; i3++) {
      let dynamicOffsetsV2 = [];
      for (const buffer of shader.bindGroupsInfo[i3].buffers) {
        if (buffer instanceof WEBGPUDynamicBuffer) {
          dynamicOffsetsV2.push(buffer.dynamicOffset);
        }
      }
      this.activeRenderPass.setBindGroup(i3, shader.bindGroups[i3], dynamicOffsetsV2);
    }
    for (const [name, attribute] of geometry.attributes) {
      const attributeSlot = shader.GetAttributeSlot(name);
      if (attributeSlot === void 0) continue;
      const attributeBuffer = attribute.buffer;
      this.activeRenderPass.setVertexBuffer(attributeSlot, attributeBuffer.GetBuffer());
    }
    if (!geometry.index) {
      this.activeRenderPass.drawIndirect(indirectBuffer.GetBuffer(), indirectOffset);
    } else {
      const indexBuffer = geometry.index.buffer;
      this.activeRenderPass.setIndexBuffer(indexBuffer.GetBuffer(), "uint32");
      this.activeRenderPass.drawIndexedIndirect(indirectBuffer.GetBuffer(), indirectOffset);
    }
  }
  static SetViewport(x2, y2, width, height, minDepth, maxDepth) {
    if (!this.activeRenderPass) throw Error("No active render pass");
    this.activeRenderPass.setViewport(x2, y2, width, height, minDepth, maxDepth);
  }
  static SetScissor(x2, y2, width, height) {
    if (!this.activeRenderPass) throw Error("No active render pass");
    this.activeRenderPass.setScissorRect(x2, y2, width, height);
  }
  static CopyBufferToBuffer(source, destination, sourceOffset, destinationOffset, size) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    activeCommandEncoder.copyBufferToBuffer(source.GetBuffer(), sourceOffset, destination.GetBuffer(), destinationOffset, size);
  }
  // CopyTexture(Texture src, int srcElement, int srcMip, Texture dst, int dstElement, int dstMip);
  static CopyTextureToTexture(source, destination, srcMip, dstMip, size) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    const extents = size ? size : [source.width, source.height, source.depth];
    activeCommandEncoder.copyTextureToTexture({ texture: source.GetBuffer(), mipLevel: srcMip }, { texture: destination.GetBuffer(), mipLevel: dstMip }, extents);
  }
  static CopyTextureToBuffer(source, destination, srcMip, size) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    const extents = size ? size : [source.width, source.height, source.depth];
    activeCommandEncoder.copyTextureToBuffer({ texture: source.GetBuffer(), mipLevel: srcMip }, { buffer: destination.GetBuffer(), bytesPerRow: source.width * 4 }, extents);
  }
  static CopyTextureToTextureV2(source, destination, srcMip, dstMip, size, depth) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    const extents = size ? size : [source.width, source.height, source.depth];
    activeCommandEncoder.copyTextureToTexture(
      { texture: source.GetBuffer(), mipLevel: srcMip, origin: { x: 0, y: 0, z: 0 } },
      { texture: destination.GetBuffer(), mipLevel: dstMip, origin: { x: 0, y: 0, z: depth ? depth : 0 } },
      extents
    );
  }
  static CopyTextureToTextureV3(source, destination, copySize) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    const sourceParameters = { texture: source.texture.GetBuffer(), mipLevel: source.mipLevel, origin: source.origin };
    const destinationParameters = { texture: destination.texture.GetBuffer(), mipLevel: destination.mipLevel, origin: destination.origin };
    const extents = copySize ? copySize : [source.texture.width, source.texture.height, source.texture.depth];
    activeCommandEncoder.copyTextureToTexture(sourceParameters, destinationParameters, extents);
  }
  static ClearBuffer(buffer, offset, size) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    activeCommandEncoder.clearBuffer(buffer.GetBuffer(), offset, size);
  }
};

// src/renderer/RendererContext.ts
var RendererContext = class {
  constructor() {
  }
  static BeginRenderPass(name, renderTargets, depthTarget, timestamp = false) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.BeginRenderPass(name, renderTargets, depthTarget, timestamp);
    else throw Error("Unknown render api type.");
  }
  static EndRenderPass() {
    if (Renderer.type === "webgpu") WEBGPURendererContext.EndRenderPass();
    else throw Error("Unknown render api type.");
  }
  static SetViewport(x2, y2, width, height, minDepth = 0, maxDepth = 1) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.SetViewport(x2, y2, width, height, minDepth, maxDepth);
    else throw Error("Unknown render api type.");
  }
  static SetScissor(x2, y2, width, height) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.SetScissor(x2, y2, width, height);
    else throw Error("Unknown render api type.");
  }
  static DrawGeometry(geometry, shader, instanceCount) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.DrawGeometry(geometry, shader, instanceCount);
    else throw Error("Unknown render api type.");
  }
  static DrawIndirect(geometry, shader, indirectBuffer, indirectOffset = 0) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.DrawIndirect(geometry, shader, indirectBuffer, indirectOffset);
    else throw Error("Unknown render api type.");
  }
  static CopyBufferToBuffer(source, destination, sourceOffset = 0, destinationOffset = 0, size = void 0) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.CopyBufferToBuffer(source, destination, sourceOffset, destinationOffset, size ? size : source.size);
    else throw Error("Unknown render api type.");
  }
  static CopyTextureToTexture(source, destination, srcMip = 0, dstMip = 0, size) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.CopyTextureToTexture(source, destination, srcMip, dstMip, size);
    else throw Error("Unknown render api type.");
  }
  static CopyTextureToBuffer(source, destination, srcMip, size) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.CopyTextureToBuffer(source, destination, srcMip, size);
    else throw Error("Unknown render api type.");
  }
  static CopyTextureToTextureV2(source, destination, srcMip = 0, dstMip = 0, size, depth) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.CopyTextureToTextureV2(source, destination, srcMip, dstMip, size, depth);
    else throw Error("Unknown render api type.");
  }
  static CopyTextureToTextureV3(source, destination, copySize) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.CopyTextureToTextureV3(source, destination, copySize);
    else throw Error("Unknown render api type.");
  }
  static ClearBuffer(buffer, offset = 0, size) {
    if (Renderer.type === "webgpu") WEBGPURendererContext.ClearBuffer(buffer, offset, size ? size : buffer.size);
    else throw Error("Unknown render api type.");
  }
};

// src/renderer/webgpu/WEBGPUTextureSampler.ts
var WEBGPUTextureSampler = class {
  params;
  sampler;
  constructor(params) {
    this.params = params;
    const samplerDescriptor = {};
    if (params && params.minFilter) samplerDescriptor.minFilter = params.minFilter;
    if (params && params.magFilter) samplerDescriptor.magFilter = params.magFilter;
    if (params && params.mipmapFilter) samplerDescriptor.mipmapFilter = params.mipmapFilter;
    if (params && params.addressModeU) samplerDescriptor.addressModeU = params.addressModeU;
    if (params && params.addressModeV) samplerDescriptor.addressModeV = params.addressModeV;
    if (params && params.compare) samplerDescriptor.compare = params.compare;
    if (params && params.maxAnisotropy) samplerDescriptor.maxAnisotropy = params.maxAnisotropy;
    this.sampler = WEBGPURenderer.device.createSampler(samplerDescriptor);
  }
  GetBuffer() {
    return this.sampler;
  }
};

// src/renderer/TextureSampler.ts
var defaultSamplerParams = {
  magFilter: "linear",
  minFilter: "linear",
  mipmapFilter: "linear",
  addressModeU: "repeat",
  addressModeV: "repeat",
  compare: void 0,
  maxAnisotropy: 1
};
var TextureSampler = class {
  params;
  static Create(params) {
    const samplerParams = Object.assign({}, defaultSamplerParams, params);
    if (Renderer.type === "webgpu") return new WEBGPUTextureSampler(samplerParams);
    throw Error("Renderer type invalid");
  }
};

// src/renderer/webgpu/utils/WEBGBPUBlit.ts
var i = setInterval(async () => {
  if (Renderer.type === "webgpu") {
    WEBGPUBlit.blitShader = await Shader.Create({
      code: await ShaderLoader.Blit,
      colorOutputs: [{ format: Renderer.SwapChainFormat }],
      attributes: {
        position: { location: 0, size: 3, type: "vec3" },
        normal: { location: 1, size: 3, type: "vec3" },
        uv: { location: 2, size: 2, type: "vec2" }
      },
      uniforms: {
        texture: { group: 0, binding: 0, type: "texture" },
        textureSampler: { group: 0, binding: 1, type: "sampler" },
        mip: { group: 0, binding: 2, type: "storage" },
        uv_scale: { group: 0, binding: 3, type: "storage" }
      }
    });
    const textureSampler = TextureSampler.Create();
    WEBGPUBlit.blitShader.SetSampler("textureSampler", textureSampler);
    WEBGPUBlit.blitShader.SetValue("mip", 0);
    clearInterval(i);
  }
}, 100);
var WEBGPUBlit = class {
  static blitShader;
  static blitGeometry;
  static Blit(source, destination, width, height, uv_scale) {
    if (!this.blitShader) throw Error("Blit shader not created");
    if (!this.blitGeometry) this.blitGeometry = Geometry.Plane();
    this.blitShader.SetTexture("texture", source);
    this.blitShader.SetArray("uv_scale", uv_scale.elements);
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) Renderer.BeginRenderFrame();
    RendererContext.BeginRenderPass("Blit", [{ target: destination, clear: true }]);
    RendererContext.SetViewport(0, 0, width, height);
    RendererContext.DrawGeometry(this.blitGeometry, this.blitShader);
    RendererContext.EndRenderPass();
    if (!activeCommandEncoder) Renderer.EndRenderFrame();
  }
};

// src/renderer/Texture.ts
var Texture2 = class {
  id;
  width;
  height;
  depth;
  type;
  dimension;
  SetActiveLayer(layer) {
  }
  GetActiveLayer() {
    throw Error("Base class.");
  }
  SetActiveMip(layer) {
  }
  GetActiveMip() {
    throw Error("Base class.");
  }
  SetActiveMipCount(layer) {
  }
  GetActiveMipCount() {
    throw Error("Base class.");
  }
  GenerateMips() {
  }
  Destroy() {
  }
  static Create(width, height, depth = 1, format = Renderer.SwapChainFormat, mipLevels = 1) {
    Debugger.IncrementGPUTextureSize(width * height * depth * 4);
    if (Renderer.type === "webgpu") return new WEBGPUTexture(width, height, depth, format, 0 /* IMAGE */, "2d", mipLevels);
    throw Error("Renderer type invalid");
  }
  static async Load(url, format = Renderer.SwapChainFormat, flipY = false) {
    const response = await fetch(url);
    const imageBitmap = await createImageBitmap(await response.blob());
    if (Renderer.type === "webgpu") return WEBGPUTexture.FromImageBitmap(imageBitmap, imageBitmap.width, imageBitmap.height, format, flipY);
    throw Error("Renderer type invalid");
  }
  static async LoadImageSource(imageSource, format = Renderer.SwapChainFormat, flipY = false) {
    const imageBitmap = await createImageBitmap(imageSource);
    if (Renderer.type === "webgpu") return WEBGPUTexture.FromImageBitmap(imageBitmap, imageBitmap.width, imageBitmap.height, format, flipY);
    throw Error("Renderer type invalid");
  }
  static async Blit(source, destination, width, height, uv_scale = new Vector2(1, 1)) {
    if (Renderer.type === "webgpu") return WEBGPUBlit.Blit(source, destination, width, height, uv_scale);
    throw Error("Renderer type invalid");
  }
};
var DepthTexture = class extends Texture2 {
  static Create(width, height, depth = 1, format = "depth24plus", mipLevels = 1) {
    Debugger.IncrementGPUTextureSize(width * height * depth * 1);
    if (Renderer.type === "webgpu") return new WEBGPUTexture(width, height, depth, format, 1 /* DEPTH */, "2d", mipLevels);
    throw Error("Renderer type invalid");
  }
};
var RenderTexture = class extends Texture2 {
  static Create(width, height, depth = 1, format = Renderer.SwapChainFormat, mipLevels = 1) {
    Debugger.IncrementGPUTextureSize(width * height * depth * 4);
    if (Renderer.type === "webgpu") return new WEBGPUTexture(width, height, depth, format, 2 /* RENDER_TARGET */, "2d", mipLevels);
    throw Error("Renderer type invalid");
  }
};
var TextureArray = class extends Texture2 {
  static Create(width, height, depth = 1, format = Renderer.SwapChainFormat, mipLevels = 1) {
    Debugger.IncrementGPUTextureSize(width * height * depth * 4);
    if (Renderer.type === "webgpu") return new WEBGPUTexture(width, height, depth, format, 0 /* IMAGE */, "2d-array", mipLevels);
    throw Error("Renderer type invalid");
  }
};

// src/renderer/webgpu/WEBGPUBaseShader.ts
var UniformTypeToWGSL = {
  "uniform": "uniform",
  "storage": "read-only-storage",
  "storage-write": "storage"
};
var WEBGPUBaseShader = class {
  id = Utils.UUID();
  needsUpdate = false;
  module;
  params;
  uniformMap = /* @__PURE__ */ new Map();
  valueArray = new Float32Array(1);
  _pipeline = null;
  _bindGroups = [];
  _bindGroupsInfo = [];
  get pipeline() {
    return this._pipeline;
  }
  get bindGroups() {
    return this._bindGroups;
  }
  get bindGroupsInfo() {
    return this._bindGroupsInfo;
  }
  constructor(params) {
    const code = params.defines ? ShaderPreprocessor.ProcessDefines(params.code, params.defines) : params.code;
    this.params = params;
    this.module = WEBGPURenderer.device.createShaderModule({ code });
    if (this.params.uniforms) this.uniformMap = new Map(Object.entries(this.params.uniforms));
  }
  BuildBindGroupLayouts() {
    const bindGroupsInfo = [];
    for (const [name, uniform] of this.uniformMap) {
      if (!bindGroupsInfo[uniform.group]) bindGroupsInfo[uniform.group] = { layoutEntries: [], entries: [], buffers: [] };
      const group = bindGroupsInfo[uniform.group];
      if (uniform.buffer instanceof WEBGPUBuffer) {
        const visibility = uniform.type === "storage-write" ? GPUShaderStage.FRAGMENT | GPUShaderStage.COMPUTE : GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT | GPUShaderStage.COMPUTE;
        group.layoutEntries.push({ binding: uniform.binding, visibility, buffer: { type: UniformTypeToWGSL[uniform.type] } });
        group.entries.push({ binding: uniform.binding, resource: { buffer: uniform.buffer.GetBuffer() } });
        group.buffers.push(uniform.buffer);
      } else if (uniform.buffer instanceof WEBGPUDynamicBuffer) {
        const visibility = uniform.type === "storage-write" ? GPUShaderStage.FRAGMENT | GPUShaderStage.COMPUTE : GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT | GPUShaderStage.COMPUTE;
        group.layoutEntries.push({
          binding: uniform.binding,
          visibility,
          buffer: {
            type: UniformTypeToWGSL[uniform.type],
            hasDynamicOffset: true,
            minBindingSize: uniform.buffer.minBindingSize
          }
        });
        group.entries.push({
          binding: uniform.binding,
          resource: {
            buffer: uniform.buffer.GetBuffer(),
            offset: 0,
            size: uniform.buffer.minBindingSize
          }
        });
        group.buffers.push(uniform.buffer);
      } else if (uniform.buffer instanceof WEBGPUTexture) {
        let sampleType = uniform.type === "depthTexture" ? "depth" : "float";
        if (uniform.buffer.format === "r32float") sampleType = "unfilterable-float";
        if (uniform.buffer.type === 3 /* RENDER_TARGET_STORAGE */) {
          group.layoutEntries.push({
            binding: uniform.binding,
            visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT,
            storageTexture: {
              format: uniform.buffer.format,
              viewDimension: uniform.buffer.dimension,
              access: "read-write"
            }
          });
        } else {
          group.layoutEntries.push({ binding: uniform.binding, visibility: GPUShaderStage.COMPUTE | GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT, texture: { sampleType, viewDimension: uniform.buffer.dimension } });
        }
        const view = {
          dimension: uniform.buffer.dimension,
          arrayLayerCount: uniform.buffer.dimension != "3d" ? uniform.buffer.GetBuffer().depthOrArrayLayers : 1,
          // arrayLayerCount: uniform.buffer.GetBuffer().depthOrArrayLayers,
          baseArrayLayer: 0,
          baseMipLevel: uniform.textureMip,
          mipLevelCount: uniform.activeMipCount
        };
        group.entries.push({ binding: uniform.binding, resource: uniform.buffer.GetBuffer().createView(view) });
        group.buffers.push(uniform.buffer);
      } else if (uniform.buffer instanceof WEBGPUTextureSampler) {
        let type = void 0;
        if (uniform.type === "sampler") type = "filtering";
        else if (uniform.type === "sampler-compare") type = "comparison";
        else if (uniform.type === "sampler-non-filterable") type = "non-filtering";
        group.layoutEntries.push({ binding: uniform.binding, visibility: GPUShaderStage.COMPUTE | GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT, sampler: { type } });
        group.entries.push({ binding: uniform.binding, resource: uniform.buffer.GetBuffer() });
        group.buffers.push(uniform.buffer);
      }
    }
    return bindGroupsInfo;
  }
  GetValidUniform(name) {
    const uniform = this.uniformMap.get(name);
    if (!uniform) throw Error(`Shader does not have a parameter named ${name}`);
    return uniform;
  }
  SetUniformDataFromArray(name, data, dataOffset, bufferOffset = 0, size) {
    const uniform = this.GetValidUniform(name);
    if (!uniform.buffer) {
      let type = 0 /* STORAGE */;
      if (uniform.type === "uniform") type = 2 /* UNIFORM */;
      uniform.buffer = Buffer3.Create(data.byteLength, type);
      this.needsUpdate = true;
    }
    WEBGPURenderer.device.queue.writeBuffer(uniform.buffer.GetBuffer(), bufferOffset, data, dataOffset, size);
  }
  SetUniformDataFromBuffer(name, data) {
    if (!data) throw Error(`Invalid buffer ${name}`);
    const binding = this.GetValidUniform(name);
    if (!binding.buffer || binding.buffer.GetBuffer() !== data.GetBuffer()) {
      binding.buffer = data;
      this.needsUpdate = true;
    }
    if (data instanceof WEBGPUTexture) {
      binding.textureDimension = data.GetActiveLayer();
      binding.textureMip = data.GetActiveMip();
      binding.activeMipCount = data.GetActiveMipCount();
    }
  }
  SetArray(name, array, bufferOffset = 0, dataOffset, size) {
    this.SetUniformDataFromArray(name, array, bufferOffset, dataOffset, size);
  }
  SetValue(name, value) {
    this.valueArray[0] = value;
    this.SetUniformDataFromArray(name, this.valueArray);
  }
  SetMatrix4(name, matrix) {
    this.SetUniformDataFromArray(name, matrix.elements);
  }
  SetVector3(name, vector) {
    this.SetUniformDataFromArray(name, vector.elements);
  }
  SetTexture(name, texture) {
    this.SetUniformDataFromBuffer(name, texture);
  }
  SetSampler(name, sampler) {
    this.SetUniformDataFromBuffer(name, sampler);
  }
  SetBuffer(name, buffer) {
    this.SetUniformDataFromBuffer(name, buffer);
  }
  HasBuffer(name) {
    return this.uniformMap.get(name)?.buffer ? true : false;
  }
  RebuildDescriptors() {
  }
  OnPreRender() {
    if (this.needsUpdate || !this.pipeline || !this.bindGroups) {
      this.RebuildDescriptors();
    }
  }
};

// src/renderer/webgpu/WEBGPUComputeShader.ts
var WEBGPUComputeShader = class extends WEBGPUBaseShader {
  computeEntrypoint;
  params;
  _pipeline = null;
  get pipeline() {
    return this._pipeline;
  }
  constructor(params) {
    super(params);
    this.params = params;
    this.computeEntrypoint = params.computeEntrypoint;
  }
  RebuildDescriptors() {
    console.warn("Compiling shader");
    this._bindGroupsInfo = this.BuildBindGroupLayouts();
    const bindGroupLayouts = [];
    this._bindGroups = [];
    for (const bindGroupInfo of this._bindGroupsInfo) {
      const bindGroupLayout = WEBGPURenderer.device.createBindGroupLayout({ entries: bindGroupInfo.layoutEntries });
      bindGroupLayouts.push(bindGroupLayout);
      const bindGroup = WEBGPURenderer.device.createBindGroup({ layout: bindGroupLayout, entries: bindGroupInfo.entries });
      this._bindGroups.push(bindGroup);
    }
    const pipelineLayout = WEBGPURenderer.device.createPipelineLayout({
      bindGroupLayouts
      // Array of all bind group layouts used
    });
    const pipelineDescriptor = {
      layout: pipelineLayout,
      compute: { module: this.module, entryPoint: this.computeEntrypoint }
    };
    this._pipeline = WEBGPURenderer.device.createComputePipeline(pipelineDescriptor);
    this.needsUpdate = false;
  }
};

// src/renderer/webgpu/WEBGPUShader.ts
var WGSLShaderAttributeFormat = {
  vec2: "float32x2",
  vec3: "float32x3",
  vec4: "float32x4"
};
var WEBGPUShader = class extends WEBGPUBaseShader {
  vertexEntrypoint;
  fragmentEntrypoint;
  params;
  attributeMap = /* @__PURE__ */ new Map();
  _pipeline = null;
  get pipeline() {
    return this._pipeline;
  }
  constructor(params) {
    super(params);
    this.params = params;
    this.vertexEntrypoint = this.params.vertexEntrypoint;
    this.fragmentEntrypoint = this.params.fragmentEntrypoint;
    if (this.params.attributes) this.attributeMap = new Map(Object.entries(this.params.attributes));
  }
  RebuildDescriptors() {
    console.warn("Compiling shader");
    this._bindGroupsInfo = this.BuildBindGroupLayouts();
    const bindGroupLayouts = [];
    this._bindGroups = [];
    for (const bindGroupInfo of this._bindGroupsInfo) {
      const bindGroupLayout = WEBGPURenderer.device.createBindGroupLayout({ entries: bindGroupInfo.layoutEntries });
      bindGroupLayouts.push(bindGroupLayout);
      const bindGroup = WEBGPURenderer.device.createBindGroup({ layout: bindGroupLayout, entries: bindGroupInfo.entries });
      this._bindGroups.push(bindGroup);
    }
    const pipelineLayout = WEBGPURenderer.device.createPipelineLayout({
      bindGroupLayouts
      // Array of all bind group layouts used
    });
    let targets = [];
    for (const output of this.params.colorOutputs) targets.push({
      format: output.format
      // blend: {
      //     color: {
      //       srcFactor: 'one',
      //       dstFactor: 'one-minus-src-alpha',
      //       operation: 'add',
      //     },
      //     alpha: {
      //       srcFactor: 'one',
      //       dstFactor: 'one-minus-src-alpha',
      //       operation: 'add',
      //     },
      // }
    });
    const pipelineDescriptor = {
      layout: pipelineLayout,
      vertex: { module: this.module, entryPoint: this.vertexEntrypoint, buffers: [] },
      fragment: { module: this.module, entryPoint: this.fragmentEntrypoint, targets },
      primitive: {
        topology: this.params.topology ? this.params.topology : "triangle-list",
        frontFace: this.params.frontFace ? this.params.frontFace : "ccw",
        cullMode: this.params.cullMode ? this.params.cullMode : "back"
      }
    };
    if (this.params.depthOutput) pipelineDescriptor.depthStencil = {
      depthWriteEnabled: true,
      depthCompare: this.params.depthCompare ? this.params.depthCompare : "less",
      format: this.params.depthOutput
    };
    const buffers = [];
    for (const [_2, attribute] of this.attributeMap) {
      buffers.push({ arrayStride: attribute.size * 4, attributes: [{ shaderLocation: attribute.location, offset: 0, format: WGSLShaderAttributeFormat[attribute.type] }] });
    }
    pipelineDescriptor.vertex.buffers = buffers;
    this._pipeline = WEBGPURenderer.device.createRenderPipeline(pipelineDescriptor);
    this.needsUpdate = false;
  }
  GetAttributeSlot(name) {
    return this.attributeMap.get(name)?.location;
  }
};

// src/renderer/Shader.ts
var BaseShader = class {
  id;
  params;
  constructor() {
  }
  SetValue(name, value) {
  }
  SetMatrix4(name, matrix) {
  }
  SetVector3(name, vector) {
  }
  SetArray(name, array, bufferOffset, dataOffset, size) {
  }
  SetTexture(name, texture) {
  }
  SetSampler(name, texture) {
  }
  SetBuffer(name, buffer) {
  }
  HasBuffer(name) {
    return false;
  }
  OnPreRender(geometry) {
  }
};
var Shader = class extends BaseShader {
  id;
  params;
  static async Create(params) {
    params.code = await ShaderPreprocessor.ProcessIncludes(params.code);
    if (Renderer.type === "webgpu") return new WEBGPUShader(params);
    throw Error("Unknown api");
  }
};
var Compute = class extends BaseShader {
  params;
  static async Create(params) {
    params.code = await ShaderPreprocessor.ProcessIncludes(params.code);
    if (Renderer.type === "webgpu") return new WEBGPUComputeShader(params);
    throw Error("Unknown api");
  }
};

// src/components/Light.ts
var LightEvents = class {
  static Updated = (light) => {
  };
};
var Light = class extends Component {
  camera;
  color = new Color(1, 1, 1);
  intensity = 1;
  range = 1e3;
  Start() {
    EventSystem.on(TransformEvents.Updated, (transform) => {
      if (this.transform === transform) {
        EventSystem.emit(LightEvents.Updated, this);
      }
    });
  }
};
var SpotLight = class extends Light {
  direction = new Vector3(0, -1, 0);
  angle = 1;
  Start() {
    super.Start();
    this.camera = this.gameObject.AddComponent(Camera);
    this.camera.SetPerspective(this.angle / Math.PI * 180 * 2, Renderer.width / Renderer.height, 0.01, 1e3);
  }
};
var PointLight = class extends Light {
  Start() {
    super.Start();
    this.camera = this.gameObject.AddComponent(Camera);
    this.camera.SetPerspective(60, Renderer.width / Renderer.height, 0.01, 1e3);
  }
};
var AreaLight = class extends Light {
  Start() {
    super.Start();
    this.camera = this.gameObject.AddComponent(Camera);
    this.camera.SetPerspective(60, Renderer.width / Renderer.height, 0.01, 1e3);
  }
};
var DirectionalLight = class extends Light {
  direction = new Vector3(0, 1, 0);
  Start() {
    super.Start();
    this.camera = this.gameObject.AddComponent(Camera);
    this.camera.SetOrthographic(-1, 1, -1, 1, 0.1, 100);
  }
};

// src/renderer/passes/DeferredLightingPass.ts
var DeferredLightingPass = class extends RenderPass {
  name = "DeferredLightingPass";
  shader;
  sampler;
  quadGeometry;
  lightsBuffer;
  lightsCountBuffer;
  outputLightingPass;
  needsUpdate = false;
  initialized = false;
  // constructor(inputGBufferAlbedo: string, inputGBufferNormal: string, inputGbufferERMO: string, inputGBufferDepth: string, inputShadowPassDepth: string, outputLightingPass: string) {
  constructor() {
    super({
      inputs: [
        PassParams.DebugSettings,
        PassParams.GBufferAlbedo,
        PassParams.GBufferNormal,
        PassParams.GBufferERMO,
        PassParams.GBufferDepth
      ],
      outputs: [PassParams.LightingPassOutput]
    });
    this.init();
  }
  async init() {
    this.shader = await Shader.Create({
      code: await ShaderLoader.DeferredLighting,
      attributes: {
        position: { location: 0, size: 3, type: "vec3" },
        normal: { location: 1, size: 3, type: "vec3" },
        uv: { location: 2, size: 2, type: "vec2" }
      },
      uniforms: {
        textureSampler: { group: 0, binding: 0, type: "sampler" },
        albedoTexture: { group: 0, binding: 1, type: "texture" },
        normalTexture: { group: 0, binding: 2, type: "texture" },
        ermoTexture: { group: 0, binding: 3, type: "texture" },
        depthTexture: { group: 0, binding: 4, type: "depthTexture" },
        shadowPassDepth: { group: 0, binding: 5, type: "depthTexture" },
        lights: { group: 0, binding: 6, type: "storage" },
        lightCount: { group: 0, binding: 7, type: "storage" },
        view: { group: 0, binding: 8, type: "storage" },
        shadowSampler: { group: 0, binding: 9, type: "sampler" },
        shadowSamplerComp: { group: 0, binding: 10, type: "sampler-compare" },
        settings: { group: 0, binding: 11, type: "storage" }
      },
      colorOutputs: [{ format: Renderer.SwapChainFormat }]
    });
    this.sampler = TextureSampler.Create({ minFilter: "linear", magFilter: "linear", addressModeU: "clamp-to-edge", addressModeV: "clamp-to-edge" });
    this.shader.SetSampler("textureSampler", this.sampler);
    const shadowSampler = TextureSampler.Create({ minFilter: "nearest", magFilter: "nearest", addressModeU: "clamp-to-edge", addressModeV: "clamp-to-edge" });
    this.shader.SetSampler("shadowSampler", shadowSampler);
    const shadowSamplerComp = TextureSampler.Create({ minFilter: "linear", magFilter: "linear", compare: "less" });
    this.shader.SetSampler("shadowSamplerComp", shadowSamplerComp);
    this.quadGeometry = Geometry.Plane();
    this.lightsCountBuffer = Buffer3.Create(1 * 4, 0 /* STORAGE */);
    this.outputLightingPass = RenderTexture.Create(Renderer.width, Renderer.height);
    EventSystem.on(LightEvents.Updated, (component) => {
      this.needsUpdate = true;
    });
    this.initialized = true;
  }
  updateLightsBuffer() {
    const scene = Camera.mainCamera.gameObject.scene;
    const lights = [...scene.GetComponents(SpotLight), ...scene.GetComponents(PointLight), ...scene.GetComponents(DirectionalLight), ...scene.GetComponents(AreaLight)];
    const lightBufferSize = 4 + 16 + 4 * 16 + 16 + 16 + 3 + 1 + 4 + 4;
    const lightBuffer = new Float32Array(Math.max(1, lights.length) * lightBufferSize);
    for (let i3 = 0; i3 < lights.length; i3++) {
      const light = lights[i3];
      const params1 = new Float32Array([light.intensity, light.range, 0, 0]);
      const params2 = new Float32Array(4);
      if (light instanceof DirectionalLight) {
        params2.set(light.direction.elements);
      } else if (light instanceof SpotLight) {
        params1.set([light.intensity, light.range, light.angle, 0]);
        params2.set(light.direction.elements);
      }
      let lightType = 0 /* SPOT_LIGHT */;
      if (light instanceof SpotLight) lightType = 0 /* SPOT_LIGHT */;
      else if (light instanceof DirectionalLight) lightType = 1 /* DIRECTIONAL_LIGHT */;
      else if (light instanceof PointLight) lightType = 2 /* POINT_LIGHT */;
      else if (light instanceof AreaLight) lightType = 3 /* AREA_LIGHT */;
      lightBuffer.set([
        light.transform.position.x,
        light.transform.position.y,
        light.transform.position.z,
        1,
        ...light.camera.projectionMatrix.elements,
        ...new Array(16 * 4).fill(0),
        // ...lightsCSMProjectionMatrix[i],
        ...light.camera.viewMatrix.elements,
        ...light.camera.viewMatrix.clone().invert().elements,
        light.color.r,
        light.color.g,
        light.color.b,
        lightType,
        ...params1,
        ...params2
      ], i3 * lightBufferSize);
    }
    const lightsLength = Math.max(lights.length, 1);
    if (!this.lightsBuffer || this.lightsBuffer.size !== lightsLength * lightBufferSize * 4) {
      this.lightsBuffer = Buffer3.Create(lightsLength * lightBufferSize * 4, 0 /* STORAGE */);
      this.lightsCountBuffer = Buffer3.Create(1 * 4, 0 /* STORAGE */);
    }
    this.lightsBuffer.SetArray(lightBuffer);
    this.lightsCountBuffer.SetArray(new Uint32Array([lights.length]));
    this.shader.SetBuffer("lights", this.lightsBuffer);
    this.shader.SetBuffer("lightCount", this.lightsCountBuffer);
    this.needsUpdate = false;
    console.log("Updating light buffer");
  }
  execute(resources) {
    if (!this.initialized) return;
    const camera = Camera.mainCamera;
    if (!this.lightsBuffer || !this.lightsCountBuffer || this.needsUpdate) {
      this.updateLightsBuffer();
    }
    const inputGBufferAlbedo = resources.getResource(PassParams.GBufferAlbedo);
    const inputGBufferNormal = resources.getResource(PassParams.GBufferNormal);
    const inputGbufferERMO = resources.getResource(PassParams.GBufferERMO);
    const inputGBufferDepth = resources.getResource(PassParams.GBufferDepth);
    const inputShadowPassDepth = resources.getResource(PassParams.GBufferDepth);
    RendererContext.BeginRenderPass("DeferredLightingPass", [{ target: this.outputLightingPass, clear: true }], void 0, true);
    this.shader.SetTexture("albedoTexture", inputGBufferAlbedo);
    this.shader.SetTexture("normalTexture", inputGBufferNormal);
    this.shader.SetTexture("ermoTexture", inputGbufferERMO);
    this.shader.SetTexture("depthTexture", inputGBufferDepth);
    this.shader.SetTexture("shadowPassDepth", inputShadowPassDepth);
    const view = new Float32Array(4 + 4 + 16 + 16);
    view.set([Renderer.width, Renderer.height, 0], 0);
    view.set(camera.transform.position.elements, 4);
    const tempMatrix = new Matrix4();
    tempMatrix.copy(camera.projectionMatrix).invert();
    view.set(tempMatrix.elements, 8);
    tempMatrix.copy(camera.viewMatrix).invert();
    view.set(tempMatrix.elements, 24);
    this.shader.SetArray("view", view);
    const settings = resources.getResource(PassParams.DebugSettings);
    this.shader.SetArray("settings", settings);
    RendererContext.DrawGeometry(this.quadGeometry, this.shader);
    RendererContext.EndRenderPass();
    resources.setResource(PassParams.LightingPassOutput, this.outputLightingPass);
  }
};

// src/renderer/passes/TextureViewer.ts
var TextureViewer = class extends RenderPass {
  name = "TextureViewer";
  shader;
  quadGeometry;
  constructor() {
    super({ inputs: [
      PassParams.LightingPassOutput,
      PassParams.depthTexturePyramid
    ] });
  }
  async init() {
    const code = `
        struct VertexInput {
            @location(0) position : vec2<f32>,
            @location(1) uv : vec2<f32>,
        };

        struct VertexOutput {
            @builtin(position) position : vec4<f32>,
            @location(0) vUv : vec2<f32>,
        };

        @group(0) @binding(0) var textureSampler: sampler;
        @group(0) @binding(1) var texture: texture_2d<f32>;

        @vertex fn vertexMain(input: VertexInput) -> VertexOutput {
            var output: VertexOutput;
            output.position = vec4(input.position, 0.0, 1.0);
            output.vUv = input.uv;
            return output;
        }
        
        @fragment fn fragmentMain(input: VertexOutput) -> @location(0) vec4f {
            let uv = input.vUv;

            return vec4(textureSampleLevel(texture, textureSampler, uv, 0));
        }
        `;
    this.shader = await Shader.Create({
      code,
      colorOutputs: [{ format: Renderer.SwapChainFormat }],
      attributes: {
        position: { location: 0, size: 3, type: "vec3" },
        uv: { location: 1, size: 2, type: "vec2" }
      },
      uniforms: {
        textureSampler: { group: 0, binding: 0, type: "sampler" },
        texture: { group: 0, binding: 1, type: "texture" }
      }
    });
    this.quadGeometry = Geometry.Plane();
    const sampler = TextureSampler.Create();
    this.shader.SetSampler("textureSampler", sampler);
    this.initialized = true;
  }
  execute(resources) {
    if (this.initialized === false) return;
    const settings = resources.getResource(PassParams.DebugSettings);
    const LightingPassOutputTexture = resources.getResource(PassParams.LightingPassOutput);
    this.shader.SetTexture("texture", LightingPassOutputTexture);
    RendererContext.BeginRenderPass("TextureViewer", [{ clear: false }], void 0, true);
    RendererContext.DrawGeometry(this.quadGeometry, this.shader);
    RendererContext.EndRenderPass();
  }
};

// src/components/Mesh.ts
var Mesh = class extends Component {
  geometry;
  materialsMapped = /* @__PURE__ */ new Map();
  enableShadows = true;
  Start() {
  }
  AddMaterial(material) {
    if (!this.materialsMapped.has(material.constructor.name)) this.materialsMapped.set(material.constructor.name, []);
    this.materialsMapped.get(material.constructor.name)?.push(material);
  }
  GetMaterials(type) {
    if (!type) return Array.from(this.materialsMapped, ([name, value]) => value).flat(Infinity);
    return this.materialsMapped.get(type.name) || [];
  }
  SetGeometry(geometry) {
    this.geometry = geometry;
  }
  GetGeometry() {
    return this.geometry;
  }
};

// src/utils/MemoryAllocator.ts
var MemoryAllocator = class {
  memorySize;
  availableMemorySize;
  freeBlocks = [];
  usedBlocks = [];
  constructor(memorySize) {
    this.memorySize = memorySize;
    this.availableMemorySize = memorySize;
    this.freeBlocks.push({ offset: 0, size: memorySize });
  }
  allocate(size) {
    for (let i3 = 0; i3 < this.freeBlocks.length; i3++) {
      const block = this.freeBlocks[i3];
      if (block.size >= size) {
        const offset = block.offset;
        block.offset += size;
        block.size -= size;
        this.availableMemorySize -= size;
        if (block.size === 0) {
          this.freeBlocks.splice(i3, 1);
        }
        this.usedBlocks.push({ offset, size });
        return offset;
      }
    }
    throw Error("Not enough space.");
  }
  mergeFreeBlocks() {
    this.freeBlocks.sort((a2, b2) => a2.offset - b2.offset);
    for (let i3 = 0; i3 < this.freeBlocks.length - 1; ) {
      const currentBlock = this.freeBlocks[i3];
      const nextBlock = this.freeBlocks[i3 + 1];
      if (currentBlock.offset + currentBlock.size === nextBlock.offset) {
        currentBlock.size += nextBlock.size;
        this.freeBlocks.splice(i3 + 1, 1);
      } else {
        i3++;
      }
    }
  }
  free(offset) {
    for (let i3 = 0; i3 < this.usedBlocks.length; i3++) {
      const block = this.usedBlocks[i3];
      if (block.offset === offset) {
        this.usedBlocks.splice(i3, 1);
        this.freeBlocks.push(block);
        this.mergeFreeBlocks();
        this.availableMemorySize += block.size;
        return;
      }
    }
    throw new Error(`No allocated block found at offset ${offset}`);
  }
};
var BufferMemoryAllocator = class _BufferMemoryAllocator {
  allocator;
  buffer;
  links;
  static BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT;
  constructor(size) {
    this.allocator = new MemoryAllocator(size);
    this.buffer = Buffer3.Create(size * _BufferMemoryAllocator.BYTES_PER_ELEMENT, 0 /* STORAGE */);
    this.links = /* @__PURE__ */ new Map();
  }
  has(link) {
    return this.links.has(link);
  }
  set(link, data) {
    let bufferOffset = this.links.get(link);
    if (bufferOffset === void 0) {
      bufferOffset = this.allocator.allocate(data.length);
      this.links.set(link, bufferOffset);
    }
    this.buffer.SetArray(data, bufferOffset * _BufferMemoryAllocator.BYTES_PER_ELEMENT, 0, data.length);
    return bufferOffset;
  }
  delete(link) {
    const bufferOffset = this.links.get(link);
    if (bufferOffset === void 0) throw Error("Link not found");
    this.allocator.free(bufferOffset);
    this.links.delete(link);
  }
  getBuffer() {
    return this.buffer;
  }
  getAllocator() {
    return this.allocator;
  }
};
var DynamicBufferMemoryAllocator = class extends BufferMemoryAllocator {
  incrementAmount;
  constructor(size, incrementAmount) {
    super(size);
    this.incrementAmount = incrementAmount ? incrementAmount : size;
  }
  set(link, data) {
    let bufferOffset = this.links.get(link);
    if (bufferOffset === void 0) {
      if (this.allocator.availableMemorySize - data.length < 0) {
        const o2 = this.allocator.memorySize;
        const oldMemorySize = this.allocator.memorySize - this.allocator.availableMemorySize;
        this.allocator.memorySize += this.incrementAmount;
        this.allocator.availableMemorySize += this.incrementAmount;
        this.allocator.freeBlocks.push({ offset: oldMemorySize, size: this.incrementAmount });
        console.log(`Incrementing DynamicBuffer from ${o2} to ${this.allocator.memorySize}`);
        const buffer = Buffer3.Create(this.allocator.memorySize * BufferMemoryAllocator.BYTES_PER_ELEMENT, 0 /* STORAGE */);
        const hasActiveFrame = Renderer.HasActiveFrame();
        if (!hasActiveFrame) Renderer.BeginRenderFrame();
        RendererContext.CopyBufferToBuffer(this.buffer, buffer);
        if (!hasActiveFrame) Renderer.EndRenderFrame();
        this.buffer = buffer;
      }
      bufferOffset = this.allocator.allocate(data.length);
      this.links.set(link, bufferOffset);
    }
    this.buffer.SetArray(data, bufferOffset * BufferMemoryAllocator.BYTES_PER_ELEMENT, 0, data.length);
    return bufferOffset;
  }
  delete(link) {
    const bufferOffset = this.links.get(link);
    if (bufferOffset === void 0) throw Error("Link not found");
    this.allocator.free(bufferOffset);
    this.links.delete(link);
  }
};

// src/components/InstancedMesh.ts
var InstancedMesh = class extends Mesh {
  incrementInstanceCount = 1e3;
  _matricesBuffer = new DynamicBufferMemoryAllocator(this.incrementInstanceCount * 16);
  get matricesBuffer() {
    return this._matricesBuffer.getBuffer();
  }
  _instanceCount = 0;
  get instanceCount() {
    return this._instanceCount;
  }
  SetMatrixAt(index, matrix) {
    if (!this._matricesBuffer) throw Error("Matrices buffer not created.");
    this._instanceCount = Math.max(index, this._instanceCount);
    this._matricesBuffer.set(index, matrix.elements);
  }
};

// src/renderer/passes/DeferredGBufferPass.ts
var DeferredGBufferPass = class extends RenderPass {
  name = "DeferredMeshRenderPass";
  constructor() {
    super({
      inputs: [
        PassParams.MainCamera,
        PassParams.GBufferAlbedo,
        PassParams.GBufferNormal,
        PassParams.GBufferERMO,
        PassParams.GBufferDepth
      ],
      outputs: []
    });
  }
  async init(resources) {
    this.initialized = true;
  }
  execute(resources) {
    if (!this.initialized) return;
    const scene = Camera.mainCamera.gameObject.scene;
    const meshes = scene.GetComponents(Mesh);
    const instancedMeshes = scene.GetComponents(InstancedMesh);
    if (meshes.length === 0 && instancedMeshes.length === 0) return;
    const inputCamera = Camera.mainCamera;
    if (!inputCamera) throw Error(`No inputs passed to ${this.name}`);
    const backgroundColor = inputCamera.backgroundColor;
    const inputGBufferAlbedo = resources.getResource(PassParams.GBufferAlbedo);
    const inputGBufferNormal = resources.getResource(PassParams.GBufferNormal);
    const inputGBufferERMO = resources.getResource(PassParams.GBufferERMO);
    const inputGBufferDepth = resources.getResource(PassParams.GBufferDepth);
    RendererContext.BeginRenderPass(
      "DeferredMeshRenderPass",
      [
        { target: inputGBufferAlbedo, clear: false, color: backgroundColor },
        { target: inputGBufferNormal, clear: false, color: backgroundColor },
        { target: inputGBufferERMO, clear: false, color: backgroundColor }
      ],
      { target: inputGBufferDepth, clear: false },
      true
    );
    const projectionMatrix = inputCamera.projectionMatrix;
    const viewMatrix = inputCamera.viewMatrix;
    for (const mesh of meshes) {
      const geometry = mesh.GetGeometry();
      const materials = mesh.GetMaterials();
      for (const material of materials) {
        if (!material.shader) {
          material.createShader().then((shader2) => {
            shader2.params.cullMode = "none";
          });
          continue;
        }
        const shader = material.shader;
        shader.SetMatrix4("projectionMatrix", projectionMatrix);
        shader.SetMatrix4("viewMatrix", viewMatrix);
        shader.SetMatrix4("modelMatrix", mesh.transform.localToWorldMatrix);
        shader.SetVector3("cameraPosition", inputCamera.transform.position);
        RendererContext.DrawGeometry(geometry, shader, 1);
      }
    }
    for (const instancedMesh of instancedMeshes) {
      const geometry = instancedMesh.GetGeometry();
      const materials = instancedMesh.GetMaterials();
      for (const material of materials) {
        if (!material.shader) {
          material.createShader().then((shader2) => {
            shader2.params.cullMode = "none";
          });
          continue;
        }
        const shader = material.shader;
        shader.SetMatrix4("projectionMatrix", projectionMatrix);
        shader.SetMatrix4("viewMatrix", viewMatrix);
        shader.SetBuffer("modelMatrix", instancedMesh.matricesBuffer);
        shader.SetVector3("cameraPosition", inputCamera.transform.position);
        RendererContext.DrawGeometry(geometry, shader, instancedMesh.instanceCount + 1);
      }
    }
    resources.setResource(PassParams.GBufferDepth, inputGBufferDepth);
    resources.setResource(PassParams.GBufferAlbedo, inputGBufferAlbedo);
    resources.setResource(PassParams.GBufferNormal, inputGBufferNormal);
    resources.setResource(PassParams.GBufferERMO, inputGBufferERMO);
    RendererContext.EndRenderPass();
  }
};

// src/math/Sphere.ts
var Sphere = class _Sphere {
  center;
  radius;
  constructor(center = new Vector3(0, 0, 0), radius = 0) {
    this.center = center;
    this.radius = radius;
  }
  static fromAABB(minBounds, maxBounds) {
    const center = maxBounds.clone().add(minBounds).mul(0.5);
    const radius = maxBounds.distanceTo(minBounds) * 0.5;
    return new _Sphere(center, radius);
  }
  static fromVertices(vertices, indices, vertex_positions_stride) {
    let min = new Vector3(Infinity, Infinity, Infinity);
    let max = new Vector3(-Infinity, -Infinity, -Infinity);
    let vertex = new Vector3();
    for (const index of indices) {
      const x2 = vertices[index * vertex_positions_stride + 0];
      const y2 = vertices[index * vertex_positions_stride + 1];
      const z2 = vertices[index * vertex_positions_stride + 2];
      if (isNaN(x2) || isNaN(y2) || isNaN(z2)) throw Error(`Invalid vertex [i ${index}, ${x2}, ${y2}, ${z2}]`);
      vertex.set(x2, y2, z2);
      min.min(vertex);
      max.max(vertex);
    }
    return _Sphere.fromAABB(min, max);
  }
  // Set the sphere to contain all points in the array
  SetFromPoints(points) {
    if (points.length === 0) {
      throw new Error("Point array is empty.");
    }
    let centroid = points.reduce((acc, cur) => acc.add(cur)).mul(1 / points.length);
    let maxRadius = points.reduce((max, p2) => Math.max(max, centroid.distanceTo(p2)), 0);
    this.center = centroid;
    this.radius = maxRadius;
  }
};

// src/utils/CRC32.ts
var CRC32 = class {
  /**
   * Lookup table calculated for 0xEDB88320 divisor
   */
  static lookupTable = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117];
  static calculateBytes(bytes, accumulator) {
    let crc = accumulator;
    for (const byte of bytes) {
      const tableIndex = (crc ^ byte) & 255;
      const tableVal = this.lookupTable[tableIndex];
      crc = crc >>> 8 ^ tableVal;
    }
    return crc;
  }
  static crcToUint(crc) {
    return this.toUint32(crc ^ 4294967295);
  }
  static toUint32(num) {
    if (num >= 0) {
      return num;
    }
    return 4294967295 - num * -1 + 1;
  }
  static forBytes(bytes) {
    const crc = this.calculateBytes(bytes, 4294967295);
    return this.crcToUint(crc);
  }
};

// src/plugins/meshlets/WASMHelper.ts
var WASMPointer = class {
  data;
  ptr;
  type;
  constructor(data, type = "in") {
    this.data = data;
    this.ptr = null;
    this.type = type;
  }
};
var WASMHelper = class _WASMHelper {
  static TYPES = {
    i8: { array: Int8Array, heap: "HEAP8" },
    i16: { array: Int16Array, heap: "HEAP16" },
    i32: { array: Int32Array, heap: "HEAP32" },
    f32: { array: Float32Array, heap: "HEAPF32" },
    f64: { array: Float64Array, heap: "HEAPF64" },
    u8: { array: Uint8Array, heap: "HEAPU8" },
    u16: { array: Uint16Array, heap: "HEAPU16" },
    u32: { array: Uint32Array, heap: "HEAPU32" }
  };
  static getTypeForArray(array) {
    if (array instanceof Int8Array) return this.TYPES.i8;
    else if (array instanceof Int16Array) return this.TYPES.i16;
    else if (array instanceof Int32Array) return this.TYPES.i32;
    else if (array instanceof Uint8Array) return this.TYPES.u8;
    else if (array instanceof Uint16Array) return this.TYPES.u16;
    else if (array instanceof Uint32Array) return this.TYPES.u32;
    else if (array instanceof Float32Array) return this.TYPES.f32;
    else if (array instanceof Float64Array) return this.TYPES.f64;
    console.log(array);
    throw Error("Array has no type");
  }
  static transferNumberArrayToHeap(module, array) {
    const type = this.getTypeForArray(array);
    const typedArray = type.array.from(array);
    const heapPointer = module._malloc(
      typedArray.length * typedArray.BYTES_PER_ELEMENT
    );
    if (type.heap === "HEAPU8") module[type.heap].set(typedArray, heapPointer);
    else module[type.heap].set(typedArray, heapPointer >> 2);
    return heapPointer;
  }
  static getDataFromHeapU8(module, address, type, length) {
    return module[type.heap].slice(address, address + length);
  }
  static getDataFromHeap(module, address, type, length) {
    return module[type.heap].slice(address >> 2, (address >> 2) + length);
  }
  static getArgumentTypes(args) {
    let argTypes = [];
    for (let i3 = 0; i3 < args.length; i3++) {
      const arg = args[i3];
      if (arg instanceof Uint8Array) argTypes.push("number");
      else if (arg instanceof Uint16Array) argTypes.push("number");
      else if (arg instanceof Uint32Array) argTypes.push("number");
      else if (arg instanceof Int8Array) argTypes.push("number");
      else if (arg instanceof Int16Array) argTypes.push("number");
      else if (arg instanceof Int32Array) argTypes.push("number");
      else if (arg instanceof Float32Array) argTypes.push("number");
      else if (arg instanceof Float64Array) argTypes.push("number");
      else if (typeof arg === "string") argTypes.push("string");
      else argTypes.push("number");
    }
    return argTypes;
  }
  static transferArguments(module, args) {
    let method_args = [];
    for (let i3 = 0; i3 < args.length; i3++) {
      const arg = args[i3];
      if (arg instanceof WASMPointer) {
        arg.ptr = _WASMHelper.transferNumberArrayToHeap(module, arg.data);
        method_args.push(arg.ptr);
      } else method_args.push(args[i3]);
    }
    return method_args;
  }
  static getOutputArguments(module, args) {
    for (let i3 = 0; i3 < args.length; i3++) {
      const arg = args[i3];
      if (!(arg instanceof WASMPointer)) continue;
      if (arg.ptr === null) continue;
      if (arg.type === "in") continue;
      const type = _WASMHelper.getTypeForArray(arg.data);
      if (type === this.TYPES.u8) {
        arg.data = _WASMHelper.getDataFromHeapU8(module, arg.ptr, type, arg.data.length);
      } else {
        arg.data = _WASMHelper.getDataFromHeap(module, arg.ptr, type, arg.data.length);
      }
    }
  }
  static call(module, method, returnType, ...args) {
    let method_args = _WASMHelper.transferArguments(module, args);
    const method_arg_types = _WASMHelper.getArgumentTypes(args);
    const ret = module.ccall(
      method,
      returnType,
      method_arg_types,
      method_args
    );
    _WASMHelper.getOutputArguments(module, args);
    return ret;
  }
};

// src/plugins/meshlets/meshoptimizer/MeshOptimizer.js
var Module = (() => {
  var _scriptDir = import.meta.url;
  return function(Module3) {
    Module3 = Module3 || {};
    var Module3 = typeof Module3 != "undefined" ? Module3 : {};
    var readyPromiseResolve, readyPromiseReject;
    Module3["ready"] = new Promise(function(resolve, reject) {
      readyPromiseResolve = resolve;
      readyPromiseReject = reject;
    });
    ["_malloc", "_meshopt_computeClusterBounds", "_meshopt_buildMeshletsBound", "_meshopt_buildMeshlets", "_meshopt_simplify", "_meshopt_simplifyWithAttributes", "_meshopt_generateVertexRemap", "_meshopt_remapIndexBuffer", "_meshopt_remapVertexBuffer", "_meshopt_simplifyScale", "_fflush", "onRuntimeInitialized"].forEach((prop) => {
      if (!Object.getOwnPropertyDescriptor(Module3["ready"], prop)) {
        Object.defineProperty(Module3["ready"], prop, { get: () => abort("You are getting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"), set: () => abort("You are setting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js") });
      }
    });
    var moduleOverrides = Object.assign({}, Module3);
    var arguments_ = [];
    var thisProgram = "./this.program";
    var quit_ = (status, toThrow) => {
      throw toThrow;
    };
    var ENVIRONMENT_IS_WEB = true;
    var ENVIRONMENT_IS_WORKER = false;
    var ENVIRONMENT_IS_NODE = false;
    var ENVIRONMENT_IS_SHELL = false;
    if (Module3["ENVIRONMENT"]) {
      throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");
    }
    var scriptDirectory = "";
    function locateFile(path) {
      if (Module3["locateFile"]) {
        return Module3["locateFile"](path, scriptDirectory);
      }
      return scriptDirectory + path;
    }
    var read_, readAsync, readBinary, setWindowTitle;
    function logExceptionOnExit(e2) {
      if (e2 instanceof ExitStatus) return;
      let toLog = e2;
      if (e2 && typeof e2 == "object" && e2.stack) {
        toLog = [e2, e2.stack];
      }
      err("exiting due to exception: " + toLog);
    }
    if (ENVIRONMENT_IS_SHELL) {
      if (typeof process == "object" && typeof __require === "function" || typeof window == "object" || typeof importScripts == "function") throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");
      if (typeof read != "undefined") {
        read_ = function shell_read(f2) {
          return read(f2);
        };
      }
      readBinary = function readBinary2(f2) {
        let data;
        if (typeof readbuffer == "function") {
          return new Uint8Array(readbuffer(f2));
        }
        data = read(f2, "binary");
        assert(typeof data == "object");
        return data;
      };
      readAsync = function readAsync2(f2, onload, onerror) {
        setTimeout(() => onload(readBinary(f2)), 0);
      };
      if (typeof scriptArgs != "undefined") {
        arguments_ = scriptArgs;
      } else if (typeof arguments != "undefined") {
        arguments_ = arguments;
      }
      if (typeof quit == "function") {
        quit_ = (status, toThrow) => {
          logExceptionOnExit(toThrow);
          quit(status);
        };
      }
      if (typeof print != "undefined") {
        if (typeof console == "undefined") console = {};
        console.log = print;
        console.warn = console.error = typeof printErr != "undefined" ? printErr : print;
      }
    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
      if (ENVIRONMENT_IS_WORKER) {
        scriptDirectory = self.location.href;
      } else if (typeof document != "undefined" && document.currentScript) {
        scriptDirectory = document.currentScript.src;
      }
      if (_scriptDir) {
        scriptDirectory = _scriptDir;
      }
      if (scriptDirectory.indexOf("blob:") !== 0) {
        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf("/") + 1);
      } else {
        scriptDirectory = "";
      }
      if (!(typeof window == "object" || typeof importScripts == "function")) throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");
      {
        read_ = (url) => {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, false);
          xhr.send(null);
          return xhr.responseText;
        };
        if (ENVIRONMENT_IS_WORKER) {
          readBinary = (url) => {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", url, false);
            xhr.responseType = "arraybuffer";
            xhr.send(null);
            return new Uint8Array(xhr.response);
          };
        }
        readAsync = (url, onload, onerror) => {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, true);
          xhr.responseType = "arraybuffer";
          xhr.onload = () => {
            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
              onload(xhr.response);
              return;
            }
            onerror();
          };
          xhr.onerror = onerror;
          xhr.send(null);
        };
      }
      setWindowTitle = (title) => document.title = title;
    } else {
      throw new Error("environment detection error");
    }
    var out = Module3["print"] || console.log.bind(console);
    var err = Module3["printErr"] || console.warn.bind(console);
    Object.assign(Module3, moduleOverrides);
    moduleOverrides = null;
    checkIncomingModuleAPI();
    if (Module3["arguments"]) arguments_ = Module3["arguments"];
    legacyModuleProp("arguments", "arguments_");
    if (Module3["thisProgram"]) thisProgram = Module3["thisProgram"];
    legacyModuleProp("thisProgram", "thisProgram");
    if (Module3["quit"]) quit_ = Module3["quit"];
    legacyModuleProp("quit", "quit_");
    assert(typeof Module3["memoryInitializerPrefixURL"] == "undefined", "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module3["pthreadMainPrefixURL"] == "undefined", "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module3["cdInitializerPrefixURL"] == "undefined", "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module3["filePackagePrefixURL"] == "undefined", "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module3["read"] == "undefined", "Module.read option was removed (modify read_ in JS)");
    assert(typeof Module3["readAsync"] == "undefined", "Module.readAsync option was removed (modify readAsync in JS)");
    assert(typeof Module3["readBinary"] == "undefined", "Module.readBinary option was removed (modify readBinary in JS)");
    assert(typeof Module3["setWindowTitle"] == "undefined", "Module.setWindowTitle option was removed (modify setWindowTitle in JS)");
    assert(typeof Module3["TOTAL_MEMORY"] == "undefined", "Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY");
    legacyModuleProp("read", "read_");
    legacyModuleProp("readAsync", "readAsync");
    legacyModuleProp("readBinary", "readBinary");
    legacyModuleProp("setWindowTitle", "setWindowTitle");
    assert(!ENVIRONMENT_IS_WORKER, "worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable.");
    assert(!ENVIRONMENT_IS_NODE, "node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.");
    assert(!ENVIRONMENT_IS_SHELL, "shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.");
    var POINTER_SIZE = 4;
    function legacyModuleProp(prop, newName) {
      if (!Object.getOwnPropertyDescriptor(Module3, prop)) {
        Object.defineProperty(Module3, prop, { configurable: true, get: function() {
          abort("Module." + prop + " has been replaced with plain " + newName + " (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
        } });
      }
    }
    function ignoredModuleProp(prop) {
      if (Object.getOwnPropertyDescriptor(Module3, prop)) {
        abort("`Module." + prop + "` was supplied but `" + prop + "` not included in INCOMING_MODULE_JS_API");
      }
    }
    function isExportedByForceFilesystem(name) {
      return name === "FS_createPath" || name === "FS_createDataFile" || name === "FS_createPreloadedFile" || name === "FS_unlink" || name === "addRunDependency" || name === "FS_createLazyFile" || name === "FS_createDevice" || name === "removeRunDependency";
    }
    function missingLibrarySymbol(sym) {
      if (typeof globalThis !== "undefined" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {
        Object.defineProperty(globalThis, sym, { configurable: true, get: function() {
          var msg = "`" + sym + "` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line";
          if (isExportedByForceFilesystem(sym)) {
            msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
          }
          warnOnce(msg);
          return void 0;
        } });
      }
    }
    function unexportedRuntimeSymbol(sym) {
      if (!Object.getOwnPropertyDescriptor(Module3, sym)) {
        Object.defineProperty(Module3, sym, { configurable: true, get: function() {
          var msg = "'" + sym + "' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)";
          if (isExportedByForceFilesystem(sym)) {
            msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
          }
          abort(msg);
        } });
      }
    }
    var wasmBinary;
    if (Module3["wasmBinary"]) wasmBinary = Module3["wasmBinary"];
    legacyModuleProp("wasmBinary", "wasmBinary");
    var noExitRuntime = Module3["noExitRuntime"] || true;
    legacyModuleProp("noExitRuntime", "noExitRuntime");
    if (typeof WebAssembly != "object") {
      abort("no native wasm support detected");
    }
    var wasmMemory;
    var ABORT = false;
    var EXITSTATUS;
    function assert(condition, text) {
      if (!condition) {
        abort("Assertion failed" + (text ? ": " + text : ""));
      }
    }
    var UTF8Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : void 0;
    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {
      var endIdx = idx + maxBytesToRead;
      var endPtr = idx;
      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
      }
      var str = "";
      while (idx < endPtr) {
        var u0 = heapOrArray[idx++];
        if (!(u0 & 128)) {
          str += String.fromCharCode(u0);
          continue;
        }
        var u1 = heapOrArray[idx++] & 63;
        if ((u0 & 224) == 192) {
          str += String.fromCharCode((u0 & 31) << 6 | u1);
          continue;
        }
        var u2 = heapOrArray[idx++] & 63;
        if ((u0 & 240) == 224) {
          u0 = (u0 & 15) << 12 | u1 << 6 | u2;
        } else {
          if ((u0 & 248) != 240) warnOnce("Invalid UTF-8 leading byte 0x" + u0.toString(16) + " encountered when deserializing a UTF-8 string in wasm memory to a JS string!");
          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;
        }
        if (u0 < 65536) {
          str += String.fromCharCode(u0);
        } else {
          var ch = u0 - 65536;
          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
        }
      }
      return str;
    }
    function UTF8ToString(ptr, maxBytesToRead) {
      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
    }
    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
      if (!(maxBytesToWrite > 0)) return 0;
      var startIdx = outIdx;
      var endIdx = outIdx + maxBytesToWrite - 1;
      for (var i3 = 0; i3 < str.length; ++i3) {
        var u2 = str.charCodeAt(i3);
        if (u2 >= 55296 && u2 <= 57343) {
          var u1 = str.charCodeAt(++i3);
          u2 = 65536 + ((u2 & 1023) << 10) | u1 & 1023;
        }
        if (u2 <= 127) {
          if (outIdx >= endIdx) break;
          heap[outIdx++] = u2;
        } else if (u2 <= 2047) {
          if (outIdx + 1 >= endIdx) break;
          heap[outIdx++] = 192 | u2 >> 6;
          heap[outIdx++] = 128 | u2 & 63;
        } else if (u2 <= 65535) {
          if (outIdx + 2 >= endIdx) break;
          heap[outIdx++] = 224 | u2 >> 12;
          heap[outIdx++] = 128 | u2 >> 6 & 63;
          heap[outIdx++] = 128 | u2 & 63;
        } else {
          if (outIdx + 3 >= endIdx) break;
          if (u2 > 1114111) warnOnce("Invalid Unicode code point 0x" + u2.toString(16) + " encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).");
          heap[outIdx++] = 240 | u2 >> 18;
          heap[outIdx++] = 128 | u2 >> 12 & 63;
          heap[outIdx++] = 128 | u2 >> 6 & 63;
          heap[outIdx++] = 128 | u2 & 63;
        }
      }
      heap[outIdx] = 0;
      return outIdx - startIdx;
    }
    function stringToUTF8(str, outPtr, maxBytesToWrite) {
      assert(typeof maxBytesToWrite == "number", "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
    }
    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
    function updateGlobalBufferAndViews(buf) {
      buffer = buf;
      Module3["HEAP8"] = HEAP8 = new Int8Array(buf);
      Module3["HEAP16"] = HEAP16 = new Int16Array(buf);
      Module3["HEAP32"] = HEAP32 = new Int32Array(buf);
      Module3["HEAPU8"] = HEAPU8 = new Uint8Array(buf);
      Module3["HEAPU16"] = HEAPU16 = new Uint16Array(buf);
      Module3["HEAPU32"] = HEAPU32 = new Uint32Array(buf);
      Module3["HEAPF32"] = HEAPF32 = new Float32Array(buf);
      Module3["HEAPF64"] = HEAPF64 = new Float64Array(buf);
    }
    var TOTAL_STACK = 5242880;
    if (Module3["TOTAL_STACK"]) assert(TOTAL_STACK === Module3["TOTAL_STACK"], "the stack size can no longer be determined at runtime");
    var INITIAL_MEMORY = Module3["INITIAL_MEMORY"] || 16777216;
    legacyModuleProp("INITIAL_MEMORY", "INITIAL_MEMORY");
    assert(INITIAL_MEMORY >= TOTAL_STACK, "INITIAL_MEMORY should be larger than TOTAL_STACK, was " + INITIAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");
    assert(typeof Int32Array != "undefined" && typeof Float64Array !== "undefined" && Int32Array.prototype.subarray != void 0 && Int32Array.prototype.set != void 0, "JS engine does not provide full typed array support");
    assert(!Module3["wasmMemory"], "Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally");
    assert(INITIAL_MEMORY == 16777216, "Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically");
    var wasmTable;
    function writeStackCookie() {
      var max = _emscripten_stack_get_end();
      assert((max & 3) == 0);
      HEAPU32[max >> 2] = 34821223;
      HEAPU32[max + 4 >> 2] = 2310721022;
      HEAPU32[0] = 1668509029;
    }
    function checkStackCookie() {
      if (ABORT) return;
      var max = _emscripten_stack_get_end();
      var cookie1 = HEAPU32[max >> 2];
      var cookie2 = HEAPU32[max + 4 >> 2];
      if (cookie1 != 34821223 || cookie2 != 2310721022) {
        abort("Stack overflow! Stack cookie has been overwritten at 0x" + max.toString(16) + ", expected hex dwords 0x89BACDFE and 0x2135467, but received 0x" + cookie2.toString(16) + " 0x" + cookie1.toString(16));
      }
      if (HEAPU32[0] !== 1668509029) abort("Runtime error: The application has corrupted its heap memory area (address zero)!");
    }
    (function() {
      var h16 = new Int16Array(1);
      var h8 = new Int8Array(h16.buffer);
      h16[0] = 25459;
      if (h8[0] !== 115 || h8[1] !== 99) throw "Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)";
    })();
    var __ATPRERUN__ = [];
    var __ATINIT__ = [];
    var __ATPOSTRUN__ = [];
    var runtimeInitialized = false;
    function preRun() {
      if (Module3["preRun"]) {
        if (typeof Module3["preRun"] == "function") Module3["preRun"] = [Module3["preRun"]];
        while (Module3["preRun"].length) {
          addOnPreRun(Module3["preRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPRERUN__);
    }
    function initRuntime() {
      assert(!runtimeInitialized);
      runtimeInitialized = true;
      checkStackCookie();
      callRuntimeCallbacks(__ATINIT__);
    }
    function postRun() {
      checkStackCookie();
      if (Module3["postRun"]) {
        if (typeof Module3["postRun"] == "function") Module3["postRun"] = [Module3["postRun"]];
        while (Module3["postRun"].length) {
          addOnPostRun(Module3["postRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPOSTRUN__);
    }
    function addOnPreRun(cb) {
      __ATPRERUN__.unshift(cb);
    }
    function addOnInit(cb) {
      __ATINIT__.unshift(cb);
    }
    function addOnPostRun(cb) {
      __ATPOSTRUN__.unshift(cb);
    }
    assert(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    assert(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    assert(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    assert(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    var runDependencies = 0;
    var runDependencyWatcher = null;
    var dependenciesFulfilled = null;
    var runDependencyTracking = {};
    function addRunDependency(id) {
      runDependencies++;
      if (Module3["monitorRunDependencies"]) {
        Module3["monitorRunDependencies"](runDependencies);
      }
      if (id) {
        assert(!runDependencyTracking[id]);
        runDependencyTracking[id] = 1;
        if (runDependencyWatcher === null && typeof setInterval != "undefined") {
          runDependencyWatcher = setInterval(function() {
            if (ABORT) {
              clearInterval(runDependencyWatcher);
              runDependencyWatcher = null;
              return;
            }
            var shown = false;
            for (var dep in runDependencyTracking) {
              if (!shown) {
                shown = true;
                err("still waiting on run dependencies:");
              }
              err("dependency: " + dep);
            }
            if (shown) {
              err("(end of list)");
            }
          }, 1e4);
        }
      } else {
        err("warning: run dependency added without ID");
      }
    }
    function removeRunDependency(id) {
      runDependencies--;
      if (Module3["monitorRunDependencies"]) {
        Module3["monitorRunDependencies"](runDependencies);
      }
      if (id) {
        assert(runDependencyTracking[id]);
        delete runDependencyTracking[id];
      } else {
        err("warning: run dependency removed without ID");
      }
      if (runDependencies == 0) {
        if (runDependencyWatcher !== null) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
        }
        if (dependenciesFulfilled) {
          var callback = dependenciesFulfilled;
          dependenciesFulfilled = null;
          callback();
        }
      }
    }
    function abort(what) {
      {
        if (Module3["onAbort"]) {
          Module3["onAbort"](what);
        }
      }
      what = "Aborted(" + what + ")";
      err(what);
      ABORT = true;
      EXITSTATUS = 1;
      var e2 = new WebAssembly.RuntimeError(what);
      readyPromiseReject(e2);
      throw e2;
    }
    var FS = { error: function() {
      abort("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM");
    }, init: function() {
      FS.error();
    }, createDataFile: function() {
      FS.error();
    }, createPreloadedFile: function() {
      FS.error();
    }, createLazyFile: function() {
      FS.error();
    }, open: function() {
      FS.error();
    }, mkdev: function() {
      FS.error();
    }, registerDevice: function() {
      FS.error();
    }, analyzePath: function() {
      FS.error();
    }, loadFilesFromDB: function() {
      FS.error();
    }, ErrnoError: function ErrnoError() {
      FS.error();
    } };
    Module3["FS_createDataFile"] = FS.createDataFile;
    Module3["FS_createPreloadedFile"] = FS.createPreloadedFile;
    var dataURIPrefix = "data:application/octet-stream;base64,";
    function isDataURI(filename) {
      return filename.startsWith(dataURIPrefix);
    }
    function isFileURI(filename) {
      return filename.startsWith("file://");
    }
    function createExportWrapper(name, fixedasm) {
      return function() {
        var displayName = name;
        var asm2 = fixedasm;
        if (!fixedasm) {
          asm2 = Module3["asm"];
        }
        assert(runtimeInitialized, "native function `" + displayName + "` called before runtime initialization");
        if (!asm2[name]) {
          assert(asm2[name], "exported native function `" + displayName + "` not found");
        }
        return asm2[name].apply(null, arguments);
      };
    }
    var wasmBinaryFile;
    if (Module3["locateFile"]) {
      wasmBinaryFile = "MeshOptimizer.wasm";
      if (!isDataURI(wasmBinaryFile)) {
        wasmBinaryFile = locateFile(wasmBinaryFile);
      }
    } else {
      wasmBinaryFile = new URL("MeshOptimizer.wasm", import.meta.url).toString();
    }
    function getBinary(file) {
      try {
        if (file == wasmBinaryFile && wasmBinary) {
          return new Uint8Array(wasmBinary);
        }
        if (readBinary) {
          return readBinary(file);
        }
        throw "both async and sync fetching of the wasm failed";
      } catch (err2) {
        abort(err2);
      }
    }
    function getBinaryPromise() {
      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
        if (typeof fetch == "function") {
          return fetch(wasmBinaryFile, { credentials: "same-origin" }).then(function(response) {
            if (!response["ok"]) {
              throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
            }
            return response["arrayBuffer"]();
          }).catch(function() {
            return getBinary(wasmBinaryFile);
          });
        }
      }
      return Promise.resolve().then(function() {
        return getBinary(wasmBinaryFile);
      });
    }
    function createWasm() {
      var info = { "env": asmLibraryArg, "wasi_snapshot_preview1": asmLibraryArg };
      function receiveInstance(instance, module) {
        var exports2 = instance.exports;
        Module3["asm"] = exports2;
        wasmMemory = Module3["asm"]["memory"];
        assert(wasmMemory, "memory not found in wasm exports");
        updateGlobalBufferAndViews(wasmMemory.buffer);
        wasmTable = Module3["asm"]["__indirect_function_table"];
        assert(wasmTable, "table not found in wasm exports");
        addOnInit(Module3["asm"]["__wasm_call_ctors"]);
        removeRunDependency("wasm-instantiate");
      }
      addRunDependency("wasm-instantiate");
      var trueModule = Module3;
      function receiveInstantiationResult(result) {
        assert(Module3 === trueModule, "the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");
        trueModule = null;
        receiveInstance(result["instance"]);
      }
      function instantiateArrayBuffer(receiver) {
        return getBinaryPromise().then(function(binary) {
          return WebAssembly.instantiate(binary, info);
        }).then(function(instance) {
          return instance;
        }).then(receiver, function(reason) {
          err("failed to asynchronously prepare wasm: " + reason);
          if (isFileURI(wasmBinaryFile)) {
            err("warning: Loading from a file URI (" + wasmBinaryFile + ") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing");
          }
          abort(reason);
        });
      }
      function instantiateAsync() {
        if (!wasmBinary && typeof WebAssembly.instantiateStreaming == "function" && !isDataURI(wasmBinaryFile) && typeof fetch == "function") {
          return fetch(wasmBinaryFile, { credentials: "same-origin" }).then(function(response) {
            var result = WebAssembly.instantiateStreaming(response, info);
            return result.then(receiveInstantiationResult, function(reason) {
              err("wasm streaming compile failed: " + reason);
              err("falling back to ArrayBuffer instantiation");
              return instantiateArrayBuffer(receiveInstantiationResult);
            });
          });
        } else {
          return instantiateArrayBuffer(receiveInstantiationResult);
        }
      }
      if (Module3["instantiateWasm"]) {
        try {
          var exports = Module3["instantiateWasm"](info, receiveInstance);
          return exports;
        } catch (e2) {
          err("Module.instantiateWasm callback failed with error: " + e2);
          readyPromiseReject(e2);
        }
      }
      instantiateAsync().catch(readyPromiseReject);
      return {};
    }
    var tempDouble;
    var tempI64;
    function ExitStatus(status) {
      this.name = "ExitStatus";
      this.message = "Program terminated with exit(" + status + ")";
      this.status = status;
    }
    function callRuntimeCallbacks(callbacks) {
      while (callbacks.length > 0) {
        callbacks.shift()(Module3);
      }
    }
    function demangle(func) {
      warnOnce("warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling");
      return func;
    }
    function demangleAll(text) {
      var regex = /\b_Z[\w\d_]+/g;
      return text.replace(regex, function(x2) {
        var y2 = demangle(x2);
        return x2 === y2 ? x2 : y2 + " [" + x2 + "]";
      });
    }
    function jsStackTrace() {
      var error = new Error();
      if (!error.stack) {
        try {
          throw new Error();
        } catch (e2) {
          error = e2;
        }
        if (!error.stack) {
          return "(no stack trace available)";
        }
      }
      return error.stack.toString();
    }
    function warnOnce(text) {
      if (!warnOnce.shown) warnOnce.shown = {};
      if (!warnOnce.shown[text]) {
        warnOnce.shown[text] = 1;
        err(text);
      }
    }
    function writeArrayToMemory(array, buffer2) {
      assert(array.length >= 0, "writeArrayToMemory array must have a length (should be an array or typed array)");
      HEAP8.set(array, buffer2);
    }
    function ___assert_fail(condition, filename, line, func) {
      abort("Assertion failed: " + UTF8ToString(condition) + ", at: " + [filename ? UTF8ToString(filename) : "unknown filename", line, func ? UTF8ToString(func) : "unknown function"]);
    }
    function _abort() {
      abort("native code called abort()");
    }
    function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.copyWithin(dest, src, src + num);
    }
    function getHeapMax() {
      return 2147483648;
    }
    function emscripten_realloc_buffer(size) {
      try {
        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);
        updateGlobalBufferAndViews(wasmMemory.buffer);
        return 1;
      } catch (e2) {
        err("emscripten_realloc_buffer: Attempted to grow heap from " + buffer.byteLength + " bytes to " + size + " bytes, but got error: " + e2);
      }
    }
    function _emscripten_resize_heap(requestedSize) {
      var oldSize = HEAPU8.length;
      requestedSize = requestedSize >>> 0;
      assert(requestedSize > oldSize);
      var maxHeapSize = getHeapMax();
      if (requestedSize > maxHeapSize) {
        err("Cannot enlarge memory, asked to go up to " + requestedSize + " bytes, but the limit is " + maxHeapSize + " bytes!");
        return false;
      }
      let alignUp = (x2, multiple) => x2 + (multiple - x2 % multiple) % multiple;
      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);
        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));
        var replacement = emscripten_realloc_buffer(newSize);
        if (replacement) {
          return true;
        }
      }
      err("Failed to grow the heap from " + oldSize + " bytes to " + newSize + " bytes, not enough memory!");
      return false;
    }
    function getCFunc(ident) {
      var func = Module3["_" + ident];
      assert(func, "Cannot call unknown function " + ident + ", make sure it is exported");
      return func;
    }
    function ccall(ident, returnType, argTypes, args, opts) {
      var toC = { "string": (str) => {
        var ret2 = 0;
        if (str !== null && str !== void 0 && str !== 0) {
          var len = (str.length << 2) + 1;
          ret2 = stackAlloc(len);
          stringToUTF8(str, ret2, len);
        }
        return ret2;
      }, "array": (arr) => {
        var ret2 = stackAlloc(arr.length);
        writeArrayToMemory(arr, ret2);
        return ret2;
      } };
      function convertReturnValue(ret2) {
        if (returnType === "string") {
          return UTF8ToString(ret2);
        }
        if (returnType === "boolean") return Boolean(ret2);
        return ret2;
      }
      var func = getCFunc(ident);
      var cArgs = [];
      var stack = 0;
      assert(returnType !== "array", 'Return type should not be "array".');
      if (args) {
        for (var i3 = 0; i3 < args.length; i3++) {
          var converter = toC[argTypes[i3]];
          if (converter) {
            if (stack === 0) stack = stackSave();
            cArgs[i3] = converter(args[i3]);
          } else {
            cArgs[i3] = args[i3];
          }
        }
      }
      var ret = func.apply(null, cArgs);
      function onDone(ret2) {
        if (stack !== 0) stackRestore(stack);
        return convertReturnValue(ret2);
      }
      ret = onDone(ret);
      return ret;
    }
    function cwrap(ident, returnType, argTypes, opts) {
      return function() {
        return ccall(ident, returnType, argTypes, arguments, opts);
      };
    }
    function checkIncomingModuleAPI() {
      ignoredModuleProp("fetchSettings");
    }
    var asmLibraryArg = { "__assert_fail": ___assert_fail, "abort": _abort, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap };
    var asm = createWasm();
    var ___wasm_call_ctors = Module3["___wasm_call_ctors"] = createExportWrapper("__wasm_call_ctors");
    var _meshopt_buildMeshletsBound = Module3["_meshopt_buildMeshletsBound"] = createExportWrapper("meshopt_buildMeshletsBound");
    var _meshopt_buildMeshlets = Module3["_meshopt_buildMeshlets"] = createExportWrapper("meshopt_buildMeshlets");
    var _meshopt_computeClusterBounds = Module3["_meshopt_computeClusterBounds"] = createExportWrapper("meshopt_computeClusterBounds");
    var _meshopt_simplify = Module3["_meshopt_simplify"] = createExportWrapper("meshopt_simplify");
    var _meshopt_simplifyWithAttributes = Module3["_meshopt_simplifyWithAttributes"] = createExportWrapper("meshopt_simplifyWithAttributes");
    var _meshopt_simplifyScale = Module3["_meshopt_simplifyScale"] = createExportWrapper("meshopt_simplifyScale");
    var _meshopt_generateVertexRemap = Module3["_meshopt_generateVertexRemap"] = createExportWrapper("meshopt_generateVertexRemap");
    var _meshopt_remapVertexBuffer = Module3["_meshopt_remapVertexBuffer"] = createExportWrapper("meshopt_remapVertexBuffer");
    var _meshopt_remapIndexBuffer = Module3["_meshopt_remapIndexBuffer"] = createExportWrapper("meshopt_remapIndexBuffer");
    var ___errno_location = Module3["___errno_location"] = createExportWrapper("__errno_location");
    var _fflush = Module3["_fflush"] = createExportWrapper("fflush");
    var _malloc = Module3["_malloc"] = createExportWrapper("malloc");
    var _emscripten_stack_init = Module3["_emscripten_stack_init"] = function() {
      return (_emscripten_stack_init = Module3["_emscripten_stack_init"] = Module3["asm"]["emscripten_stack_init"]).apply(null, arguments);
    };
    var _emscripten_stack_get_free = Module3["_emscripten_stack_get_free"] = function() {
      return (_emscripten_stack_get_free = Module3["_emscripten_stack_get_free"] = Module3["asm"]["emscripten_stack_get_free"]).apply(null, arguments);
    };
    var _emscripten_stack_get_base = Module3["_emscripten_stack_get_base"] = function() {
      return (_emscripten_stack_get_base = Module3["_emscripten_stack_get_base"] = Module3["asm"]["emscripten_stack_get_base"]).apply(null, arguments);
    };
    var _emscripten_stack_get_end = Module3["_emscripten_stack_get_end"] = function() {
      return (_emscripten_stack_get_end = Module3["_emscripten_stack_get_end"] = Module3["asm"]["emscripten_stack_get_end"]).apply(null, arguments);
    };
    var stackSave = Module3["stackSave"] = createExportWrapper("stackSave");
    var stackRestore = Module3["stackRestore"] = createExportWrapper("stackRestore");
    var stackAlloc = Module3["stackAlloc"] = createExportWrapper("stackAlloc");
    Module3["ccall"] = ccall;
    Module3["cwrap"] = cwrap;
    var unexportedRuntimeSymbols = ["run", "UTF8ArrayToString", "UTF8ToString", "stringToUTF8Array", "stringToUTF8", "lengthBytesUTF8", "addOnPreRun", "addOnInit", "addOnPreMain", "addOnExit", "addOnPostRun", "addRunDependency", "removeRunDependency", "FS_createFolder", "FS_createPath", "FS_createDataFile", "FS_createPreloadedFile", "FS_createLazyFile", "FS_createLink", "FS_createDevice", "FS_unlink", "getLEB", "getFunctionTables", "alignFunctionTables", "registerFunctions", "prettyPrint", "getCompilerSetting", "print", "printErr", "callMain", "abort", "keepRuntimeAlive", "wasmMemory", "stackAlloc", "stackSave", "stackRestore", "getTempRet0", "setTempRet0", "writeStackCookie", "checkStackCookie", "ptrToString", "zeroMemory", "stringToNewUTF8", "exitJS", "getHeapMax", "emscripten_realloc_buffer", "ENV", "ERRNO_CODES", "ERRNO_MESSAGES", "setErrNo", "inetPton4", "inetNtop4", "inetPton6", "inetNtop6", "readSockaddr", "writeSockaddr", "DNS", "getHostByName", "Protocols", "Sockets", "getRandomDevice", "warnOnce", "traverseStack", "UNWIND_CACHE", "convertPCtoSourceLocation", "readAsmConstArgsArray", "readAsmConstArgs", "mainThreadEM_ASM", "jstoi_q", "jstoi_s", "getExecutableName", "listenOnce", "autoResumeAudioContext", "dynCallLegacy", "getDynCaller", "dynCall", "handleException", "runtimeKeepalivePush", "runtimeKeepalivePop", "callUserCallback", "maybeExit", "safeSetTimeout", "asmjsMangle", "asyncLoad", "alignMemory", "mmapAlloc", "writeI53ToI64", "writeI53ToI64Clamped", "writeI53ToI64Signaling", "writeI53ToU64Clamped", "writeI53ToU64Signaling", "readI53FromI64", "readI53FromU64", "convertI32PairToI53", "convertI32PairToI53Checked", "convertU32PairToI53", "getCFunc", "uleb128Encode", "sigToWasmTypes", "generateFuncType", "convertJsFunctionToWasm", "freeTableIndexes", "functionsInTableMap", "getEmptyTableSlot", "updateTableMap", "addFunction", "removeFunction", "reallyNegative", "unSign", "strLen", "reSign", "formatString", "setValue", "getValue", "PATH", "PATH_FS", "intArrayFromString", "intArrayToString", "AsciiToString", "stringToAscii", "UTF16Decoder", "UTF16ToString", "stringToUTF16", "lengthBytesUTF16", "UTF32ToString", "stringToUTF32", "lengthBytesUTF32", "allocateUTF8", "allocateUTF8OnStack", "writeStringToMemory", "writeArrayToMemory", "writeAsciiToMemory", "SYSCALLS", "getSocketFromFD", "getSocketAddress", "JSEvents", "registerKeyEventCallback", "specialHTMLTargets", "maybeCStringToJsString", "findEventTarget", "findCanvasEventTarget", "getBoundingClientRect", "fillMouseEventData", "registerMouseEventCallback", "registerWheelEventCallback", "registerUiEventCallback", "registerFocusEventCallback", "fillDeviceOrientationEventData", "registerDeviceOrientationEventCallback", "fillDeviceMotionEventData", "registerDeviceMotionEventCallback", "screenOrientation", "fillOrientationChangeEventData", "registerOrientationChangeEventCallback", "fillFullscreenChangeEventData", "registerFullscreenChangeEventCallback", "JSEvents_requestFullscreen", "JSEvents_resizeCanvasForFullscreen", "registerRestoreOldStyle", "hideEverythingExceptGivenElement", "restoreHiddenElements", "setLetterbox", "currentFullscreenStrategy", "restoreOldWindowedStyle", "softFullscreenResizeWebGLRenderTarget", "doRequestFullscreen", "fillPointerlockChangeEventData", "registerPointerlockChangeEventCallback", "registerPointerlockErrorEventCallback", "requestPointerLock", "fillVisibilityChangeEventData", "registerVisibilityChangeEventCallback", "registerTouchEventCallback", "fillGamepadEventData", "registerGamepadEventCallback", "registerBeforeUnloadEventCallback", "fillBatteryEventData", "battery", "registerBatteryEventCallback", "setCanvasElementSize", "getCanvasElementSize", "demangle", "demangleAll", "jsStackTrace", "stackTrace", "ExitStatus", "getEnvStrings", "checkWasiClock", "flush_NO_FILESYSTEM", "dlopenMissingError", "createDyncallWrapper", "setImmediateWrapped", "clearImmediateWrapped", "polyfillSetImmediate", "uncaughtExceptionCount", "exceptionLast", "exceptionCaught", "ExceptionInfo", "exception_addRef", "exception_decRef", "Browser", "setMainLoop", "wget", "FS", "MEMFS", "TTY", "PIPEFS", "SOCKFS", "_setNetworkCallback", "tempFixedLengthArray", "miniTempWebGLFloatBuffers", "heapObjectForWebGLType", "heapAccessShiftForWebGLHeap", "GL", "emscriptenWebGLGet", "computeUnpackAlignedImageSize", "emscriptenWebGLGetTexPixelData", "emscriptenWebGLGetUniform", "webglGetUniformLocation", "webglPrepareUniformLocationsBeforeFirstUse", "webglGetLeftBracePos", "emscriptenWebGLGetVertexAttrib", "writeGLArray", "AL", "SDL_unicode", "SDL_ttfContext", "SDL_audio", "SDL", "SDL_gfx", "GLUT", "EGL", "GLFW_Window", "GLFW", "GLEW", "IDBStore", "runAndAbortIfError", "ALLOC_NORMAL", "ALLOC_STACK", "allocate"];
    unexportedRuntimeSymbols.forEach(unexportedRuntimeSymbol);
    var missingLibrarySymbols = ["ptrToString", "zeroMemory", "stringToNewUTF8", "exitJS", "setErrNo", "inetPton4", "inetNtop4", "inetPton6", "inetNtop6", "readSockaddr", "writeSockaddr", "getHostByName", "getRandomDevice", "traverseStack", "convertPCtoSourceLocation", "readAsmConstArgs", "mainThreadEM_ASM", "jstoi_q", "jstoi_s", "getExecutableName", "listenOnce", "autoResumeAudioContext", "dynCallLegacy", "getDynCaller", "dynCall", "runtimeKeepalivePush", "runtimeKeepalivePop", "callUserCallback", "maybeExit", "safeSetTimeout", "asmjsMangle", "asyncLoad", "alignMemory", "mmapAlloc", "writeI53ToI64", "writeI53ToI64Clamped", "writeI53ToI64Signaling", "writeI53ToU64Clamped", "writeI53ToU64Signaling", "readI53FromI64", "readI53FromU64", "convertI32PairToI53", "convertI32PairToI53Checked", "convertU32PairToI53", "uleb128Encode", "sigToWasmTypes", "generateFuncType", "convertJsFunctionToWasm", "getEmptyTableSlot", "updateTableMap", "addFunction", "removeFunction", "reallyNegative", "unSign", "strLen", "reSign", "formatString", "intArrayFromString", "intArrayToString", "AsciiToString", "stringToAscii", "UTF16ToString", "stringToUTF16", "lengthBytesUTF16", "UTF32ToString", "stringToUTF32", "lengthBytesUTF32", "allocateUTF8", "allocateUTF8OnStack", "writeStringToMemory", "writeAsciiToMemory", "getSocketFromFD", "getSocketAddress", "registerKeyEventCallback", "maybeCStringToJsString", "findEventTarget", "findCanvasEventTarget", "getBoundingClientRect", "fillMouseEventData", "registerMouseEventCallback", "registerWheelEventCallback", "registerUiEventCallback", "registerFocusEventCallback", "fillDeviceOrientationEventData", "registerDeviceOrientationEventCallback", "fillDeviceMotionEventData", "registerDeviceMotionEventCallback", "screenOrientation", "fillOrientationChangeEventData", "registerOrientationChangeEventCallback", "fillFullscreenChangeEventData", "registerFullscreenChangeEventCallback", "JSEvents_requestFullscreen", "JSEvents_resizeCanvasForFullscreen", "registerRestoreOldStyle", "hideEverythingExceptGivenElement", "restoreHiddenElements", "setLetterbox", "softFullscreenResizeWebGLRenderTarget", "doRequestFullscreen", "fillPointerlockChangeEventData", "registerPointerlockChangeEventCallback", "registerPointerlockErrorEventCallback", "requestPointerLock", "fillVisibilityChangeEventData", "registerVisibilityChangeEventCallback", "registerTouchEventCallback", "fillGamepadEventData", "registerGamepadEventCallback", "registerBeforeUnloadEventCallback", "fillBatteryEventData", "battery", "registerBatteryEventCallback", "setCanvasElementSize", "getCanvasElementSize", "getEnvStrings", "checkWasiClock", "flush_NO_FILESYSTEM", "createDyncallWrapper", "setImmediateWrapped", "clearImmediateWrapped", "polyfillSetImmediate", "ExceptionInfo", "exception_addRef", "exception_decRef", "setMainLoop", "_setNetworkCallback", "heapObjectForWebGLType", "heapAccessShiftForWebGLHeap", "emscriptenWebGLGet", "computeUnpackAlignedImageSize", "emscriptenWebGLGetTexPixelData", "emscriptenWebGLGetUniform", "webglGetUniformLocation", "webglPrepareUniformLocationsBeforeFirstUse", "webglGetLeftBracePos", "emscriptenWebGLGetVertexAttrib", "writeGLArray", "SDL_unicode", "SDL_ttfContext", "SDL_audio", "GLFW_Window", "runAndAbortIfError", "ALLOC_NORMAL", "ALLOC_STACK", "allocate"];
    missingLibrarySymbols.forEach(missingLibrarySymbol);
    var calledRun;
    dependenciesFulfilled = function runCaller() {
      if (!calledRun) run();
      if (!calledRun) dependenciesFulfilled = runCaller;
    };
    function stackCheckInit() {
      _emscripten_stack_init();
      writeStackCookie();
    }
    function run(args) {
      args = args || arguments_;
      if (runDependencies > 0) {
        return;
      }
      stackCheckInit();
      preRun();
      if (runDependencies > 0) {
        return;
      }
      function doRun() {
        if (calledRun) return;
        calledRun = true;
        Module3["calledRun"] = true;
        if (ABORT) return;
        initRuntime();
        readyPromiseResolve(Module3);
        if (Module3["onRuntimeInitialized"]) Module3["onRuntimeInitialized"]();
        assert(!Module3["_main"], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');
        postRun();
      }
      if (Module3["setStatus"]) {
        Module3["setStatus"]("Running...");
        setTimeout(function() {
          setTimeout(function() {
            Module3["setStatus"]("");
          }, 1);
          doRun();
        }, 1);
      } else {
        doRun();
      }
      checkStackCookie();
    }
    if (Module3["preInit"]) {
      if (typeof Module3["preInit"] == "function") Module3["preInit"] = [Module3["preInit"]];
      while (Module3["preInit"].length > 0) {
        Module3["preInit"].pop()();
      }
    }
    run();
    return Module3.ready;
  };
})();
var MeshOptimizer_default = Module;

// src/plugins/meshlets/Meshoptimizer.ts
var attribute_size = 8;
var Meshoptimizer = class _Meshoptimizer {
  static module;
  static isLoaded = false;
  static kMeshletMaxTriangles = 512;
  static async load() {
    if (!_Meshoptimizer.module) {
      _Meshoptimizer.module = await MeshOptimizer_default();
      this.isLoaded = true;
    }
  }
  static buildNeighbors(meshlets, meshlet_vertices_result) {
    const vertex_to_meshlets = [];
    for (let i3 = 0; i3 < meshlets.length; i3++) {
      const meshlet = meshlets[i3];
      const meshlet_vertices = meshlet_vertices_result.slice(meshlet.vertex_offset, meshlet.vertex_offset + meshlet.vertex_count);
      for (let j2 = 0; j2 < meshlet_vertices.length; j2++) {
        if (!vertex_to_meshlets[meshlet_vertices[j2]]) vertex_to_meshlets[meshlet_vertices[j2]] = { count: 0, meshlets: [] };
        vertex_to_meshlets[meshlet_vertices[j2]].count++;
        vertex_to_meshlets[meshlet_vertices[j2]].meshlets.push(i3);
      }
    }
    const neighbors = Array.from({ length: meshlets.length }, () => /* @__PURE__ */ new Set());
    for (const v2 of vertex_to_meshlets) {
      const meshletArray = v2.meshlets;
      for (let i3 = 0; i3 < meshletArray.length; i3++) {
        for (let j2 = i3 + 1; j2 < meshletArray.length; j2++) {
          neighbors[meshletArray[i3]].add(meshletArray[j2]);
          neighbors[meshletArray[j2]].add(meshletArray[i3]);
        }
      }
    }
    return neighbors.map((set) => [...set]);
  }
  static meshopt_buildMeshlets(vertices, indices, max_vertices, max_triangles, cone_weight) {
    if (!this.isLoaded) throw Error("Library not loaded");
    const MeshOptmizer = _Meshoptimizer.module;
    function rebuildMeshlets(data) {
      let meshlets2 = [];
      for (let i3 = 0; i3 < data.length; i3 += 4) {
        meshlets2.push({
          vertex_offset: data[i3 + 0],
          triangle_offset: data[i3 + 1],
          vertex_count: data[i3 + 2],
          triangle_count: data[i3 + 3]
        });
      }
      return meshlets2;
    }
    const max_meshlets = WASMHelper.call(MeshOptmizer, "meshopt_buildMeshletsBound", "number", indices.length, max_vertices, max_triangles);
    const meshlets = new WASMPointer(new Uint32Array(max_meshlets * 4), "out");
    const meshlet_vertices = new WASMPointer(new Uint32Array(max_meshlets * max_vertices), "out");
    const meshlet_triangles = new WASMPointer(new Uint8Array(max_meshlets * max_triangles * 3), "out");
    const meshletCount = WASMHelper.call(
      MeshOptmizer,
      "meshopt_buildMeshlets",
      "number",
      meshlets,
      meshlet_vertices,
      meshlet_triangles,
      new WASMPointer(Uint32Array.from(indices)),
      indices.length,
      new WASMPointer(Float32Array.from(vertices)),
      vertices.length / attribute_size,
      attribute_size * Float32Array.BYTES_PER_ELEMENT,
      max_vertices,
      max_triangles,
      cone_weight
    );
    const meshlets_result = rebuildMeshlets(meshlets.data).slice(0, meshletCount);
    const output = {
      meshlets_count: meshletCount,
      meshlets_result: meshlets_result.slice(0, meshletCount),
      meshlet_vertices_result: new Uint32Array(meshlet_vertices.data),
      meshlet_triangles_result: new Uint8Array(meshlet_triangles.data)
    };
    return output;
  }
  static meshopt_computeClusterBounds(vertices, indices) {
    if (!this.isLoaded) throw Error("Library not loaded");
    const MeshOptmizer = _Meshoptimizer.module;
    const boundsDataPtr = new WASMPointer(new Float32Array(16), "out");
    WASMHelper.call(
      MeshOptmizer,
      "meshopt_computeClusterBounds",
      "number",
      boundsDataPtr,
      new WASMPointer(Uint32Array.from(indices)),
      indices.length,
      new WASMPointer(Float32Array.from(vertices)),
      vertices.length / attribute_size,
      attribute_size * Float32Array.BYTES_PER_ELEMENT
    );
    const boundsData = boundsDataPtr.data;
    return {
      // /* bounding sphere, useful for frustum and occlusion culling */
      center: new Vector3(boundsData[0], boundsData[1], boundsData[2]),
      // center: Vector3; // float center[3];
      radius: boundsData[3],
      // float radius;
      // /* normal cone, useful for backface culling */
      cone_apex: new Vector3(boundsData[4], boundsData[5], boundsData[6]),
      // float cone_apex[3];
      cone_axis: new Vector3(boundsData[7], boundsData[8], boundsData[9]),
      // float cone_axis[3];
      cone_cutoff: boundsData[10]
      // float cone_cutoff; /* = cos(angle/2) */
      // // /* normal cone axis and cutoff, stored in 8-bit SNORM format; decode using x/127.0 */
      // cone_axis_s8: new Vector3(boundsData[11], boundsData[12], boundsData[13]), // signed char cone_axis_s8[3];
      // cone_cutoff_s8: new Vector3(boundsData[14], boundsData[15], boundsData[16]) // signed char cone_cutoff_s8;
    };
  }
  static clean(meshlet) {
    const MeshOptmizer = _Meshoptimizer.module;
    const remap = new WASMPointer(new Uint32Array(meshlet.indices.length * attribute_size), "out");
    const indices = new WASMPointer(new Uint32Array(meshlet.indices), "in");
    const vertices = new WASMPointer(new Float32Array(meshlet.vertices), "in");
    const vertex_count = WASMHelper.call(
      MeshOptmizer,
      "meshopt_generateVertexRemap",
      "number",
      remap,
      indices,
      meshlet.indices.length,
      vertices,
      meshlet.vertices.length / attribute_size,
      attribute_size * Float32Array.BYTES_PER_ELEMENT
    );
    const indices_remapped = new WASMPointer(new Uint32Array(meshlet.indices.length), "out");
    WASMHelper.call(
      MeshOptmizer,
      "meshopt_remapIndexBuffer",
      "number",
      indices_remapped,
      indices,
      meshlet.indices.length,
      remap
    );
    const vertices_remapped = new WASMPointer(new Float32Array(vertex_count * attribute_size), "out");
    WASMHelper.call(
      MeshOptmizer,
      "meshopt_remapVertexBuffer",
      "number",
      vertices_remapped,
      vertices,
      meshlet.vertices.length / attribute_size,
      attribute_size * Float32Array.BYTES_PER_ELEMENT,
      remap
    );
    return new Meshlet(new Float32Array(vertices_remapped.data), new Uint32Array(indices_remapped.data));
  }
  static meshopt_simplify(meshlet, target_count, target_error = 1) {
    const MeshOptmizer = _Meshoptimizer.module;
    const destination = new WASMPointer(new Uint32Array(meshlet.indices.length), "out");
    const result_error = new WASMPointer(new Float32Array(1), "out");
    const meshopt_SimplifyLockBorder = 1 << 0;
    const meshopt_SimplifySparse = 1 << 1;
    const meshopt_SimplifyErrorAbsolute = 1 << 2;
    const options = meshopt_SimplifyLockBorder | meshopt_SimplifySparse;
    const simplified_index_count = WASMHelper.call(
      MeshOptmizer,
      "meshopt_simplify",
      "number",
      destination,
      // unsigned int* destination,
      new WASMPointer(new Uint32Array(meshlet.indices)),
      // const unsigned int* indices,
      meshlet.indices.length,
      // size_t index_count,
      new WASMPointer(new Float32Array(meshlet.vertices)),
      // const float* vertex_positions,
      meshlet.vertices.length / attribute_size,
      // size_t vertex_count,
      attribute_size * Float32Array.BYTES_PER_ELEMENT,
      // size_t vertex_positions_stride,
      target_count,
      // size_t target_index_count,
      target_error,
      // float target_error, Should be 0.01 but cant reach 128 triangles with it
      1,
      // unsigned int options, preserve borders
      result_error
      // float* result_error
    );
    const destination_resized = destination.data.slice(0, simplified_index_count);
    return {
      error: result_error.data[0],
      meshlet: new Meshlet(meshlet.vertices, destination_resized)
    };
  }
  static meshopt_simplifyWithAttributes(meshlet, vertex_lock_array, target_count, target_error = 1) {
    const MeshOptmizer = _Meshoptimizer.module;
    const destination = new WASMPointer(new Uint32Array(meshlet.indices.length), "out");
    const result_error = new WASMPointer(new Float32Array(1), "out");
    const meshopt_SimplifyLockBorder = 1 << 0;
    const meshopt_SimplifySparse = 1 << 1;
    const meshopt_SimplifyErrorAbsolute = 1 << 2;
    const options = meshopt_SimplifySparse;
    const vertex_lock = vertex_lock_array === null ? null : new WASMPointer(vertex_lock_array, "in");
    const simplified_index_count = WASMHelper.call(
      MeshOptmizer,
      "meshopt_simplifyWithAttributes",
      "number",
      destination,
      // unsigned int* destination,
      new WASMPointer(new Uint32Array(meshlet.indices)),
      // const unsigned int* indices,
      meshlet.indices.length,
      // size_t index_count,
      new WASMPointer(new Float32Array(meshlet.vertices)),
      // const float* vertex_positions,
      meshlet.vertices.length / attribute_size,
      // size_t vertex_count,
      attribute_size * Float32Array.BYTES_PER_ELEMENT,
      // size_t vertex_positions_stride,
      null,
      0,
      null,
      0,
      vertex_lock,
      target_count,
      // size_t target_index_count,
      target_error,
      // float target_error, Should be 0.01 but cant reach 128 triangles with it
      options,
      // unsigned int options, preserve borders
      result_error
      // float* result_error
    );
    const destination_resized = destination.data.slice(0, simplified_index_count);
    return {
      error: result_error.data[0],
      meshlet: new Meshlet(meshlet.vertices, destination_resized)
    };
  }
  // ib, ib, 24, vb, 9, 12, NULL, 0, NULL, 0, lock, 3, 1e-3f, 0
  static meshopt_simplifyWithAttributesRaw(indices, a2, vertices, b2, c2, d2, e2, f2, g2, lock, target_count, target_error, options) {
    const MeshOptmizer = _Meshoptimizer.module;
    const destination = new WASMPointer(new Uint32Array(indices.length), "out");
    const result_error = new WASMPointer(new Float32Array(1), "out");
    const vertex_lock = new WASMPointer(lock, "in");
    const simplified_index_count = WASMHelper.call(
      MeshOptmizer,
      "meshopt_simplifyWithAttributes",
      "number",
      destination,
      // unsigned int* destination,
      new WASMPointer(new Uint32Array(indices)),
      // const unsigned int* indices,
      a2,
      // size_t index_count,
      new WASMPointer(new Float32Array(vertices)),
      // const float* vertex_positions,
      b2,
      // size_t vertex_count,
      c2,
      d2,
      e2,
      f2,
      g2,
      vertex_lock,
      target_count,
      // size_t target_index_count,
      target_error,
      // float target_error, Should be 0.01 but cant reach 128 triangles with it
      options,
      // unsigned int options, preserve borders
      result_error
      // float* result_error
    );
    const destination_resized = destination.data.slice(0, simplified_index_count);
    return destination_resized;
  }
  static meshopt_simplifyScale(meshlet) {
    const MeshOptmizer = _Meshoptimizer.module;
    const vertices = new WASMPointer(new Float32Array(meshlet.vertices), "in");
    const scale2 = WASMHelper.call(
      MeshOptmizer,
      "meshopt_simplifyScale",
      "number",
      vertices,
      meshlet.vertices.length / attribute_size,
      attribute_size * Float32Array.BYTES_PER_ELEMENT
    );
    return scale2;
  }
};

// src/plugins/meshlets/Meshlet.ts
var Meshlet = class _Meshlet {
  static max_triangles = 128;
  static max_vertices = 255;
  vertices;
  indices;
  id = Utils.UUID();
  lod;
  children;
  parents;
  _boundingVolume;
  get boundingVolume() {
    if (!this._boundingVolume) this._boundingVolume = Sphere.fromVertices(this.vertices, this.indices, attribute_size);
    return this._boundingVolume;
  }
  set boundingVolume(boundingVolume) {
    this._boundingVolume = boundingVolume;
  }
  // public boundingVolume: Sphere;
  parentBoundingVolume;
  parentError = Infinity;
  clusterError = 0;
  vertices_gpu;
  crc;
  bounds;
  interleaved;
  coneBounds;
  constructor(vertices, indices) {
    this.vertices = vertices;
    this.indices = indices;
    this.lod = 0;
    this.children = [];
    this.parents = [];
    this.bounds = BoundingVolume.FromVertices(this.vertices);
    if (this.indices.length / 3 < Meshoptimizer.kMeshletMaxTriangles) {
      const coneBounds = Meshoptimizer.meshopt_computeClusterBounds(this.vertices, this.indices);
      this.coneBounds = { cone_apex: coneBounds.cone_apex, cone_axis: coneBounds.cone_axis, cone_cutoff: coneBounds.cone_cutoff };
    }
    const verticesNonIndexed = _Meshlet.convertBufferAttributeToNonIndexed(this.vertices, this.indices, 3, true, 8, 0);
    const normalsNonIndexed = _Meshlet.convertBufferAttributeToNonIndexed(this.vertices, this.indices, 3, true, 8, 3);
    const uvsNonIndexed = _Meshlet.convertBufferAttributeToNonIndexed(this.vertices, this.indices, 2, true, 8, 6);
    const interleaved = InterleavedVertexAttribute.fromArrays([verticesNonIndexed, normalsNonIndexed, uvsNonIndexed], [3, 3, 2]);
    const verticesGPU = [];
    for (let i3 = 0; i3 < interleaved.array.length; i3 += 8) {
      verticesGPU.push(
        interleaved.array[i3 + 0],
        interleaved.array[i3 + 1],
        interleaved.array[i3 + 2],
        interleaved.array[i3 + 3],
        interleaved.array[i3 + 4],
        interleaved.array[i3 + 5],
        interleaved.array[i3 + 6],
        interleaved.array[i3 + 7]
      );
    }
    this.interleaved = interleaved;
    this.vertices_gpu = new Float32Array(_Meshlet.max_triangles * (3 + 3 + 2) * 3);
    this.vertices_gpu.set(verticesGPU.slice(0, _Meshlet.max_triangles * (3 + 3 + 2) * 3));
    this.crc = CRC32.forBytes(new Uint8Array(this.vertices_gpu.buffer));
  }
  static convertBufferAttributeToNonIndexed(attribute, indices, itemSize, isInterleaved = false, stride = 3, offset = 0) {
    if (!attribute) throw Error("Invalid attribute");
    const array = attribute;
    const array2 = new Float32Array(indices.length * itemSize);
    let index = 0, index2 = 0;
    for (let i3 = 0, l2 = indices.length; i3 < l2; i3++) {
      if (isInterleaved === true) index = indices[i3] * stride + offset;
      else index = indices[i3] * itemSize;
      for (let j2 = 0; j2 < itemSize; j2++) {
        array2[index2++] = array[index++];
      }
    }
    return array2;
  }
};

// src/renderer/passes/PrepareGBuffers.ts
var PrepareGBuffers = class extends RenderPass {
  name = "PrepareGBuffers";
  gBufferAlbedoRT;
  gBufferNormalRT;
  gBufferERMORT;
  depthTexture;
  constructor() {
    super({ outputs: [
      PassParams.depthTexture,
      PassParams.GBufferAlbedo,
      PassParams.GBufferNormal,
      PassParams.GBufferERMO,
      PassParams.GBufferDepth
    ] });
  }
  async init(resources) {
    this.depthTexture = DepthTexture.Create(Renderer.width, Renderer.height);
    this.gBufferAlbedoRT = RenderTexture.Create(Renderer.width, Renderer.height, 1, "rgba16float");
    this.gBufferNormalRT = RenderTexture.Create(Renderer.width, Renderer.height, 1, "rgba16float");
    this.gBufferERMORT = RenderTexture.Create(Renderer.width, Renderer.height, 1, "rgba16float");
    this.initialized = true;
  }
  execute(resources) {
    const colorTargets = [
      { target: this.gBufferAlbedoRT, clear: true },
      { target: this.gBufferNormalRT, clear: true },
      { target: this.gBufferERMORT, clear: true }
    ];
    RendererContext.BeginRenderPass(`PrepareGBuffers`, colorTargets, { target: this.depthTexture, clear: true }, true);
    RendererContext.EndRenderPass();
    resources.setResource(PassParams.depthTexture, this.depthTexture);
    resources.setResource(PassParams.GBufferDepth, this.depthTexture);
    resources.setResource(PassParams.GBufferAlbedo, this.gBufferAlbedoRT);
    resources.setResource(PassParams.GBufferNormal, this.gBufferNormalRT);
    resources.setResource(PassParams.GBufferERMO, this.gBufferERMORT);
    const settings = new Float32Array([
      +Debugger.isDebugDepthPassEnabled,
      Debugger.debugDepthMipLevel,
      Debugger.debugDepthExposure,
      +Debugger.isFrustumCullingEnabled,
      +Debugger.isBackFaceCullingEnabled,
      +Debugger.isOcclusionCullingEnabled,
      +Debugger.isSmallFeaturesCullingEnabled,
      Debugger.staticLOD,
      Debugger.dynamicLODErrorThreshold,
      +Debugger.isDynamicLODEnabled,
      Debugger.viewType,
      Debugger.meshletsViewType,
      +Debugger.useHeightMap,
      Debugger.heightScale,
      Meshlet.max_triangles,
      ...Camera.mainCamera.transform.position.elements,
      0,
      0
    ]);
    resources.setResource(PassParams.DebugSettings, settings);
  }
};

// src/renderer/passes/HiZPass.ts
var HiZPass = class extends RenderPass {
  name = "HiZPass";
  shader;
  quadGeometry;
  debugDepthTexture;
  inputTexture;
  targetTextures = [];
  // TODO: This should be next powerOf2 for SwapChain dims
  depthWidth = 512;
  depthHeight = 512;
  depthLevels;
  passBuffers = [];
  currentBuffer;
  initialized = false;
  blitShader;
  constructor() {
    super({
      inputs: [PassParams.depthTexture],
      outputs: [PassParams.depthTexturePyramid]
    });
  }
  async init(resources) {
    this.shader = await Shader.Create({
      code: await ShaderLoader.DepthDownsample,
      attributes: {
        position: { location: 0, size: 3, type: "vec3" },
        normal: { location: 1, size: 3, type: "vec3" },
        uv: { location: 2, size: 2, type: "vec2" }
      },
      colorOutputs: [],
      depthOutput: "depth24plus",
      uniforms: {
        depthTextureInputSampler: { group: 0, binding: 0, type: "sampler" },
        depthTextureInput: { group: 0, binding: 1, type: "depthTexture" },
        currentMip: { group: 0, binding: 2, type: "storage" }
      }
    });
    this.quadGeometry = Geometry.Plane();
    let w2 = this.depthWidth;
    let h2 = this.depthHeight;
    let level = 0;
    while (w2 > 1) {
      this.targetTextures.push(DepthTexture.Create(w2, h2));
      const passBuffer = Buffer3.Create(4 * 4, 0 /* STORAGE */);
      passBuffer.SetArray(new Float32Array([level]));
      this.passBuffers.push(passBuffer);
      w2 /= 2;
      h2 /= 2;
      level++;
    }
    this.depthLevels = level;
    this.inputTexture = DepthTexture.Create(this.depthWidth, this.depthHeight, 1, "depth24plus", level);
    this.inputTexture.SetActiveMip(0);
    this.inputTexture.SetActiveMipCount(level);
    const Sampler = TextureSampler.Create({ magFilter: "nearest", minFilter: "nearest" });
    this.shader.SetSampler("depthTextureInputSampler", Sampler);
    this.shader.SetTexture("depthTextureInput", this.inputTexture);
    this.debugDepthTexture = this.inputTexture;
    this.currentBuffer = Buffer3.Create(4 * 4, 0 /* STORAGE */);
    console.log("mips", level);
    this.blitShader = await Shader.Create({
      code: await ShaderLoader.BlitDepth,
      colorOutputs: [],
      depthOutput: "depth24plus",
      attributes: {
        position: { location: 0, size: 3, type: "vec3" },
        normal: { location: 1, size: 3, type: "vec3" },
        uv: { location: 2, size: 2, type: "vec2" }
      },
      uniforms: {
        texture: { group: 0, binding: 0, type: "depthTexture" },
        textureSampler: { group: 0, binding: 1, type: "sampler" },
        mip: { group: 0, binding: 2, type: "storage" }
      }
    });
    const blitSampler = TextureSampler.Create();
    this.blitShader.SetSampler("textureSampler", blitSampler);
    this.blitShader.SetValue("mip", 0);
    resources.setResource(PassParams.depthTexturePyramid, this.inputTexture);
    this.initialized = true;
  }
  execute(resources, inputDepthTexture, outputDepthTexturePyramid) {
    if (this.initialized === false) return;
    let currentLevel = 0;
    let currentTarget = this.targetTextures[currentLevel];
    this.blitShader.SetTexture("texture", inputDepthTexture);
    RendererContext.BeginRenderPass("HiZ - First mip", [], { target: currentTarget, clear: true }, true);
    RendererContext.DrawGeometry(this.quadGeometry, this.blitShader);
    RendererContext.EndRenderPass();
    RendererContext.CopyTextureToTexture(currentTarget, this.inputTexture, 0, currentLevel);
    this.shader.SetBuffer("currentMip", this.currentBuffer);
    for (let i3 = 0; i3 < this.targetTextures.length - 1; i3++) {
      let levelBuffer = this.passBuffers[currentLevel];
      currentLevel++;
      currentTarget = this.targetTextures[currentLevel];
      RendererContext.CopyBufferToBuffer(levelBuffer, this.currentBuffer);
      RendererContext.BeginRenderPass("HiZ - DepthPyramid", [], { target: currentTarget, clear: true }, true);
      RendererContext.DrawGeometry(this.quadGeometry, this.shader);
      RendererContext.EndRenderPass();
      RendererContext.CopyTextureToTexture(currentTarget, this.inputTexture, 0, currentLevel);
    }
    resources.setResource(outputDepthTexturePyramid, this.inputTexture);
  }
};

// src/math/Plane.ts
var Plane = class {
  normal;
  constant;
  constructor(normal = new Vector3(1, 0, 0), constant = 0) {
    this.normal = normal;
    this.constant = constant;
  }
  setComponents(x2, y2, z2, w2) {
    this.normal.set(x2, y2, z2);
    this.constant = w2;
    return this;
  }
  normalize() {
    const inverseNormalLength = 1 / this.normal.length();
    this.normal.mul(inverseNormalLength);
    this.constant *= inverseNormalLength;
    return this;
  }
};

// src/math/Frustum.ts
var Frustum = class {
  planes;
  constructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {
    this.planes = [p0, p1, p2, p3, p4, p5];
  }
  setFromProjectionMatrix(m2) {
    const planes = this.planes;
    const me = m2.elements;
    const me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];
    const me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];
    const me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];
    const me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];
    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();
    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();
    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();
    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();
    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();
    planes[5].setComponents(me2, me6, me10, me14).normalize();
    return this;
  }
};

// src/renderer/webgpu/WEBGPUComputeContext.ts
var WEBGPUComputeContext = class {
  static activeComputePass = null;
  static BeginComputePass(name, timestamp) {
    const activeCommandEncoder = WEBGPURenderer.GetActiveCommandEncoder();
    if (!activeCommandEncoder) throw Error("No active command encoder!!");
    if (this.activeComputePass) throw Error("There is already an active compute pass");
    const computePassDescriptor = {};
    if (timestamp === true) computePassDescriptor.timestampWrites = WEBGPUTimestampQuery.BeginRenderTimestamp(name);
    this.activeComputePass = activeCommandEncoder.beginComputePass(computePassDescriptor);
    this.activeComputePass.label = "ComputePass: " + name;
  }
  static EndComputePass() {
    if (!this.activeComputePass) throw Error("No active compute pass");
    this.activeComputePass.end();
    this.activeComputePass = null;
    WEBGPUTimestampQuery.EndRenderTimestamp();
  }
  static Dispatch(computeShader, workgroupCountX, workgroupCountY, workgroupCountZ) {
    if (!this.activeComputePass) throw Error("No active render pass");
    computeShader.OnPreRender();
    if (!computeShader.pipeline) throw Error("Shader doesnt have a pipeline");
    this.activeComputePass.setPipeline(computeShader.pipeline);
    for (let i3 = 0; i3 < computeShader.bindGroups.length; i3++) {
      let dynamicOffsetsV2 = [];
      for (const buffer of computeShader.bindGroupsInfo[i3].buffers) {
        if (buffer instanceof WEBGPUDynamicBuffer) {
          dynamicOffsetsV2.push(buffer.dynamicOffset);
        }
      }
      this.activeComputePass.setBindGroup(i3, computeShader.bindGroups[i3], dynamicOffsetsV2);
    }
    this.activeComputePass.dispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ);
  }
};

// src/renderer/ComputeContext.ts
var ComputeContext = class {
  constructor() {
  }
  static BeginComputePass(name, timestamp = false) {
    if (Renderer.type === "webgpu") WEBGPUComputeContext.BeginComputePass(name, timestamp);
    else throw Error("Unknown render api type.");
  }
  static EndComputePass() {
    if (Renderer.type === "webgpu") WEBGPUComputeContext.EndComputePass();
    else throw Error("Unknown render api type.");
  }
  static Dispatch(computeShader, workgroupCountX, workgroupCountY = 1, workgroupCountZ = 1) {
    if (Renderer.type === "webgpu") WEBGPUComputeContext.Dispatch(computeShader, workgroupCountX, workgroupCountY, workgroupCountZ);
    else throw Error("Unknown render api type.");
  }
};

// src/plugins/meshlets/passes/CullingPass.ts
var CullingPass = class extends RenderPass {
  name = "CullingPass";
  drawIndirectBuffer;
  compute;
  cullData;
  frustum = new Frustum();
  currentPassBuffer;
  visibleBuffer;
  nonVisibleBuffer;
  visibilityBuffer;
  instanceInfoBuffer;
  isPrePass = true;
  debugBuffer;
  constructor() {
    super({
      inputs: [
        PassParams.DebugSettings,
        MeshletPassParams.indirectMeshletInfo,
        MeshletPassParams.indirectObjectInfo,
        MeshletPassParams.indirectMeshMatrixInfo,
        MeshletPassParams.meshletsCount
      ],
      outputs: [
        MeshletPassParams.indirectDrawBuffer,
        MeshletPassParams.indirectInstanceInfo,
        MeshletPassParams.isCullingPrepass,
        PassParams.GBufferAlbedo,
        PassParams.GBufferNormal,
        PassParams.GBufferERMO,
        PassParams.GBufferDepth,
        PassParams.GBufferDepth
      ]
    });
  }
  async init(resources) {
    this.compute = await Compute.Create({
      code: await ShaderLoader.Cull,
      computeEntrypoint: "main",
      uniforms: {
        drawBuffer: { group: 0, binding: 0, type: "storage-write" },
        instanceInfo: { group: 0, binding: 1, type: "storage-write" },
        cullData: { group: 0, binding: 2, type: "storage" },
        meshletInfo: { group: 0, binding: 3, type: "storage" },
        objectInfo: { group: 0, binding: 4, type: "storage" },
        meshMatrixInfo: { group: 0, binding: 5, type: "storage" },
        visibilityBuffer: { group: 0, binding: 6, type: "storage-write" },
        bPrepass: { group: 0, binding: 7, type: "storage" },
        textureSampler: { group: 0, binding: 8, type: "sampler" },
        depthTexture: { group: 0, binding: 9, type: "depthTexture" },
        settings: { group: 0, binding: 10, type: "storage" }
      }
    });
    this.drawIndirectBuffer = Buffer3.Create(4 * 4, 5 /* INDIRECT */);
    this.drawIndirectBuffer.name = "drawIndirectBuffer";
    this.compute.SetBuffer("drawBuffer", this.drawIndirectBuffer);
    this.currentPassBuffer = Buffer3.Create(1 * 4, 0 /* STORAGE */);
    const sampler = TextureSampler.Create({ magFilter: "nearest", minFilter: "nearest" });
    this.compute.SetSampler("textureSampler", sampler);
    this.visibleBuffer = Buffer3.Create(4, 0 /* STORAGE */);
    this.visibleBuffer.SetArray(new Float32Array([1]));
    this.nonVisibleBuffer = Buffer3.Create(4, 0 /* STORAGE */);
    this.nonVisibleBuffer.SetArray(new Float32Array([0]));
    this.debugBuffer = Buffer3.Create(4 * 4, 0 /* STORAGE */);
  }
  execute(resources) {
    const depthTexturePyramid = resources.getResource(PassParams.depthTexturePyramid);
    if (!depthTexturePyramid) return;
    const mainCamera = Camera.mainCamera;
    const meshletCount = resources.getResource(MeshletPassParams.meshletsCount);
    const meshletInfoBuffer = resources.getResource(MeshletPassParams.indirectMeshletInfo);
    const objectInfoBuffer = resources.getResource(MeshletPassParams.indirectObjectInfo);
    const meshMatrixInfoBuffer = resources.getResource(MeshletPassParams.indirectMeshMatrixInfo);
    if (meshletCount === 0) return;
    if (!this.visibilityBuffer) {
      const visibilityBufferArray = new Float32Array(meshletCount).fill(1);
      this.visibilityBuffer = Buffer3.Create(visibilityBufferArray.byteLength, 1 /* STORAGE_WRITE */);
      this.visibilityBuffer.SetArray(visibilityBufferArray);
    }
    if (!this.instanceInfoBuffer) {
      console.log("meshletCount", meshletCount);
      this.instanceInfoBuffer = Buffer3.Create(meshletCount * 1 * 4, 1 /* STORAGE_WRITE */);
      this.instanceInfoBuffer.name = "instanceInfoBuffer";
    }
    this.compute.SetBuffer("meshletInfo", meshletInfoBuffer);
    this.compute.SetBuffer("objectInfo", objectInfoBuffer);
    this.compute.SetBuffer("meshMatrixInfo", meshMatrixInfoBuffer);
    this.compute.SetBuffer("instanceInfo", this.instanceInfoBuffer);
    this.compute.SetBuffer("visibilityBuffer", this.visibilityBuffer);
    this.frustum.setFromProjectionMatrix(mainCamera.projectionMatrix);
    const cullDataArray = new Float32Array([
      ...mainCamera.projectionMatrix.elements,
      ...mainCamera.viewMatrix.elements,
      ...mainCamera.transform.position.elements,
      0,
      ...this.frustum.planes[0].normal.elements,
      this.frustum.planes[0].constant,
      ...this.frustum.planes[1].normal.elements,
      this.frustum.planes[1].constant,
      ...this.frustum.planes[2].normal.elements,
      this.frustum.planes[2].constant,
      ...this.frustum.planes[3].normal.elements,
      this.frustum.planes[3].constant,
      ...this.frustum.planes[4].normal.elements,
      this.frustum.planes[4].constant,
      ...this.frustum.planes[5].normal.elements,
      this.frustum.planes[5].constant,
      meshletCount,
      0,
      Renderer.width,
      Renderer.height,
      0,
      0,
      mainCamera.near,
      mainCamera.far,
      ...mainCamera.projectionMatrix.clone().transpose().elements
    ]);
    if (!this.cullData) {
      this.cullData = Buffer3.Create(cullDataArray.byteLength, 0 /* STORAGE */);
      this.cullData.name = "cullData";
      this.compute.SetBuffer("cullData", this.cullData);
    }
    this.cullData.SetArray(cullDataArray);
    const settings = resources.getResource(PassParams.DebugSettings);
    this.compute.SetArray("settings", settings);
    this.compute.SetTexture("depthTexture", depthTexturePyramid);
    this.compute.SetBuffer("bPrepass", this.currentPassBuffer);
    RendererContext.CopyBufferToBuffer(this.drawIndirectBuffer, this.debugBuffer);
    RendererContext.ClearBuffer(this.drawIndirectBuffer);
    if (this.isPrePass === true) RendererContext.CopyBufferToBuffer(this.visibleBuffer, this.currentPassBuffer);
    else RendererContext.CopyBufferToBuffer(this.nonVisibleBuffer, this.currentPassBuffer);
    const dispatchSizeX = Math.ceil(Math.cbrt(meshletCount) / 4);
    const dispatchSizeY = Math.ceil(Math.cbrt(meshletCount) / 4);
    const dispatchSizeZ = Math.ceil(Math.cbrt(meshletCount) / 4);
    ComputeContext.BeginComputePass(`Culling - prepass: ${+this.isPrePass}`, true);
    ComputeContext.Dispatch(this.compute, dispatchSizeX, dispatchSizeY, dispatchSizeZ);
    ComputeContext.EndComputePass();
    resources.setResource(MeshletPassParams.isCullingPrepass, this.isPrePass);
    this.isPrePass = !this.isPrePass;
    resources.setResource(MeshletPassParams.indirectDrawBuffer, this.drawIndirectBuffer);
    resources.setResource(MeshletPassParams.indirectInstanceInfo, this.instanceInfoBuffer);
    this.debugBuffer.GetData().then((v2) => {
      const visibleMeshCount = new Uint32Array(v2)[1];
      Debugger.SetVisibleMeshes(visibleMeshCount);
      Debugger.SetTriangleCount(Meshlet.max_triangles * meshletCount);
      Debugger.SetVisibleTriangleCount(Meshlet.max_triangles * visibleMeshCount);
    });
  }
};

// src/plugins/meshlets/passes/IndirectGBufferPass.ts
var IndirectGBufferPass = class extends RenderPass {
  name = "IndirectGBufferPass";
  shader;
  geometry;
  constructor() {
    super({
      inputs: [
        PassParams.DebugSettings,
        PassParams.depthTexture,
        PassParams.GBufferAlbedo,
        PassParams.GBufferNormal,
        PassParams.GBufferERMO,
        PassParams.GBufferDepth,
        MeshletPassParams.indirectVertices,
        MeshletPassParams.indirectInstanceInfo,
        MeshletPassParams.indirectMeshInfo,
        MeshletPassParams.indirectObjectInfo,
        MeshletPassParams.indirectMeshMatrixInfo,
        MeshletPassParams.indirectDrawBuffer,
        MeshletPassParams.textureMaps,
        MeshletPassParams.isCullingPrepass
      ],
      outputs: []
    });
  }
  async init(resources) {
    this.shader = await Shader.Create({
      code: await ShaderLoader.DrawIndirect,
      colorOutputs: [
        { format: "rgba16float" },
        { format: "rgba16float" },
        { format: "rgba16float" }
      ],
      depthOutput: "depth24plus",
      attributes: {
        position: { location: 0, size: 3, type: "vec3" }
      },
      uniforms: {
        viewMatrix: { group: 0, binding: 0, type: "storage" },
        projectionMatrix: { group: 0, binding: 1, type: "storage" },
        instanceInfo: { group: 0, binding: 2, type: "storage" },
        meshMaterialInfo: { group: 0, binding: 3, type: "storage" },
        meshMatrixInfo: { group: 0, binding: 4, type: "storage" },
        objectInfo: { group: 0, binding: 5, type: "storage" },
        settings: { group: 0, binding: 6, type: "storage" },
        vertices: { group: 0, binding: 7, type: "storage" },
        textureSampler: { group: 0, binding: 8, type: "sampler" },
        albedoMaps: { group: 0, binding: 9, type: "texture" },
        normalMaps: { group: 0, binding: 10, type: "texture" },
        heightMaps: { group: 0, binding: 11, type: "texture" },
        metalnessMaps: { group: 0, binding: 12, type: "texture" },
        emissiveMaps: { group: 0, binding: 13, type: "texture" }
      },
      cullMode: "front"
    });
    this.geometry = new Geometry();
    this.geometry.attributes.set("position", new VertexAttribute(new Float32Array(Meshlet.max_triangles * 3)));
    const materialSampler = TextureSampler.Create();
    this.shader.SetSampler("textureSampler", materialSampler);
    this.initialized = true;
  }
  execute(resources) {
    if (!this.initialized) return;
    const inputIndirectVertices = resources.getResource(MeshletPassParams.indirectVertices);
    const inputIndirectMeshInfo = resources.getResource(MeshletPassParams.indirectMeshInfo);
    const inputIndirectObjectInfo = resources.getResource(MeshletPassParams.indirectObjectInfo);
    const inputIndirectMeshMatrixInfo = resources.getResource(MeshletPassParams.indirectMeshMatrixInfo);
    const inputIndirectInstanceInfo = resources.getResource(MeshletPassParams.indirectInstanceInfo);
    const inputIndirectDrawBuffer = resources.getResource(MeshletPassParams.indirectDrawBuffer);
    const textureMaps = resources.getResource(MeshletPassParams.textureMaps);
    let inputIsCullingPrepass = resources.getResource(MeshletPassParams.isCullingPrepass);
    if (!inputIndirectVertices) return;
    if (!inputIndirectInstanceInfo) return;
    const mainCamera = Camera.mainCamera;
    this.shader.SetMatrix4("viewMatrix", mainCamera.viewMatrix);
    this.shader.SetMatrix4("projectionMatrix", mainCamera.projectionMatrix);
    this.shader.SetBuffer("vertices", inputIndirectVertices);
    this.shader.SetBuffer("meshMaterialInfo", inputIndirectMeshInfo);
    this.shader.SetBuffer("objectInfo", inputIndirectObjectInfo);
    this.shader.SetBuffer("meshMatrixInfo", inputIndirectMeshMatrixInfo);
    this.shader.SetBuffer("instanceInfo", inputIndirectInstanceInfo);
    if (textureMaps.albedo) this.shader.SetTexture("albedoMaps", textureMaps.albedo);
    if (textureMaps.normal) this.shader.SetTexture("normalMaps", textureMaps.normal);
    if (textureMaps.height) this.shader.SetTexture("heightMaps", textureMaps.height);
    if (textureMaps.metalness) this.shader.SetTexture("metalnessMaps", textureMaps.metalness);
    if (textureMaps.emissive) this.shader.SetTexture("emissiveMaps", textureMaps.emissive);
    const settings = resources.getResource(PassParams.DebugSettings);
    this.shader.SetArray("settings", settings);
    const gBufferAlbedoRT = resources.getResource(PassParams.GBufferAlbedo);
    const gBufferNormalRT = resources.getResource(PassParams.GBufferNormal);
    const gBufferERMORT = resources.getResource(PassParams.GBufferERMO);
    const gBufferDepthRT = resources.getResource(PassParams.GBufferDepth);
    const colorTargets = [
      { target: gBufferAlbedoRT, clear: inputIsCullingPrepass },
      { target: gBufferNormalRT, clear: inputIsCullingPrepass },
      { target: gBufferERMORT, clear: inputIsCullingPrepass }
    ];
    RendererContext.BeginRenderPass(`IGBuffer - prepass: ${+inputIsCullingPrepass}`, colorTargets, { target: gBufferDepthRT, clear: inputIsCullingPrepass }, true);
    RendererContext.DrawIndirect(this.geometry, this.shader, inputIndirectDrawBuffer);
    RendererContext.EndRenderPass();
  }
};

// src/plugins/meshlets/metis-5.2.1/Metis.js
var Module2 = (() => {
  var _scriptDir = import.meta.url;
  return function(Module3) {
    Module3 = Module3 || {};
    var Module3 = typeof Module3 != "undefined" ? Module3 : {};
    var readyPromiseResolve, readyPromiseReject;
    Module3["ready"] = new Promise(function(resolve, reject) {
      readyPromiseResolve = resolve;
      readyPromiseReject = reject;
    });
    var moduleOverrides = Object.assign({}, Module3);
    var arguments_ = [];
    var thisProgram = "./this.program";
    var quit_ = (status, toThrow) => {
      throw toThrow;
    };
    var ENVIRONMENT_IS_WEB = true;
    var ENVIRONMENT_IS_WORKER = false;
    var scriptDirectory = "";
    function locateFile(path) {
      if (Module3["locateFile"]) {
        return Module3["locateFile"](path, scriptDirectory);
      }
      return scriptDirectory + path;
    }
    var read_, readAsync, readBinary, setWindowTitle;
    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
      if (ENVIRONMENT_IS_WORKER) {
        scriptDirectory = self.location.href;
      } else if (typeof document != "undefined" && document.currentScript) {
        scriptDirectory = document.currentScript.src;
      }
      if (_scriptDir) {
        scriptDirectory = _scriptDir;
      }
      if (scriptDirectory.indexOf("blob:") !== 0) {
        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf("/") + 1);
      } else {
        scriptDirectory = "";
      }
      {
        read_ = (url) => {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, false);
          xhr.send(null);
          return xhr.responseText;
        };
        if (ENVIRONMENT_IS_WORKER) {
          readBinary = (url) => {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", url, false);
            xhr.responseType = "arraybuffer";
            xhr.send(null);
            return new Uint8Array(xhr.response);
          };
        }
        readAsync = (url, onload, onerror) => {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, true);
          xhr.responseType = "arraybuffer";
          xhr.onload = () => {
            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
              onload(xhr.response);
              return;
            }
            onerror();
          };
          xhr.onerror = onerror;
          xhr.send(null);
        };
      }
      setWindowTitle = (title) => document.title = title;
    } else {
    }
    var out = Module3["print"] || console.log.bind(console);
    var err = Module3["printErr"] || console.warn.bind(console);
    Object.assign(Module3, moduleOverrides);
    moduleOverrides = null;
    if (Module3["arguments"]) arguments_ = Module3["arguments"];
    if (Module3["thisProgram"]) thisProgram = Module3["thisProgram"];
    if (Module3["quit"]) quit_ = Module3["quit"];
    var wasmBinary;
    if (Module3["wasmBinary"]) wasmBinary = Module3["wasmBinary"];
    var noExitRuntime = Module3["noExitRuntime"] || true;
    if (typeof WebAssembly != "object") {
      abort("no native wasm support detected");
    }
    var wasmMemory;
    var ABORT = false;
    var EXITSTATUS;
    function assert(condition, text) {
      if (!condition) {
        abort(text);
      }
    }
    var UTF8Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : void 0;
    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {
      var endIdx = idx + maxBytesToRead;
      var endPtr = idx;
      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
      }
      var str = "";
      while (idx < endPtr) {
        var u0 = heapOrArray[idx++];
        if (!(u0 & 128)) {
          str += String.fromCharCode(u0);
          continue;
        }
        var u1 = heapOrArray[idx++] & 63;
        if ((u0 & 224) == 192) {
          str += String.fromCharCode((u0 & 31) << 6 | u1);
          continue;
        }
        var u2 = heapOrArray[idx++] & 63;
        if ((u0 & 240) == 224) {
          u0 = (u0 & 15) << 12 | u1 << 6 | u2;
        } else {
          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;
        }
        if (u0 < 65536) {
          str += String.fromCharCode(u0);
        } else {
          var ch = u0 - 65536;
          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
        }
      }
      return str;
    }
    function UTF8ToString(ptr, maxBytesToRead) {
      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
    }
    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
      if (!(maxBytesToWrite > 0)) return 0;
      var startIdx = outIdx;
      var endIdx = outIdx + maxBytesToWrite - 1;
      for (var i3 = 0; i3 < str.length; ++i3) {
        var u2 = str.charCodeAt(i3);
        if (u2 >= 55296 && u2 <= 57343) {
          var u1 = str.charCodeAt(++i3);
          u2 = 65536 + ((u2 & 1023) << 10) | u1 & 1023;
        }
        if (u2 <= 127) {
          if (outIdx >= endIdx) break;
          heap[outIdx++] = u2;
        } else if (u2 <= 2047) {
          if (outIdx + 1 >= endIdx) break;
          heap[outIdx++] = 192 | u2 >> 6;
          heap[outIdx++] = 128 | u2 & 63;
        } else if (u2 <= 65535) {
          if (outIdx + 2 >= endIdx) break;
          heap[outIdx++] = 224 | u2 >> 12;
          heap[outIdx++] = 128 | u2 >> 6 & 63;
          heap[outIdx++] = 128 | u2 & 63;
        } else {
          if (outIdx + 3 >= endIdx) break;
          heap[outIdx++] = 240 | u2 >> 18;
          heap[outIdx++] = 128 | u2 >> 12 & 63;
          heap[outIdx++] = 128 | u2 >> 6 & 63;
          heap[outIdx++] = 128 | u2 & 63;
        }
      }
      heap[outIdx] = 0;
      return outIdx - startIdx;
    }
    function stringToUTF8(str, outPtr, maxBytesToWrite) {
      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
    }
    function lengthBytesUTF8(str) {
      var len = 0;
      for (var i3 = 0; i3 < str.length; ++i3) {
        var c2 = str.charCodeAt(i3);
        if (c2 <= 127) {
          len++;
        } else if (c2 <= 2047) {
          len += 2;
        } else if (c2 >= 55296 && c2 <= 57343) {
          len += 4;
          ++i3;
        } else {
          len += 3;
        }
      }
      return len;
    }
    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
    function updateGlobalBufferAndViews(buf) {
      buffer = buf;
      Module3["HEAP8"] = HEAP8 = new Int8Array(buf);
      Module3["HEAP16"] = HEAP16 = new Int16Array(buf);
      Module3["HEAP32"] = HEAP32 = new Int32Array(buf);
      Module3["HEAPU8"] = HEAPU8 = new Uint8Array(buf);
      Module3["HEAPU16"] = HEAPU16 = new Uint16Array(buf);
      Module3["HEAPU32"] = HEAPU32 = new Uint32Array(buf);
      Module3["HEAPF32"] = HEAPF32 = new Float32Array(buf);
      Module3["HEAPF64"] = HEAPF64 = new Float64Array(buf);
    }
    var INITIAL_MEMORY = Module3["INITIAL_MEMORY"] || 16777216;
    var wasmTable;
    var __ATPRERUN__ = [];
    var __ATINIT__ = [];
    var __ATPOSTRUN__ = [];
    var runtimeInitialized = false;
    function keepRuntimeAlive() {
      return noExitRuntime;
    }
    function preRun() {
      if (Module3["preRun"]) {
        if (typeof Module3["preRun"] == "function") Module3["preRun"] = [Module3["preRun"]];
        while (Module3["preRun"].length) {
          addOnPreRun(Module3["preRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPRERUN__);
    }
    function initRuntime() {
      runtimeInitialized = true;
      if (!Module3["noFSInit"] && !FS.init.initialized) FS.init();
      FS.ignorePermissions = false;
      TTY.init();
      callRuntimeCallbacks(__ATINIT__);
    }
    function postRun() {
      if (Module3["postRun"]) {
        if (typeof Module3["postRun"] == "function") Module3["postRun"] = [Module3["postRun"]];
        while (Module3["postRun"].length) {
          addOnPostRun(Module3["postRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPOSTRUN__);
    }
    function addOnPreRun(cb) {
      __ATPRERUN__.unshift(cb);
    }
    function addOnInit(cb) {
      __ATINIT__.unshift(cb);
    }
    function addOnPostRun(cb) {
      __ATPOSTRUN__.unshift(cb);
    }
    var runDependencies = 0;
    var runDependencyWatcher = null;
    var dependenciesFulfilled = null;
    function getUniqueRunDependency(id) {
      return id;
    }
    function addRunDependency(id) {
      runDependencies++;
      if (Module3["monitorRunDependencies"]) {
        Module3["monitorRunDependencies"](runDependencies);
      }
    }
    function removeRunDependency(id) {
      runDependencies--;
      if (Module3["monitorRunDependencies"]) {
        Module3["monitorRunDependencies"](runDependencies);
      }
      if (runDependencies == 0) {
        if (runDependencyWatcher !== null) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
        }
        if (dependenciesFulfilled) {
          var callback = dependenciesFulfilled;
          dependenciesFulfilled = null;
          callback();
        }
      }
    }
    function abort(what) {
      {
        if (Module3["onAbort"]) {
          Module3["onAbort"](what);
        }
      }
      what = "Aborted(" + what + ")";
      err(what);
      ABORT = true;
      EXITSTATUS = 1;
      what += ". Build with -sASSERTIONS for more info.";
      var e2 = new WebAssembly.RuntimeError(what);
      readyPromiseReject(e2);
      throw e2;
    }
    var dataURIPrefix = "data:application/octet-stream;base64,";
    function isDataURI(filename) {
      return filename.startsWith(dataURIPrefix);
    }
    var wasmBinaryFile;
    if (Module3["locateFile"]) {
      wasmBinaryFile = "Metis.wasm";
      if (!isDataURI(wasmBinaryFile)) {
        wasmBinaryFile = locateFile(wasmBinaryFile);
      }
    } else {
      wasmBinaryFile = new URL("Metis.wasm", import.meta.url).toString();
    }
    function getBinary(file) {
      try {
        if (file == wasmBinaryFile && wasmBinary) {
          return new Uint8Array(wasmBinary);
        }
        if (readBinary) {
          return readBinary(file);
        }
        throw "both async and sync fetching of the wasm failed";
      } catch (err2) {
        abort(err2);
      }
    }
    function getBinaryPromise() {
      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
        if (typeof fetch == "function") {
          return fetch(wasmBinaryFile, { credentials: "same-origin" }).then(function(response) {
            if (!response["ok"]) {
              throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
            }
            return response["arrayBuffer"]();
          }).catch(function() {
            return getBinary(wasmBinaryFile);
          });
        }
      }
      return Promise.resolve().then(function() {
        return getBinary(wasmBinaryFile);
      });
    }
    function createWasm() {
      var info = { "a": asmLibraryArg };
      function receiveInstance(instance, module) {
        var exports2 = instance.exports;
        Module3["asm"] = exports2;
        wasmMemory = Module3["asm"]["x"];
        updateGlobalBufferAndViews(wasmMemory.buffer);
        wasmTable = Module3["asm"]["z"];
        addOnInit(Module3["asm"]["y"]);
        removeRunDependency("wasm-instantiate");
      }
      addRunDependency("wasm-instantiate");
      function receiveInstantiationResult(result) {
        receiveInstance(result["instance"]);
      }
      function instantiateArrayBuffer(receiver) {
        return getBinaryPromise().then(function(binary) {
          return WebAssembly.instantiate(binary, info);
        }).then(function(instance) {
          return instance;
        }).then(receiver, function(reason) {
          err("failed to asynchronously prepare wasm: " + reason);
          abort(reason);
        });
      }
      function instantiateAsync() {
        if (!wasmBinary && typeof WebAssembly.instantiateStreaming == "function" && !isDataURI(wasmBinaryFile) && typeof fetch == "function") {
          return fetch(wasmBinaryFile, { credentials: "same-origin" }).then(function(response) {
            var result = WebAssembly.instantiateStreaming(response, info);
            return result.then(receiveInstantiationResult, function(reason) {
              err("wasm streaming compile failed: " + reason);
              err("falling back to ArrayBuffer instantiation");
              return instantiateArrayBuffer(receiveInstantiationResult);
            });
          });
        } else {
          return instantiateArrayBuffer(receiveInstantiationResult);
        }
      }
      if (Module3["instantiateWasm"]) {
        try {
          var exports = Module3["instantiateWasm"](info, receiveInstance);
          return exports;
        } catch (e2) {
          err("Module.instantiateWasm callback failed with error: " + e2);
          readyPromiseReject(e2);
        }
      }
      instantiateAsync().catch(readyPromiseReject);
      return {};
    }
    var tempDouble;
    var tempI64;
    function ExitStatus(status) {
      this.name = "ExitStatus";
      this.message = "Program terminated with exit(" + status + ")";
      this.status = status;
    }
    function callRuntimeCallbacks(callbacks) {
      while (callbacks.length > 0) {
        callbacks.shift()(Module3);
      }
    }
    function writeArrayToMemory(array, buffer2) {
      HEAP8.set(array, buffer2);
    }
    function ___assert_fail(condition, filename, line, func) {
      abort("Assertion failed: " + UTF8ToString(condition) + ", at: " + [filename ? UTF8ToString(filename) : "unknown filename", line, func ? UTF8ToString(func) : "unknown function"]);
    }
    var wasmTableMirror = [];
    function getWasmTableEntry(funcPtr) {
      var func = wasmTableMirror[funcPtr];
      if (!func) {
        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;
        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);
      }
      return func;
    }
    function ___call_sighandler(fp, sig) {
      getWasmTableEntry(fp)(sig);
    }
    function setErrNo(value) {
      HEAP32[___errno_location() >> 2] = value;
      return value;
    }
    var PATH = { isAbs: (path) => path.charAt(0) === "/", splitPath: (filename) => {
      var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
      return splitPathRe.exec(filename).slice(1);
    }, normalizeArray: (parts, allowAboveRoot) => {
      var up = 0;
      for (var i3 = parts.length - 1; i3 >= 0; i3--) {
        var last = parts[i3];
        if (last === ".") {
          parts.splice(i3, 1);
        } else if (last === "..") {
          parts.splice(i3, 1);
          up++;
        } else if (up) {
          parts.splice(i3, 1);
          up--;
        }
      }
      if (allowAboveRoot) {
        for (; up; up--) {
          parts.unshift("..");
        }
      }
      return parts;
    }, normalize: (path) => {
      var isAbsolute = PATH.isAbs(path), trailingSlash = path.substr(-1) === "/";
      path = PATH.normalizeArray(path.split("/").filter((p2) => !!p2), !isAbsolute).join("/");
      if (!path && !isAbsolute) {
        path = ".";
      }
      if (path && trailingSlash) {
        path += "/";
      }
      return (isAbsolute ? "/" : "") + path;
    }, dirname: (path) => {
      var result = PATH.splitPath(path), root = result[0], dir = result[1];
      if (!root && !dir) {
        return ".";
      }
      if (dir) {
        dir = dir.substr(0, dir.length - 1);
      }
      return root + dir;
    }, basename: (path) => {
      if (path === "/") return "/";
      path = PATH.normalize(path);
      path = path.replace(/\/$/, "");
      var lastSlash = path.lastIndexOf("/");
      if (lastSlash === -1) return path;
      return path.substr(lastSlash + 1);
    }, join: function() {
      var paths = Array.prototype.slice.call(arguments);
      return PATH.normalize(paths.join("/"));
    }, join2: (l2, r2) => {
      return PATH.normalize(l2 + "/" + r2);
    } };
    function getRandomDevice() {
      if (typeof crypto == "object" && typeof crypto["getRandomValues"] == "function") {
        var randomBuffer = new Uint8Array(1);
        return () => {
          crypto.getRandomValues(randomBuffer);
          return randomBuffer[0];
        };
      } else return () => abort("randomDevice");
    }
    var PATH_FS = { resolve: function() {
      var resolvedPath = "", resolvedAbsolute = false;
      for (var i3 = arguments.length - 1; i3 >= -1 && !resolvedAbsolute; i3--) {
        var path = i3 >= 0 ? arguments[i3] : FS.cwd();
        if (typeof path != "string") {
          throw new TypeError("Arguments to path.resolve must be strings");
        } else if (!path) {
          return "";
        }
        resolvedPath = path + "/" + resolvedPath;
        resolvedAbsolute = PATH.isAbs(path);
      }
      resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((p2) => !!p2), !resolvedAbsolute).join("/");
      return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
    }, relative: (from, to) => {
      from = PATH_FS.resolve(from).substr(1);
      to = PATH_FS.resolve(to).substr(1);
      function trim(arr) {
        var start = 0;
        for (; start < arr.length; start++) {
          if (arr[start] !== "") break;
        }
        var end = arr.length - 1;
        for (; end >= 0; end--) {
          if (arr[end] !== "") break;
        }
        if (start > end) return [];
        return arr.slice(start, end - start + 1);
      }
      var fromParts = trim(from.split("/"));
      var toParts = trim(to.split("/"));
      var length = Math.min(fromParts.length, toParts.length);
      var samePartsLength = length;
      for (var i3 = 0; i3 < length; i3++) {
        if (fromParts[i3] !== toParts[i3]) {
          samePartsLength = i3;
          break;
        }
      }
      var outputParts = [];
      for (var i3 = samePartsLength; i3 < fromParts.length; i3++) {
        outputParts.push("..");
      }
      outputParts = outputParts.concat(toParts.slice(samePartsLength));
      return outputParts.join("/");
    } };
    function intArrayFromString(stringy, dontAddNull, length) {
      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
      var u8array = new Array(len);
      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
      if (dontAddNull) u8array.length = numBytesWritten;
      return u8array;
    }
    var TTY = { ttys: [], init: function() {
    }, shutdown: function() {
    }, register: function(dev, ops) {
      TTY.ttys[dev] = { input: [], output: [], ops };
      FS.registerDevice(dev, TTY.stream_ops);
    }, stream_ops: { open: function(stream) {
      var tty = TTY.ttys[stream.node.rdev];
      if (!tty) {
        throw new FS.ErrnoError(43);
      }
      stream.tty = tty;
      stream.seekable = false;
    }, close: function(stream) {
      stream.tty.ops.fsync(stream.tty);
    }, fsync: function(stream) {
      stream.tty.ops.fsync(stream.tty);
    }, read: function(stream, buffer2, offset, length, pos) {
      if (!stream.tty || !stream.tty.ops.get_char) {
        throw new FS.ErrnoError(60);
      }
      var bytesRead = 0;
      for (var i3 = 0; i3 < length; i3++) {
        var result;
        try {
          result = stream.tty.ops.get_char(stream.tty);
        } catch (e2) {
          throw new FS.ErrnoError(29);
        }
        if (result === void 0 && bytesRead === 0) {
          throw new FS.ErrnoError(6);
        }
        if (result === null || result === void 0) break;
        bytesRead++;
        buffer2[offset + i3] = result;
      }
      if (bytesRead) {
        stream.node.timestamp = Date.now();
      }
      return bytesRead;
    }, write: function(stream, buffer2, offset, length, pos) {
      if (!stream.tty || !stream.tty.ops.put_char) {
        throw new FS.ErrnoError(60);
      }
      try {
        for (var i3 = 0; i3 < length; i3++) {
          stream.tty.ops.put_char(stream.tty, buffer2[offset + i3]);
        }
      } catch (e2) {
        throw new FS.ErrnoError(29);
      }
      if (length) {
        stream.node.timestamp = Date.now();
      }
      return i3;
    } }, default_tty_ops: { get_char: function(tty) {
      if (!tty.input.length) {
        var result = null;
        if (typeof window != "undefined" && typeof window.prompt == "function") {
          result = window.prompt("Input: ");
          if (result !== null) {
            result += "\n";
          }
        } else if (typeof readline == "function") {
          result = readline();
          if (result !== null) {
            result += "\n";
          }
        }
        if (!result) {
          return null;
        }
        tty.input = intArrayFromString(result, true);
      }
      return tty.input.shift();
    }, put_char: function(tty, val) {
      if (val === null || val === 10) {
        out(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val != 0) tty.output.push(val);
      }
    }, fsync: function(tty) {
      if (tty.output && tty.output.length > 0) {
        out(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    } }, default_tty1_ops: { put_char: function(tty, val) {
      if (val === null || val === 10) {
        err(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val != 0) tty.output.push(val);
      }
    }, fsync: function(tty) {
      if (tty.output && tty.output.length > 0) {
        err(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    } } };
    function mmapAlloc(size) {
      abort();
    }
    var MEMFS = { ops_table: null, mount: function(mount) {
      return MEMFS.createNode(null, "/", 16384 | 511, 0);
    }, createNode: function(parent, name, mode, dev) {
      if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
        throw new FS.ErrnoError(63);
      }
      if (!MEMFS.ops_table) {
        MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };
      }
      var node = FS.createNode(parent, name, mode, dev);
      if (FS.isDir(node.mode)) {
        node.node_ops = MEMFS.ops_table.dir.node;
        node.stream_ops = MEMFS.ops_table.dir.stream;
        node.contents = {};
      } else if (FS.isFile(node.mode)) {
        node.node_ops = MEMFS.ops_table.file.node;
        node.stream_ops = MEMFS.ops_table.file.stream;
        node.usedBytes = 0;
        node.contents = null;
      } else if (FS.isLink(node.mode)) {
        node.node_ops = MEMFS.ops_table.link.node;
        node.stream_ops = MEMFS.ops_table.link.stream;
      } else if (FS.isChrdev(node.mode)) {
        node.node_ops = MEMFS.ops_table.chrdev.node;
        node.stream_ops = MEMFS.ops_table.chrdev.stream;
      }
      node.timestamp = Date.now();
      if (parent) {
        parent.contents[name] = node;
        parent.timestamp = node.timestamp;
      }
      return node;
    }, getFileDataAsTypedArray: function(node) {
      if (!node.contents) return new Uint8Array(0);
      if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
      return new Uint8Array(node.contents);
    }, expandFileStorage: function(node, newCapacity) {
      var prevCapacity = node.contents ? node.contents.length : 0;
      if (prevCapacity >= newCapacity) return;
      var CAPACITY_DOUBLING_MAX = 1024 * 1024;
      newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);
      if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
      var oldContents = node.contents;
      node.contents = new Uint8Array(newCapacity);
      if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
    }, resizeFileStorage: function(node, newSize) {
      if (node.usedBytes == newSize) return;
      if (newSize == 0) {
        node.contents = null;
        node.usedBytes = 0;
      } else {
        var oldContents = node.contents;
        node.contents = new Uint8Array(newSize);
        if (oldContents) {
          node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
        }
        node.usedBytes = newSize;
      }
    }, node_ops: { getattr: function(node) {
      var attr = {};
      attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
      attr.ino = node.id;
      attr.mode = node.mode;
      attr.nlink = 1;
      attr.uid = 0;
      attr.gid = 0;
      attr.rdev = node.rdev;
      if (FS.isDir(node.mode)) {
        attr.size = 4096;
      } else if (FS.isFile(node.mode)) {
        attr.size = node.usedBytes;
      } else if (FS.isLink(node.mode)) {
        attr.size = node.link.length;
      } else {
        attr.size = 0;
      }
      attr.atime = new Date(node.timestamp);
      attr.mtime = new Date(node.timestamp);
      attr.ctime = new Date(node.timestamp);
      attr.blksize = 4096;
      attr.blocks = Math.ceil(attr.size / attr.blksize);
      return attr;
    }, setattr: function(node, attr) {
      if (attr.mode !== void 0) {
        node.mode = attr.mode;
      }
      if (attr.timestamp !== void 0) {
        node.timestamp = attr.timestamp;
      }
      if (attr.size !== void 0) {
        MEMFS.resizeFileStorage(node, attr.size);
      }
    }, lookup: function(parent, name) {
      throw FS.genericErrors[44];
    }, mknod: function(parent, name, mode, dev) {
      return MEMFS.createNode(parent, name, mode, dev);
    }, rename: function(old_node, new_dir, new_name) {
      if (FS.isDir(old_node.mode)) {
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e2) {
        }
        if (new_node) {
          for (var i3 in new_node.contents) {
            throw new FS.ErrnoError(55);
          }
        }
      }
      delete old_node.parent.contents[old_node.name];
      old_node.parent.timestamp = Date.now();
      old_node.name = new_name;
      new_dir.contents[new_name] = old_node;
      new_dir.timestamp = old_node.parent.timestamp;
      old_node.parent = new_dir;
    }, unlink: function(parent, name) {
      delete parent.contents[name];
      parent.timestamp = Date.now();
    }, rmdir: function(parent, name) {
      var node = FS.lookupNode(parent, name);
      for (var i3 in node.contents) {
        throw new FS.ErrnoError(55);
      }
      delete parent.contents[name];
      parent.timestamp = Date.now();
    }, readdir: function(node) {
      var entries = [".", ".."];
      for (var key in node.contents) {
        if (!node.contents.hasOwnProperty(key)) {
          continue;
        }
        entries.push(key);
      }
      return entries;
    }, symlink: function(parent, newname, oldpath) {
      var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
      node.link = oldpath;
      return node;
    }, readlink: function(node) {
      if (!FS.isLink(node.mode)) {
        throw new FS.ErrnoError(28);
      }
      return node.link;
    } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {
      var contents = stream.node.contents;
      if (position >= stream.node.usedBytes) return 0;
      var size = Math.min(stream.node.usedBytes - position, length);
      if (size > 8 && contents.subarray) {
        buffer2.set(contents.subarray(position, position + size), offset);
      } else {
        for (var i3 = 0; i3 < size; i3++) buffer2[offset + i3] = contents[position + i3];
      }
      return size;
    }, write: function(stream, buffer2, offset, length, position, canOwn) {
      if (buffer2.buffer === HEAP8.buffer) {
        canOwn = false;
      }
      if (!length) return 0;
      var node = stream.node;
      node.timestamp = Date.now();
      if (buffer2.subarray && (!node.contents || node.contents.subarray)) {
        if (canOwn) {
          node.contents = buffer2.subarray(offset, offset + length);
          node.usedBytes = length;
          return length;
        } else if (node.usedBytes === 0 && position === 0) {
          node.contents = buffer2.slice(offset, offset + length);
          node.usedBytes = length;
          return length;
        } else if (position + length <= node.usedBytes) {
          node.contents.set(buffer2.subarray(offset, offset + length), position);
          return length;
        }
      }
      MEMFS.expandFileStorage(node, position + length);
      if (node.contents.subarray && buffer2.subarray) {
        node.contents.set(buffer2.subarray(offset, offset + length), position);
      } else {
        for (var i3 = 0; i3 < length; i3++) {
          node.contents[position + i3] = buffer2[offset + i3];
        }
      }
      node.usedBytes = Math.max(node.usedBytes, position + length);
      return length;
    }, llseek: function(stream, offset, whence) {
      var position = offset;
      if (whence === 1) {
        position += stream.position;
      } else if (whence === 2) {
        if (FS.isFile(stream.node.mode)) {
          position += stream.node.usedBytes;
        }
      }
      if (position < 0) {
        throw new FS.ErrnoError(28);
      }
      return position;
    }, allocate: function(stream, offset, length) {
      MEMFS.expandFileStorage(stream.node, offset + length);
      stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
    }, mmap: function(stream, length, position, prot, flags) {
      if (!FS.isFile(stream.node.mode)) {
        throw new FS.ErrnoError(43);
      }
      var ptr;
      var allocated;
      var contents = stream.node.contents;
      if (!(flags & 2) && contents.buffer === buffer) {
        allocated = false;
        ptr = contents.byteOffset;
      } else {
        if (position > 0 || position + length < contents.length) {
          if (contents.subarray) {
            contents = contents.subarray(position, position + length);
          } else {
            contents = Array.prototype.slice.call(contents, position, position + length);
          }
        }
        allocated = true;
        ptr = mmapAlloc(length);
        if (!ptr) {
          throw new FS.ErrnoError(48);
        }
        HEAP8.set(contents, ptr);
      }
      return { ptr, allocated };
    }, msync: function(stream, buffer2, offset, length, mmapFlags) {
      MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);
      return 0;
    } } };
    function asyncLoad(url, onload, onerror, noRunDep) {
      var dep = !noRunDep ? getUniqueRunDependency("al " + url) : "";
      readAsync(url, (arrayBuffer) => {
        assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
        onload(new Uint8Array(arrayBuffer));
        if (dep) removeRunDependency(dep);
      }, (event) => {
        if (onerror) {
          onerror();
        } else {
          throw 'Loading data file "' + url + '" failed.';
        }
      });
      if (dep) addRunDependency(dep);
    }
    var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: false, ignorePermissions: true, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: (path, opts = {}) => {
      path = PATH_FS.resolve(FS.cwd(), path);
      if (!path) return { path: "", node: null };
      var defaults = { follow_mount: true, recurse_count: 0 };
      opts = Object.assign(defaults, opts);
      if (opts.recurse_count > 8) {
        throw new FS.ErrnoError(32);
      }
      var parts = PATH.normalizeArray(path.split("/").filter((p2) => !!p2), false);
      var current = FS.root;
      var current_path = "/";
      for (var i3 = 0; i3 < parts.length; i3++) {
        var islast = i3 === parts.length - 1;
        if (islast && opts.parent) {
          break;
        }
        current = FS.lookupNode(current, parts[i3]);
        current_path = PATH.join2(current_path, parts[i3]);
        if (FS.isMountpoint(current)) {
          if (!islast || islast && opts.follow_mount) {
            current = current.mounted.root;
          }
        }
        if (!islast || opts.follow) {
          var count = 0;
          while (FS.isLink(current.mode)) {
            var link = FS.readlink(current_path);
            current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
            var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });
            current = lookup.node;
            if (count++ > 40) {
              throw new FS.ErrnoError(32);
            }
          }
        }
      }
      return { path: current_path, node: current };
    }, getPath: (node) => {
      var path;
      while (true) {
        if (FS.isRoot(node)) {
          var mount = node.mount.mountpoint;
          if (!path) return mount;
          return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
        }
        path = path ? node.name + "/" + path : node.name;
        node = node.parent;
      }
    }, hashName: (parentid, name) => {
      var hash = 0;
      for (var i3 = 0; i3 < name.length; i3++) {
        hash = (hash << 5) - hash + name.charCodeAt(i3) | 0;
      }
      return (parentid + hash >>> 0) % FS.nameTable.length;
    }, hashAddNode: (node) => {
      var hash = FS.hashName(node.parent.id, node.name);
      node.name_next = FS.nameTable[hash];
      FS.nameTable[hash] = node;
    }, hashRemoveNode: (node) => {
      var hash = FS.hashName(node.parent.id, node.name);
      if (FS.nameTable[hash] === node) {
        FS.nameTable[hash] = node.name_next;
      } else {
        var current = FS.nameTable[hash];
        while (current) {
          if (current.name_next === node) {
            current.name_next = node.name_next;
            break;
          }
          current = current.name_next;
        }
      }
    }, lookupNode: (parent, name) => {
      var errCode = FS.mayLookup(parent);
      if (errCode) {
        throw new FS.ErrnoError(errCode, parent);
      }
      var hash = FS.hashName(parent.id, name);
      for (var node = FS.nameTable[hash]; node; node = node.name_next) {
        var nodeName = node.name;
        if (node.parent.id === parent.id && nodeName === name) {
          return node;
        }
      }
      return FS.lookup(parent, name);
    }, createNode: (parent, name, mode, rdev) => {
      var node = new FS.FSNode(parent, name, mode, rdev);
      FS.hashAddNode(node);
      return node;
    }, destroyNode: (node) => {
      FS.hashRemoveNode(node);
    }, isRoot: (node) => {
      return node === node.parent;
    }, isMountpoint: (node) => {
      return !!node.mounted;
    }, isFile: (mode) => {
      return (mode & 61440) === 32768;
    }, isDir: (mode) => {
      return (mode & 61440) === 16384;
    }, isLink: (mode) => {
      return (mode & 61440) === 40960;
    }, isChrdev: (mode) => {
      return (mode & 61440) === 8192;
    }, isBlkdev: (mode) => {
      return (mode & 61440) === 24576;
    }, isFIFO: (mode) => {
      return (mode & 61440) === 4096;
    }, isSocket: (mode) => {
      return (mode & 49152) === 49152;
    }, flagModes: { "r": 0, "r+": 2, "w": 577, "w+": 578, "a": 1089, "a+": 1090 }, modeStringToFlags: (str) => {
      var flags = FS.flagModes[str];
      if (typeof flags == "undefined") {
        throw new Error("Unknown file open mode: " + str);
      }
      return flags;
    }, flagsToPermissionString: (flag) => {
      var perms = ["r", "w", "rw"][flag & 3];
      if (flag & 512) {
        perms += "w";
      }
      return perms;
    }, nodePermissions: (node, perms) => {
      if (FS.ignorePermissions) {
        return 0;
      }
      if (perms.includes("r") && !(node.mode & 292)) {
        return 2;
      } else if (perms.includes("w") && !(node.mode & 146)) {
        return 2;
      } else if (perms.includes("x") && !(node.mode & 73)) {
        return 2;
      }
      return 0;
    }, mayLookup: (dir) => {
      var errCode = FS.nodePermissions(dir, "x");
      if (errCode) return errCode;
      if (!dir.node_ops.lookup) return 2;
      return 0;
    }, mayCreate: (dir, name) => {
      try {
        var node = FS.lookupNode(dir, name);
        return 20;
      } catch (e2) {
      }
      return FS.nodePermissions(dir, "wx");
    }, mayDelete: (dir, name, isdir) => {
      var node;
      try {
        node = FS.lookupNode(dir, name);
      } catch (e2) {
        return e2.errno;
      }
      var errCode = FS.nodePermissions(dir, "wx");
      if (errCode) {
        return errCode;
      }
      if (isdir) {
        if (!FS.isDir(node.mode)) {
          return 54;
        }
        if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
          return 10;
        }
      } else {
        if (FS.isDir(node.mode)) {
          return 31;
        }
      }
      return 0;
    }, mayOpen: (node, flags) => {
      if (!node) {
        return 44;
      }
      if (FS.isLink(node.mode)) {
        return 32;
      } else if (FS.isDir(node.mode)) {
        if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
          return 31;
        }
      }
      return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
    }, MAX_OPEN_FDS: 4096, nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {
      for (var fd = fd_start; fd <= fd_end; fd++) {
        if (!FS.streams[fd]) {
          return fd;
        }
      }
      throw new FS.ErrnoError(33);
    }, getStream: (fd) => FS.streams[fd], createStream: (stream, fd_start, fd_end) => {
      if (!FS.FSStream) {
        FS.FSStream = function() {
          this.shared = {};
        };
        FS.FSStream.prototype = {};
        Object.defineProperties(FS.FSStream.prototype, { object: { get: function() {
          return this.node;
        }, set: function(val) {
          this.node = val;
        } }, isRead: { get: function() {
          return (this.flags & 2097155) !== 1;
        } }, isWrite: { get: function() {
          return (this.flags & 2097155) !== 0;
        } }, isAppend: { get: function() {
          return this.flags & 1024;
        } }, flags: { get: function() {
          return this.shared.flags;
        }, set: function(val) {
          this.shared.flags = val;
        } }, position: { get: function() {
          return this.shared.position;
        }, set: function(val) {
          this.shared.position = val;
        } } });
      }
      stream = Object.assign(new FS.FSStream(), stream);
      var fd = FS.nextfd(fd_start, fd_end);
      stream.fd = fd;
      FS.streams[fd] = stream;
      return stream;
    }, closeStream: (fd) => {
      FS.streams[fd] = null;
    }, chrdev_stream_ops: { open: (stream) => {
      var device2 = FS.getDevice(stream.node.rdev);
      stream.stream_ops = device2.stream_ops;
      if (stream.stream_ops.open) {
        stream.stream_ops.open(stream);
      }
    }, llseek: () => {
      throw new FS.ErrnoError(70);
    } }, major: (dev) => dev >> 8, minor: (dev) => dev & 255, makedev: (ma, mi) => ma << 8 | mi, registerDevice: (dev, ops) => {
      FS.devices[dev] = { stream_ops: ops };
    }, getDevice: (dev) => FS.devices[dev], getMounts: (mount) => {
      var mounts = [];
      var check = [mount];
      while (check.length) {
        var m2 = check.pop();
        mounts.push(m2);
        check.push.apply(check, m2.mounts);
      }
      return mounts;
    }, syncfs: (populate, callback) => {
      if (typeof populate == "function") {
        callback = populate;
        populate = false;
      }
      FS.syncFSRequests++;
      if (FS.syncFSRequests > 1) {
        err("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
      }
      var mounts = FS.getMounts(FS.root.mount);
      var completed = 0;
      function doCallback(errCode) {
        FS.syncFSRequests--;
        return callback(errCode);
      }
      function done(errCode) {
        if (errCode) {
          if (!done.errored) {
            done.errored = true;
            return doCallback(errCode);
          }
          return;
        }
        if (++completed >= mounts.length) {
          doCallback(null);
        }
      }
      mounts.forEach((mount) => {
        if (!mount.type.syncfs) {
          return done(null);
        }
        mount.type.syncfs(mount, populate, done);
      });
    }, mount: (type, opts, mountpoint) => {
      var root = mountpoint === "/";
      var pseudo = !mountpoint;
      var node;
      if (root && FS.root) {
        throw new FS.ErrnoError(10);
      } else if (!root && !pseudo) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
        mountpoint = lookup.path;
        node = lookup.node;
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(10);
        }
        if (!FS.isDir(node.mode)) {
          throw new FS.ErrnoError(54);
        }
      }
      var mount = { type, opts, mountpoint, mounts: [] };
      var mountRoot = type.mount(mount);
      mountRoot.mount = mount;
      mount.root = mountRoot;
      if (root) {
        FS.root = mountRoot;
      } else if (node) {
        node.mounted = mount;
        if (node.mount) {
          node.mount.mounts.push(mount);
        }
      }
      return mountRoot;
    }, unmount: (mountpoint) => {
      var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
      if (!FS.isMountpoint(lookup.node)) {
        throw new FS.ErrnoError(28);
      }
      var node = lookup.node;
      var mount = node.mounted;
      var mounts = FS.getMounts(mount);
      Object.keys(FS.nameTable).forEach((hash) => {
        var current = FS.nameTable[hash];
        while (current) {
          var next = current.name_next;
          if (mounts.includes(current.mount)) {
            FS.destroyNode(current);
          }
          current = next;
        }
      });
      node.mounted = null;
      var idx = node.mount.mounts.indexOf(mount);
      node.mount.mounts.splice(idx, 1);
    }, lookup: (parent, name) => {
      return parent.node_ops.lookup(parent, name);
    }, mknod: (path, mode, dev) => {
      var lookup = FS.lookupPath(path, { parent: true });
      var parent = lookup.node;
      var name = PATH.basename(path);
      if (!name || name === "." || name === "..") {
        throw new FS.ErrnoError(28);
      }
      var errCode = FS.mayCreate(parent, name);
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      if (!parent.node_ops.mknod) {
        throw new FS.ErrnoError(63);
      }
      return parent.node_ops.mknod(parent, name, mode, dev);
    }, create: (path, mode) => {
      mode = mode !== void 0 ? mode : 438;
      mode &= 4095;
      mode |= 32768;
      return FS.mknod(path, mode, 0);
    }, mkdir: (path, mode) => {
      mode = mode !== void 0 ? mode : 511;
      mode &= 511 | 512;
      mode |= 16384;
      return FS.mknod(path, mode, 0);
    }, mkdirTree: (path, mode) => {
      var dirs = path.split("/");
      var d2 = "";
      for (var i3 = 0; i3 < dirs.length; ++i3) {
        if (!dirs[i3]) continue;
        d2 += "/" + dirs[i3];
        try {
          FS.mkdir(d2, mode);
        } catch (e2) {
          if (e2.errno != 20) throw e2;
        }
      }
    }, mkdev: (path, mode, dev) => {
      if (typeof dev == "undefined") {
        dev = mode;
        mode = 438;
      }
      mode |= 8192;
      return FS.mknod(path, mode, dev);
    }, symlink: (oldpath, newpath) => {
      if (!PATH_FS.resolve(oldpath)) {
        throw new FS.ErrnoError(44);
      }
      var lookup = FS.lookupPath(newpath, { parent: true });
      var parent = lookup.node;
      if (!parent) {
        throw new FS.ErrnoError(44);
      }
      var newname = PATH.basename(newpath);
      var errCode = FS.mayCreate(parent, newname);
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      if (!parent.node_ops.symlink) {
        throw new FS.ErrnoError(63);
      }
      return parent.node_ops.symlink(parent, newname, oldpath);
    }, rename: (old_path, new_path) => {
      var old_dirname = PATH.dirname(old_path);
      var new_dirname = PATH.dirname(new_path);
      var old_name = PATH.basename(old_path);
      var new_name = PATH.basename(new_path);
      var lookup, old_dir, new_dir;
      lookup = FS.lookupPath(old_path, { parent: true });
      old_dir = lookup.node;
      lookup = FS.lookupPath(new_path, { parent: true });
      new_dir = lookup.node;
      if (!old_dir || !new_dir) throw new FS.ErrnoError(44);
      if (old_dir.mount !== new_dir.mount) {
        throw new FS.ErrnoError(75);
      }
      var old_node = FS.lookupNode(old_dir, old_name);
      var relative = PATH_FS.relative(old_path, new_dirname);
      if (relative.charAt(0) !== ".") {
        throw new FS.ErrnoError(28);
      }
      relative = PATH_FS.relative(new_path, old_dirname);
      if (relative.charAt(0) !== ".") {
        throw new FS.ErrnoError(55);
      }
      var new_node;
      try {
        new_node = FS.lookupNode(new_dir, new_name);
      } catch (e2) {
      }
      if (old_node === new_node) {
        return;
      }
      var isdir = FS.isDir(old_node.mode);
      var errCode = FS.mayDelete(old_dir, old_name, isdir);
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      if (!old_dir.node_ops.rename) {
        throw new FS.ErrnoError(63);
      }
      if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
        throw new FS.ErrnoError(10);
      }
      if (new_dir !== old_dir) {
        errCode = FS.nodePermissions(old_dir, "w");
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
      }
      FS.hashRemoveNode(old_node);
      try {
        old_dir.node_ops.rename(old_node, new_dir, new_name);
      } catch (e2) {
        throw e2;
      } finally {
        FS.hashAddNode(old_node);
      }
    }, rmdir: (path) => {
      var lookup = FS.lookupPath(path, { parent: true });
      var parent = lookup.node;
      var name = PATH.basename(path);
      var node = FS.lookupNode(parent, name);
      var errCode = FS.mayDelete(parent, name, true);
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      if (!parent.node_ops.rmdir) {
        throw new FS.ErrnoError(63);
      }
      if (FS.isMountpoint(node)) {
        throw new FS.ErrnoError(10);
      }
      parent.node_ops.rmdir(parent, name);
      FS.destroyNode(node);
    }, readdir: (path) => {
      var lookup = FS.lookupPath(path, { follow: true });
      var node = lookup.node;
      if (!node.node_ops.readdir) {
        throw new FS.ErrnoError(54);
      }
      return node.node_ops.readdir(node);
    }, unlink: (path) => {
      var lookup = FS.lookupPath(path, { parent: true });
      var parent = lookup.node;
      if (!parent) {
        throw new FS.ErrnoError(44);
      }
      var name = PATH.basename(path);
      var node = FS.lookupNode(parent, name);
      var errCode = FS.mayDelete(parent, name, false);
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      if (!parent.node_ops.unlink) {
        throw new FS.ErrnoError(63);
      }
      if (FS.isMountpoint(node)) {
        throw new FS.ErrnoError(10);
      }
      parent.node_ops.unlink(parent, name);
      FS.destroyNode(node);
    }, readlink: (path) => {
      var lookup = FS.lookupPath(path);
      var link = lookup.node;
      if (!link) {
        throw new FS.ErrnoError(44);
      }
      if (!link.node_ops.readlink) {
        throw new FS.ErrnoError(28);
      }
      return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
    }, stat: (path, dontFollow) => {
      var lookup = FS.lookupPath(path, { follow: !dontFollow });
      var node = lookup.node;
      if (!node) {
        throw new FS.ErrnoError(44);
      }
      if (!node.node_ops.getattr) {
        throw new FS.ErrnoError(63);
      }
      return node.node_ops.getattr(node);
    }, lstat: (path) => {
      return FS.stat(path, true);
    }, chmod: (path, mode, dontFollow) => {
      var node;
      if (typeof path == "string") {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        node = lookup.node;
      } else {
        node = path;
      }
      if (!node.node_ops.setattr) {
        throw new FS.ErrnoError(63);
      }
      node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });
    }, lchmod: (path, mode) => {
      FS.chmod(path, mode, true);
    }, fchmod: (fd, mode) => {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(8);
      }
      FS.chmod(stream.node, mode);
    }, chown: (path, uid, gid, dontFollow) => {
      var node;
      if (typeof path == "string") {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        node = lookup.node;
      } else {
        node = path;
      }
      if (!node.node_ops.setattr) {
        throw new FS.ErrnoError(63);
      }
      node.node_ops.setattr(node, { timestamp: Date.now() });
    }, lchown: (path, uid, gid) => {
      FS.chown(path, uid, gid, true);
    }, fchown: (fd, uid, gid) => {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(8);
      }
      FS.chown(stream.node, uid, gid);
    }, truncate: (path, len) => {
      if (len < 0) {
        throw new FS.ErrnoError(28);
      }
      var node;
      if (typeof path == "string") {
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
      } else {
        node = path;
      }
      if (!node.node_ops.setattr) {
        throw new FS.ErrnoError(63);
      }
      if (FS.isDir(node.mode)) {
        throw new FS.ErrnoError(31);
      }
      if (!FS.isFile(node.mode)) {
        throw new FS.ErrnoError(28);
      }
      var errCode = FS.nodePermissions(node, "w");
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      node.node_ops.setattr(node, { size: len, timestamp: Date.now() });
    }, ftruncate: (fd, len) => {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(8);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(28);
      }
      FS.truncate(stream.node, len);
    }, utime: (path, atime, mtime) => {
      var lookup = FS.lookupPath(path, { follow: true });
      var node = lookup.node;
      node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });
    }, open: (path, flags, mode) => {
      if (path === "") {
        throw new FS.ErrnoError(44);
      }
      flags = typeof flags == "string" ? FS.modeStringToFlags(flags) : flags;
      mode = typeof mode == "undefined" ? 438 : mode;
      if (flags & 64) {
        mode = mode & 4095 | 32768;
      } else {
        mode = 0;
      }
      var node;
      if (typeof path == "object") {
        node = path;
      } else {
        path = PATH.normalize(path);
        try {
          var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });
          node = lookup.node;
        } catch (e2) {
        }
      }
      var created = false;
      if (flags & 64) {
        if (node) {
          if (flags & 128) {
            throw new FS.ErrnoError(20);
          }
        } else {
          node = FS.mknod(path, mode, 0);
          created = true;
        }
      }
      if (!node) {
        throw new FS.ErrnoError(44);
      }
      if (FS.isChrdev(node.mode)) {
        flags &= ~512;
      }
      if (flags & 65536 && !FS.isDir(node.mode)) {
        throw new FS.ErrnoError(54);
      }
      if (!created) {
        var errCode = FS.mayOpen(node, flags);
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
      }
      if (flags & 512 && !created) {
        FS.truncate(node, 0);
      }
      flags &= ~(128 | 512 | 131072);
      var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false });
      if (stream.stream_ops.open) {
        stream.stream_ops.open(stream);
      }
      if (Module3["logReadFiles"] && !(flags & 1)) {
        if (!FS.readFiles) FS.readFiles = {};
        if (!(path in FS.readFiles)) {
          FS.readFiles[path] = 1;
        }
      }
      return stream;
    }, close: (stream) => {
      if (FS.isClosed(stream)) {
        throw new FS.ErrnoError(8);
      }
      if (stream.getdents) stream.getdents = null;
      try {
        if (stream.stream_ops.close) {
          stream.stream_ops.close(stream);
        }
      } catch (e2) {
        throw e2;
      } finally {
        FS.closeStream(stream.fd);
      }
      stream.fd = null;
    }, isClosed: (stream) => {
      return stream.fd === null;
    }, llseek: (stream, offset, whence) => {
      if (FS.isClosed(stream)) {
        throw new FS.ErrnoError(8);
      }
      if (!stream.seekable || !stream.stream_ops.llseek) {
        throw new FS.ErrnoError(70);
      }
      if (whence != 0 && whence != 1 && whence != 2) {
        throw new FS.ErrnoError(28);
      }
      stream.position = stream.stream_ops.llseek(stream, offset, whence);
      stream.ungotten = [];
      return stream.position;
    }, read: (stream, buffer2, offset, length, position) => {
      if (length < 0 || position < 0) {
        throw new FS.ErrnoError(28);
      }
      if (FS.isClosed(stream)) {
        throw new FS.ErrnoError(8);
      }
      if ((stream.flags & 2097155) === 1) {
        throw new FS.ErrnoError(8);
      }
      if (FS.isDir(stream.node.mode)) {
        throw new FS.ErrnoError(31);
      }
      if (!stream.stream_ops.read) {
        throw new FS.ErrnoError(28);
      }
      var seeking = typeof position != "undefined";
      if (!seeking) {
        position = stream.position;
      } else if (!stream.seekable) {
        throw new FS.ErrnoError(70);
      }
      var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);
      if (!seeking) stream.position += bytesRead;
      return bytesRead;
    }, write: (stream, buffer2, offset, length, position, canOwn) => {
      if (length < 0 || position < 0) {
        throw new FS.ErrnoError(28);
      }
      if (FS.isClosed(stream)) {
        throw new FS.ErrnoError(8);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(8);
      }
      if (FS.isDir(stream.node.mode)) {
        throw new FS.ErrnoError(31);
      }
      if (!stream.stream_ops.write) {
        throw new FS.ErrnoError(28);
      }
      if (stream.seekable && stream.flags & 1024) {
        FS.llseek(stream, 0, 2);
      }
      var seeking = typeof position != "undefined";
      if (!seeking) {
        position = stream.position;
      } else if (!stream.seekable) {
        throw new FS.ErrnoError(70);
      }
      var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);
      if (!seeking) stream.position += bytesWritten;
      return bytesWritten;
    }, allocate: (stream, offset, length) => {
      if (FS.isClosed(stream)) {
        throw new FS.ErrnoError(8);
      }
      if (offset < 0 || length <= 0) {
        throw new FS.ErrnoError(28);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(8);
      }
      if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
        throw new FS.ErrnoError(43);
      }
      if (!stream.stream_ops.allocate) {
        throw new FS.ErrnoError(138);
      }
      stream.stream_ops.allocate(stream, offset, length);
    }, mmap: (stream, length, position, prot, flags) => {
      if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
        throw new FS.ErrnoError(2);
      }
      if ((stream.flags & 2097155) === 1) {
        throw new FS.ErrnoError(2);
      }
      if (!stream.stream_ops.mmap) {
        throw new FS.ErrnoError(43);
      }
      return stream.stream_ops.mmap(stream, length, position, prot, flags);
    }, msync: (stream, buffer2, offset, length, mmapFlags) => {
      if (!stream.stream_ops.msync) {
        return 0;
      }
      return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);
    }, munmap: (stream) => 0, ioctl: (stream, cmd, arg) => {
      if (!stream.stream_ops.ioctl) {
        throw new FS.ErrnoError(59);
      }
      return stream.stream_ops.ioctl(stream, cmd, arg);
    }, readFile: (path, opts = {}) => {
      opts.flags = opts.flags || 0;
      opts.encoding = opts.encoding || "binary";
      if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
        throw new Error('Invalid encoding type "' + opts.encoding + '"');
      }
      var ret;
      var stream = FS.open(path, opts.flags);
      var stat = FS.stat(path);
      var length = stat.size;
      var buf = new Uint8Array(length);
      FS.read(stream, buf, 0, length, 0);
      if (opts.encoding === "utf8") {
        ret = UTF8ArrayToString(buf, 0);
      } else if (opts.encoding === "binary") {
        ret = buf;
      }
      FS.close(stream);
      return ret;
    }, writeFile: (path, data, opts = {}) => {
      opts.flags = opts.flags || 577;
      var stream = FS.open(path, opts.flags, opts.mode);
      if (typeof data == "string") {
        var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
        var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
        FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);
      } else if (ArrayBuffer.isView(data)) {
        FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);
      } else {
        throw new Error("Unsupported data type");
      }
      FS.close(stream);
    }, cwd: () => FS.currentPath, chdir: (path) => {
      var lookup = FS.lookupPath(path, { follow: true });
      if (lookup.node === null) {
        throw new FS.ErrnoError(44);
      }
      if (!FS.isDir(lookup.node.mode)) {
        throw new FS.ErrnoError(54);
      }
      var errCode = FS.nodePermissions(lookup.node, "x");
      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
      FS.currentPath = lookup.path;
    }, createDefaultDirectories: () => {
      FS.mkdir("/tmp");
      FS.mkdir("/home");
      FS.mkdir("/home/web_user");
    }, createDefaultDevices: () => {
      FS.mkdir("/dev");
      FS.registerDevice(FS.makedev(1, 3), { read: () => 0, write: (stream, buffer2, offset, length, pos) => length });
      FS.mkdev("/dev/null", FS.makedev(1, 3));
      TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
      TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
      FS.mkdev("/dev/tty", FS.makedev(5, 0));
      FS.mkdev("/dev/tty1", FS.makedev(6, 0));
      var random_device = getRandomDevice();
      FS.createDevice("/dev", "random", random_device);
      FS.createDevice("/dev", "urandom", random_device);
      FS.mkdir("/dev/shm");
      FS.mkdir("/dev/shm/tmp");
    }, createSpecialDirectories: () => {
      FS.mkdir("/proc");
      var proc_self = FS.mkdir("/proc/self");
      FS.mkdir("/proc/self/fd");
      FS.mount({ mount: () => {
        var node = FS.createNode(proc_self, "fd", 16384 | 511, 73);
        node.node_ops = { lookup: (parent, name) => {
          var fd = +name;
          var stream = FS.getStream(fd);
          if (!stream) throw new FS.ErrnoError(8);
          var ret = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: () => stream.path } };
          ret.parent = ret;
          return ret;
        } };
        return node;
      } }, {}, "/proc/self/fd");
    }, createStandardStreams: () => {
      if (Module3["stdin"]) {
        FS.createDevice("/dev", "stdin", Module3["stdin"]);
      } else {
        FS.symlink("/dev/tty", "/dev/stdin");
      }
      if (Module3["stdout"]) {
        FS.createDevice("/dev", "stdout", null, Module3["stdout"]);
      } else {
        FS.symlink("/dev/tty", "/dev/stdout");
      }
      if (Module3["stderr"]) {
        FS.createDevice("/dev", "stderr", null, Module3["stderr"]);
      } else {
        FS.symlink("/dev/tty1", "/dev/stderr");
      }
      var stdin = FS.open("/dev/stdin", 0);
      var stdout = FS.open("/dev/stdout", 1);
      var stderr = FS.open("/dev/stderr", 1);
    }, ensureErrnoError: () => {
      if (FS.ErrnoError) return;
      FS.ErrnoError = function ErrnoError(errno, node) {
        this.node = node;
        this.setErrno = function(errno2) {
          this.errno = errno2;
        };
        this.setErrno(errno);
        this.message = "FS error";
      };
      FS.ErrnoError.prototype = new Error();
      FS.ErrnoError.prototype.constructor = FS.ErrnoError;
      [44].forEach((code) => {
        FS.genericErrors[code] = new FS.ErrnoError(code);
        FS.genericErrors[code].stack = "<generic error, no stack>";
      });
    }, staticInit: () => {
      FS.ensureErrnoError();
      FS.nameTable = new Array(4096);
      FS.mount(MEMFS, {}, "/");
      FS.createDefaultDirectories();
      FS.createDefaultDevices();
      FS.createSpecialDirectories();
      FS.filesystems = { "MEMFS": MEMFS };
    }, init: (input, output, error) => {
      FS.init.initialized = true;
      FS.ensureErrnoError();
      Module3["stdin"] = input || Module3["stdin"];
      Module3["stdout"] = output || Module3["stdout"];
      Module3["stderr"] = error || Module3["stderr"];
      FS.createStandardStreams();
    }, quit: () => {
      FS.init.initialized = false;
      for (var i3 = 0; i3 < FS.streams.length; i3++) {
        var stream = FS.streams[i3];
        if (!stream) {
          continue;
        }
        FS.close(stream);
      }
    }, getMode: (canRead, canWrite) => {
      var mode = 0;
      if (canRead) mode |= 292 | 73;
      if (canWrite) mode |= 146;
      return mode;
    }, findObject: (path, dontResolveLastLink) => {
      var ret = FS.analyzePath(path, dontResolveLastLink);
      if (!ret.exists) {
        return null;
      }
      return ret.object;
    }, analyzePath: (path, dontResolveLastLink) => {
      try {
        var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
        path = lookup.path;
      } catch (e2) {
      }
      var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };
      try {
        var lookup = FS.lookupPath(path, { parent: true });
        ret.parentExists = true;
        ret.parentPath = lookup.path;
        ret.parentObject = lookup.node;
        ret.name = PATH.basename(path);
        lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
        ret.exists = true;
        ret.path = lookup.path;
        ret.object = lookup.node;
        ret.name = lookup.node.name;
        ret.isRoot = lookup.path === "/";
      } catch (e2) {
        ret.error = e2.errno;
      }
      return ret;
    }, createPath: (parent, path, canRead, canWrite) => {
      parent = typeof parent == "string" ? parent : FS.getPath(parent);
      var parts = path.split("/").reverse();
      while (parts.length) {
        var part = parts.pop();
        if (!part) continue;
        var current = PATH.join2(parent, part);
        try {
          FS.mkdir(current);
        } catch (e2) {
        }
        parent = current;
      }
      return current;
    }, createFile: (parent, name, properties, canRead, canWrite) => {
      var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(canRead, canWrite);
      return FS.create(path, mode);
    }, createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {
      var path = name;
      if (parent) {
        parent = typeof parent == "string" ? parent : FS.getPath(parent);
        path = name ? PATH.join2(parent, name) : parent;
      }
      var mode = FS.getMode(canRead, canWrite);
      var node = FS.create(path, mode);
      if (data) {
        if (typeof data == "string") {
          var arr = new Array(data.length);
          for (var i3 = 0, len = data.length; i3 < len; ++i3) arr[i3] = data.charCodeAt(i3);
          data = arr;
        }
        FS.chmod(node, mode | 146);
        var stream = FS.open(node, 577);
        FS.write(stream, data, 0, data.length, 0, canOwn);
        FS.close(stream);
        FS.chmod(node, mode);
      }
      return node;
    }, createDevice: (parent, name, input, output) => {
      var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(!!input, !!output);
      if (!FS.createDevice.major) FS.createDevice.major = 64;
      var dev = FS.makedev(FS.createDevice.major++, 0);
      FS.registerDevice(dev, { open: (stream) => {
        stream.seekable = false;
      }, close: (stream) => {
        if (output && output.buffer && output.buffer.length) {
          output(10);
        }
      }, read: (stream, buffer2, offset, length, pos) => {
        var bytesRead = 0;
        for (var i3 = 0; i3 < length; i3++) {
          var result;
          try {
            result = input();
          } catch (e2) {
            throw new FS.ErrnoError(29);
          }
          if (result === void 0 && bytesRead === 0) {
            throw new FS.ErrnoError(6);
          }
          if (result === null || result === void 0) break;
          bytesRead++;
          buffer2[offset + i3] = result;
        }
        if (bytesRead) {
          stream.node.timestamp = Date.now();
        }
        return bytesRead;
      }, write: (stream, buffer2, offset, length, pos) => {
        for (var i3 = 0; i3 < length; i3++) {
          try {
            output(buffer2[offset + i3]);
          } catch (e2) {
            throw new FS.ErrnoError(29);
          }
        }
        if (length) {
          stream.node.timestamp = Date.now();
        }
        return i3;
      } });
      return FS.mkdev(path, mode, dev);
    }, forceLoadFile: (obj) => {
      if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
      if (typeof XMLHttpRequest != "undefined") {
        throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
      } else if (read_) {
        try {
          obj.contents = intArrayFromString(read_(obj.url), true);
          obj.usedBytes = obj.contents.length;
        } catch (e2) {
          throw new FS.ErrnoError(29);
        }
      } else {
        throw new Error("Cannot load without read() or XMLHttpRequest.");
      }
    }, createLazyFile: (parent, name, url, canRead, canWrite) => {
      function LazyUint8Array() {
        this.lengthKnown = false;
        this.chunks = [];
      }
      LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
        if (idx > this.length - 1 || idx < 0) {
          return void 0;
        }
        var chunkOffset = idx % this.chunkSize;
        var chunkNum = idx / this.chunkSize | 0;
        return this.getter(chunkNum)[chunkOffset];
      };
      LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
        this.getter = getter;
      };
      LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
        var xhr = new XMLHttpRequest();
        xhr.open("HEAD", url, false);
        xhr.send(null);
        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
        var datalength = Number(xhr.getResponseHeader("Content-length"));
        var header;
        var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
        var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
        var chunkSize = 1024 * 1024;
        if (!hasByteServing) chunkSize = datalength;
        var doXHR = (from, to) => {
          if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
          if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
          var xhr2 = new XMLHttpRequest();
          xhr2.open("GET", url, false);
          if (datalength !== chunkSize) xhr2.setRequestHeader("Range", "bytes=" + from + "-" + to);
          xhr2.responseType = "arraybuffer";
          if (xhr2.overrideMimeType) {
            xhr2.overrideMimeType("text/plain; charset=x-user-defined");
          }
          xhr2.send(null);
          if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr2.status);
          if (xhr2.response !== void 0) {
            return new Uint8Array(xhr2.response || []);
          }
          return intArrayFromString(xhr2.responseText || "", true);
        };
        var lazyArray2 = this;
        lazyArray2.setDataGetter((chunkNum) => {
          var start = chunkNum * chunkSize;
          var end = (chunkNum + 1) * chunkSize - 1;
          end = Math.min(end, datalength - 1);
          if (typeof lazyArray2.chunks[chunkNum] == "undefined") {
            lazyArray2.chunks[chunkNum] = doXHR(start, end);
          }
          if (typeof lazyArray2.chunks[chunkNum] == "undefined") throw new Error("doXHR failed!");
          return lazyArray2.chunks[chunkNum];
        });
        if (usesGzip || !datalength) {
          chunkSize = datalength = 1;
          datalength = this.getter(0).length;
          chunkSize = datalength;
          out("LazyFiles on gzip forces download of the whole file when length is accessed");
        }
        this._length = datalength;
        this._chunkSize = chunkSize;
        this.lengthKnown = true;
      };
      if (typeof XMLHttpRequest != "undefined") {
        if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
        var lazyArray = new LazyUint8Array();
        Object.defineProperties(lazyArray, { length: { get: function() {
          if (!this.lengthKnown) {
            this.cacheLength();
          }
          return this._length;
        } }, chunkSize: { get: function() {
          if (!this.lengthKnown) {
            this.cacheLength();
          }
          return this._chunkSize;
        } } });
        var properties = { isDevice: false, contents: lazyArray };
      } else {
        var properties = { isDevice: false, url };
      }
      var node = FS.createFile(parent, name, properties, canRead, canWrite);
      if (properties.contents) {
        node.contents = properties.contents;
      } else if (properties.url) {
        node.contents = null;
        node.url = properties.url;
      }
      Object.defineProperties(node, { usedBytes: { get: function() {
        return this.contents.length;
      } } });
      var stream_ops = {};
      var keys = Object.keys(node.stream_ops);
      keys.forEach((key) => {
        var fn = node.stream_ops[key];
        stream_ops[key] = function forceLoadLazyFile() {
          FS.forceLoadFile(node);
          return fn.apply(null, arguments);
        };
      });
      function writeChunks(stream, buffer2, offset, length, position) {
        var contents = stream.node.contents;
        if (position >= contents.length) return 0;
        var size = Math.min(contents.length - position, length);
        if (contents.slice) {
          for (var i3 = 0; i3 < size; i3++) {
            buffer2[offset + i3] = contents[position + i3];
          }
        } else {
          for (var i3 = 0; i3 < size; i3++) {
            buffer2[offset + i3] = contents.get(position + i3);
          }
        }
        return size;
      }
      stream_ops.read = (stream, buffer2, offset, length, position) => {
        FS.forceLoadFile(node);
        return writeChunks(stream, buffer2, offset, length, position);
      };
      stream_ops.mmap = (stream, length, position, prot, flags) => {
        FS.forceLoadFile(node);
        var ptr = mmapAlloc(length);
        if (!ptr) {
          throw new FS.ErrnoError(48);
        }
        writeChunks(stream, HEAP8, ptr, length, position);
        return { ptr, allocated: true };
      };
      node.stream_ops = stream_ops;
      return node;
    }, createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {
      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
      var dep = getUniqueRunDependency("cp " + fullname);
      function processData(byteArray) {
        function finish(byteArray2) {
          if (preFinish) preFinish();
          if (!dontCreateFile) {
            FS.createDataFile(parent, name, byteArray2, canRead, canWrite, canOwn);
          }
          if (onload) onload();
          removeRunDependency(dep);
        }
        if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {
          if (onerror) onerror();
          removeRunDependency(dep);
        })) {
          return;
        }
        finish(byteArray);
      }
      addRunDependency(dep);
      if (typeof url == "string") {
        asyncLoad(url, (byteArray) => processData(byteArray), onerror);
      } else {
        processData(url);
      }
    }, indexedDB: () => {
      return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
    }, DB_NAME: () => {
      return "EM_FS_" + window.location.pathname;
    }, DB_VERSION: 20, DB_STORE_NAME: "FILE_DATA", saveFilesToDB: (paths, onload, onerror) => {
      onload = onload || (() => {
      });
      onerror = onerror || (() => {
      });
      var indexedDB = FS.indexedDB();
      try {
        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e2) {
        return onerror(e2);
      }
      openRequest.onupgradeneeded = () => {
        out("creating db");
        var db = openRequest.result;
        db.createObjectStore(FS.DB_STORE_NAME);
      };
      openRequest.onsuccess = () => {
        var db = openRequest.result;
        var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");
        var files = transaction.objectStore(FS.DB_STORE_NAME);
        var ok = 0, fail = 0, total = paths.length;
        function finish() {
          if (fail == 0) onload();
          else onerror();
        }
        paths.forEach((path) => {
          var putRequest = files.put(FS.analyzePath(path).object.contents, path);
          putRequest.onsuccess = () => {
            ok++;
            if (ok + fail == total) finish();
          };
          putRequest.onerror = () => {
            fail++;
            if (ok + fail == total) finish();
          };
        });
        transaction.onerror = onerror;
      };
      openRequest.onerror = onerror;
    }, loadFilesFromDB: (paths, onload, onerror) => {
      onload = onload || (() => {
      });
      onerror = onerror || (() => {
      });
      var indexedDB = FS.indexedDB();
      try {
        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e2) {
        return onerror(e2);
      }
      openRequest.onupgradeneeded = onerror;
      openRequest.onsuccess = () => {
        var db = openRequest.result;
        try {
          var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
        } catch (e2) {
          onerror(e2);
          return;
        }
        var files = transaction.objectStore(FS.DB_STORE_NAME);
        var ok = 0, fail = 0, total = paths.length;
        function finish() {
          if (fail == 0) onload();
          else onerror();
        }
        paths.forEach((path) => {
          var getRequest = files.get(path);
          getRequest.onsuccess = () => {
            if (FS.analyzePath(path).exists) {
              FS.unlink(path);
            }
            FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
            ok++;
            if (ok + fail == total) finish();
          };
          getRequest.onerror = () => {
            fail++;
            if (ok + fail == total) finish();
          };
        });
        transaction.onerror = onerror;
      };
      openRequest.onerror = onerror;
    } };
    var SYSCALLS = { DEFAULT_POLLMASK: 5, calculateAt: function(dirfd, path, allowEmpty) {
      if (PATH.isAbs(path)) {
        return path;
      }
      var dir;
      if (dirfd === -100) {
        dir = FS.cwd();
      } else {
        var dirstream = SYSCALLS.getStreamFromFD(dirfd);
        dir = dirstream.path;
      }
      if (path.length == 0) {
        if (!allowEmpty) {
          throw new FS.ErrnoError(44);
        }
        return dir;
      }
      return PATH.join2(dir, path);
    }, doStat: function(func, path, buf) {
      try {
        var stat = func(path);
      } catch (e2) {
        if (e2 && e2.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e2.node))) {
          return -54;
        }
        throw e2;
      }
      HEAP32[buf >> 2] = stat.dev;
      HEAP32[buf + 8 >> 2] = stat.ino;
      HEAP32[buf + 12 >> 2] = stat.mode;
      HEAPU32[buf + 16 >> 2] = stat.nlink;
      HEAP32[buf + 20 >> 2] = stat.uid;
      HEAP32[buf + 24 >> 2] = stat.gid;
      HEAP32[buf + 28 >> 2] = stat.rdev;
      tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];
      HEAP32[buf + 48 >> 2] = 4096;
      HEAP32[buf + 52 >> 2] = stat.blocks;
      tempI64 = [Math.floor(stat.atime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.atime.getTime() / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 56 >> 2] = tempI64[0], HEAP32[buf + 60 >> 2] = tempI64[1];
      HEAPU32[buf + 64 >> 2] = 0;
      tempI64 = [Math.floor(stat.mtime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.mtime.getTime() / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 72 >> 2] = tempI64[0], HEAP32[buf + 76 >> 2] = tempI64[1];
      HEAPU32[buf + 80 >> 2] = 0;
      tempI64 = [Math.floor(stat.ctime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.ctime.getTime() / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 88 >> 2] = tempI64[0], HEAP32[buf + 92 >> 2] = tempI64[1];
      HEAPU32[buf + 96 >> 2] = 0;
      tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 104 >> 2] = tempI64[0], HEAP32[buf + 108 >> 2] = tempI64[1];
      return 0;
    }, doMsync: function(addr, stream, len, flags, offset) {
      if (!FS.isFile(stream.node.mode)) {
        throw new FS.ErrnoError(43);
      }
      if (flags & 2) {
        return 0;
      }
      var buffer2 = HEAPU8.slice(addr, addr + len);
      FS.msync(stream, buffer2, offset, len, flags);
    }, varargs: void 0, get: function() {
      SYSCALLS.varargs += 4;
      var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
      return ret;
    }, getStr: function(ptr) {
      var ret = UTF8ToString(ptr);
      return ret;
    }, getStreamFromFD: function(fd) {
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(8);
      return stream;
    } };
    function ___syscall_fcntl64(fd, cmd, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD(fd);
        switch (cmd) {
          case 0: {
            var arg = SYSCALLS.get();
            if (arg < 0) {
              return -28;
            }
            var newStream;
            newStream = FS.createStream(stream, arg);
            return newStream.fd;
          }
          case 1:
          case 2:
            return 0;
          case 3:
            return stream.flags;
          case 4: {
            var arg = SYSCALLS.get();
            stream.flags |= arg;
            return 0;
          }
          case 5: {
            var arg = SYSCALLS.get();
            var offset = 0;
            HEAP16[arg + offset >> 1] = 2;
            return 0;
          }
          case 6:
          case 7:
            return 0;
          case 16:
          case 8:
            return -28;
          case 9:
            setErrNo(28);
            return -1;
          default: {
            return -28;
          }
        }
      } catch (e2) {
        if (typeof FS == "undefined" || !(e2 instanceof FS.ErrnoError)) throw e2;
        return -e2.errno;
      }
    }
    function ___syscall_ioctl(fd, op, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD(fd);
        switch (op) {
          case 21509:
          case 21505: {
            if (!stream.tty) return -59;
            return 0;
          }
          case 21510:
          case 21511:
          case 21512:
          case 21506:
          case 21507:
          case 21508: {
            if (!stream.tty) return -59;
            return 0;
          }
          case 21519: {
            if (!stream.tty) return -59;
            var argp = SYSCALLS.get();
            HEAP32[argp >> 2] = 0;
            return 0;
          }
          case 21520: {
            if (!stream.tty) return -59;
            return -28;
          }
          case 21531: {
            var argp = SYSCALLS.get();
            return FS.ioctl(stream, op, argp);
          }
          case 21523: {
            if (!stream.tty) return -59;
            return 0;
          }
          case 21524: {
            if (!stream.tty) return -59;
            return 0;
          }
          default:
            return -28;
        }
      } catch (e2) {
        if (typeof FS == "undefined" || !(e2 instanceof FS.ErrnoError)) throw e2;
        return -e2.errno;
      }
    }
    function ___syscall_openat(dirfd, path, flags, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        path = SYSCALLS.getStr(path);
        path = SYSCALLS.calculateAt(dirfd, path);
        var mode = varargs ? SYSCALLS.get() : 0;
        return FS.open(path, flags, mode).fd;
      } catch (e2) {
        if (typeof FS == "undefined" || !(e2 instanceof FS.ErrnoError)) throw e2;
        return -e2.errno;
      }
    }
    function __emscripten_throw_longjmp() {
      throw Infinity;
    }
    function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.copyWithin(dest, src, src + num);
    }
    function getHeapMax() {
      return 2147483648;
    }
    function emscripten_realloc_buffer(size) {
      try {
        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);
        updateGlobalBufferAndViews(wasmMemory.buffer);
        return 1;
      } catch (e2) {
      }
    }
    function _emscripten_resize_heap(requestedSize) {
      var oldSize = HEAPU8.length;
      requestedSize = requestedSize >>> 0;
      var maxHeapSize = getHeapMax();
      if (requestedSize > maxHeapSize) {
        return false;
      }
      let alignUp = (x2, multiple) => x2 + (multiple - x2 % multiple) % multiple;
      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);
        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));
        var replacement = emscripten_realloc_buffer(newSize);
        if (replacement) {
          return true;
        }
      }
      return false;
    }
    function _proc_exit(code) {
      EXITSTATUS = code;
      if (!keepRuntimeAlive()) {
        if (Module3["onExit"]) Module3["onExit"](code);
        ABORT = true;
      }
      quit_(code, new ExitStatus(code));
    }
    function exitJS(status, implicit) {
      EXITSTATUS = status;
      _proc_exit(status);
    }
    var _exit = exitJS;
    function _fd_close(fd) {
      try {
        var stream = SYSCALLS.getStreamFromFD(fd);
        FS.close(stream);
        return 0;
      } catch (e2) {
        if (typeof FS == "undefined" || !(e2 instanceof FS.ErrnoError)) throw e2;
        return e2.errno;
      }
    }
    function doReadv(stream, iov, iovcnt, offset) {
      var ret = 0;
      for (var i3 = 0; i3 < iovcnt; i3++) {
        var ptr = HEAPU32[iov >> 2];
        var len = HEAPU32[iov + 4 >> 2];
        iov += 8;
        var curr = FS.read(stream, HEAP8, ptr, len, offset);
        if (curr < 0) return -1;
        ret += curr;
        if (curr < len) break;
      }
      return ret;
    }
    function _fd_read(fd, iov, iovcnt, pnum) {
      try {
        var stream = SYSCALLS.getStreamFromFD(fd);
        var num = doReadv(stream, iov, iovcnt);
        HEAPU32[pnum >> 2] = num;
        return 0;
      } catch (e2) {
        if (typeof FS == "undefined" || !(e2 instanceof FS.ErrnoError)) throw e2;
        return e2.errno;
      }
    }
    function convertI32PairToI53Checked(lo, hi) {
      return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;
    }
    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
      try {
        var offset = convertI32PairToI53Checked(offset_low, offset_high);
        if (isNaN(offset)) return 61;
        var stream = SYSCALLS.getStreamFromFD(fd);
        FS.llseek(stream, offset, whence);
        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];
        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
        return 0;
      } catch (e2) {
        if (typeof FS == "undefined" || !(e2 instanceof FS.ErrnoError)) throw e2;
        return e2.errno;
      }
    }
    function doWritev(stream, iov, iovcnt, offset) {
      var ret = 0;
      for (var i3 = 0; i3 < iovcnt; i3++) {
        var ptr = HEAPU32[iov >> 2];
        var len = HEAPU32[iov + 4 >> 2];
        iov += 8;
        var curr = FS.write(stream, HEAP8, ptr, len, offset);
        if (curr < 0) return -1;
        ret += curr;
      }
      return ret;
    }
    function _fd_write(fd, iov, iovcnt, pnum) {
      try {
        var stream = SYSCALLS.getStreamFromFD(fd);
        var num = doWritev(stream, iov, iovcnt);
        HEAPU32[pnum >> 2] = num;
        return 0;
      } catch (e2) {
        if (typeof FS == "undefined" || !(e2 instanceof FS.ErrnoError)) throw e2;
        return e2.errno;
      }
    }
    function _system(command) {
      if (!command) return 0;
      setErrNo(52);
      return -1;
    }
    function getCFunc(ident) {
      var func = Module3["_" + ident];
      return func;
    }
    function ccall(ident, returnType, argTypes, args, opts) {
      var toC = { "string": (str) => {
        var ret2 = 0;
        if (str !== null && str !== void 0 && str !== 0) {
          var len = (str.length << 2) + 1;
          ret2 = stackAlloc(len);
          stringToUTF8(str, ret2, len);
        }
        return ret2;
      }, "array": (arr) => {
        var ret2 = stackAlloc(arr.length);
        writeArrayToMemory(arr, ret2);
        return ret2;
      } };
      function convertReturnValue(ret2) {
        if (returnType === "string") {
          return UTF8ToString(ret2);
        }
        if (returnType === "boolean") return Boolean(ret2);
        return ret2;
      }
      var func = getCFunc(ident);
      var cArgs = [];
      var stack = 0;
      if (args) {
        for (var i3 = 0; i3 < args.length; i3++) {
          var converter = toC[argTypes[i3]];
          if (converter) {
            if (stack === 0) stack = stackSave();
            cArgs[i3] = converter(args[i3]);
          } else {
            cArgs[i3] = args[i3];
          }
        }
      }
      var ret = func.apply(null, cArgs);
      function onDone(ret2) {
        if (stack !== 0) stackRestore(stack);
        return convertReturnValue(ret2);
      }
      ret = onDone(ret);
      return ret;
    }
    function cwrap(ident, returnType, argTypes, opts) {
      argTypes = argTypes || [];
      var numericArgs = argTypes.every((type) => type === "number" || type === "boolean");
      var numericRet = returnType !== "string";
      if (numericRet && numericArgs && !opts) {
        return getCFunc(ident);
      }
      return function() {
        return ccall(ident, returnType, argTypes, arguments, opts);
      };
    }
    var FSNode = function(parent, name, mode, rdev) {
      if (!parent) {
        parent = this;
      }
      this.parent = parent;
      this.mount = parent.mount;
      this.mounted = null;
      this.id = FS.nextInode++;
      this.name = name;
      this.mode = mode;
      this.node_ops = {};
      this.stream_ops = {};
      this.rdev = rdev;
    };
    var readMode = 292 | 73;
    var writeMode = 146;
    Object.defineProperties(FSNode.prototype, { read: { get: function() {
      return (this.mode & readMode) === readMode;
    }, set: function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
    } }, write: { get: function() {
      return (this.mode & writeMode) === writeMode;
    }, set: function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
    } }, isFolder: { get: function() {
      return FS.isDir(this.mode);
    } }, isDevice: { get: function() {
      return FS.isChrdev(this.mode);
    } } });
    FS.FSNode = FSNode;
    FS.staticInit();
    var asmLibraryArg = { "a": ___assert_fail, "r": ___call_sighandler, "j": ___syscall_fcntl64, "t": ___syscall_ioctl, "u": ___syscall_openat, "o": __emscripten_throw_longjmp, "v": _emscripten_memcpy_big, "p": _emscripten_resize_heap, "w": _exit, "h": _fd_close, "s": _fd_read, "n": _fd_seek, "i": _fd_write, "d": invoke_d, "b": invoke_i, "l": invoke_iii, "k": invoke_iiii, "e": invoke_iiiiiii, "g": invoke_iiiiiiiii, "c": invoke_vi, "f": invoke_vii, "m": invoke_viii, "q": _system };
    var asm = createWasm();
    var ___wasm_call_ctors = Module3["___wasm_call_ctors"] = function() {
      return (___wasm_call_ctors = Module3["___wasm_call_ctors"] = Module3["asm"]["y"]).apply(null, arguments);
    };
    var _malloc = Module3["_malloc"] = function() {
      return (_malloc = Module3["_malloc"] = Module3["asm"]["A"]).apply(null, arguments);
    };
    var _METIS_PartGraphRecursive = Module3["_METIS_PartGraphRecursive"] = function() {
      return (_METIS_PartGraphRecursive = Module3["_METIS_PartGraphRecursive"] = Module3["asm"]["B"]).apply(null, arguments);
    };
    var _METIS_PartGraphKway = Module3["_METIS_PartGraphKway"] = function() {
      return (_METIS_PartGraphKway = Module3["_METIS_PartGraphKway"] = Module3["asm"]["C"]).apply(null, arguments);
    };
    var ___errno_location = Module3["___errno_location"] = function() {
      return (___errno_location = Module3["___errno_location"] = Module3["asm"]["D"]).apply(null, arguments);
    };
    var _setThrew = Module3["_setThrew"] = function() {
      return (_setThrew = Module3["_setThrew"] = Module3["asm"]["E"]).apply(null, arguments);
    };
    var stackSave = Module3["stackSave"] = function() {
      return (stackSave = Module3["stackSave"] = Module3["asm"]["F"]).apply(null, arguments);
    };
    var stackRestore = Module3["stackRestore"] = function() {
      return (stackRestore = Module3["stackRestore"] = Module3["asm"]["G"]).apply(null, arguments);
    };
    var stackAlloc = Module3["stackAlloc"] = function() {
      return (stackAlloc = Module3["stackAlloc"] = Module3["asm"]["H"]).apply(null, arguments);
    };
    function invoke_i(index) {
      var sp = stackSave();
      try {
        return getWasmTableEntry(index)();
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
      var sp = stackSave();
      try {
        return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_viii(index, a1, a2, a3) {
      var sp = stackSave();
      try {
        getWasmTableEntry(index)(a1, a2, a3);
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
      var sp = stackSave();
      try {
        return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_vii(index, a1, a2) {
      var sp = stackSave();
      try {
        getWasmTableEntry(index)(a1, a2);
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_iii(index, a1, a2) {
      var sp = stackSave();
      try {
        return getWasmTableEntry(index)(a1, a2);
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_vi(index, a1) {
      var sp = stackSave();
      try {
        getWasmTableEntry(index)(a1);
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_d(index) {
      var sp = stackSave();
      try {
        return getWasmTableEntry(index)();
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    function invoke_iiii(index, a1, a2, a3) {
      var sp = stackSave();
      try {
        return getWasmTableEntry(index)(a1, a2, a3);
      } catch (e2) {
        stackRestore(sp);
        if (e2 !== e2 + 0) throw e2;
        _setThrew(1, 0);
      }
    }
    Module3["ccall"] = ccall;
    Module3["cwrap"] = cwrap;
    var calledRun;
    dependenciesFulfilled = function runCaller() {
      if (!calledRun) run();
      if (!calledRun) dependenciesFulfilled = runCaller;
    };
    function run(args) {
      args = args || arguments_;
      if (runDependencies > 0) {
        return;
      }
      preRun();
      if (runDependencies > 0) {
        return;
      }
      function doRun() {
        if (calledRun) return;
        calledRun = true;
        Module3["calledRun"] = true;
        if (ABORT) return;
        initRuntime();
        readyPromiseResolve(Module3);
        if (Module3["onRuntimeInitialized"]) Module3["onRuntimeInitialized"]();
        postRun();
      }
      if (Module3["setStatus"]) {
        Module3["setStatus"]("Running...");
        setTimeout(function() {
          setTimeout(function() {
            Module3["setStatus"]("");
          }, 1);
          doRun();
        }, 1);
      } else {
        doRun();
      }
    }
    if (Module3["preInit"]) {
      if (typeof Module3["preInit"] == "function") Module3["preInit"] = [Module3["preInit"]];
      while (Module3["preInit"].length > 0) {
        Module3["preInit"].pop()();
      }
    }
    run();
    return Module3.ready;
  };
})();
var Metis_default = Module2;

// src/plugins/meshlets/Metis.ts
var Metis = class _Metis {
  static METIS;
  static isLoaded = false;
  static async load() {
    if (!_Metis.METIS) {
      _Metis.METIS = await Metis_default();
      this.isLoaded = true;
    }
  }
  static partition(groups, nparts) {
    if (!this.isLoaded) throw Error("Metis library not loaded");
    function _prepare_graph(adjacency) {
      function assert(condition) {
        if (!condition) throw Error("assert");
      }
      let xadj = [0];
      let adjncy = [];
      for (let i3 = 0; i3 < adjacency.length; i3++) {
        let adj = adjacency[i3];
        if (adj !== null && adj.length) {
          assert(Math.max(...adj) < adjacency.length);
        }
        adjncy.push(...adj);
        xadj.push(adjncy.length);
      }
      return [xadj, adjncy];
    }
    const [_xadj, _adjncy] = _prepare_graph(groups);
    const objval = new WASMPointer(new Uint32Array(1), "out");
    const parts = new WASMPointer(new Uint32Array(_xadj.length - 1), "out");
    const options_array = new Int32Array(40);
    options_array.fill(-1);
    options_array[16 /* METIS_OPTION_UFACTOR */] = 200;
    WASMHelper.call(
      _Metis.METIS,
      "METIS_PartGraphKway",
      "number",
      new WASMPointer(new Int32Array([_xadj.length - 1])),
      // nvtxs
      new WASMPointer(new Int32Array([1])),
      // ncon
      new WASMPointer(new Int32Array(_xadj)),
      // xadj
      new WASMPointer(new Int32Array(_adjncy)),
      // adjncy
      null,
      // vwgt
      null,
      // vsize
      null,
      // adjwgt
      new WASMPointer(new Int32Array([nparts])),
      // nparts
      null,
      // tpwgts
      null,
      // ubvec
      new WASMPointer(options_array),
      // options
      objval,
      // objval
      parts
      // part
    );
    const part_num = Math.max(...parts.data);
    const parts_out = [];
    for (let i3 = 0; i3 <= part_num; i3++) {
      const part = [];
      for (let j2 = 0; j2 < parts.data.length; j2++) {
        if (parts.data[j2] === i3) {
          part.push(j2);
        }
      }
      if (part.length > 0) parts_out.push(part);
    }
    return parts_out;
  }
  static rebuildMeshletsFromGroupIndices(meshlets, groups) {
    let groupedMeshlets = [];
    for (let i3 = 0; i3 < groups.length; i3++) {
      if (!groupedMeshlets[i3]) groupedMeshlets[i3] = [];
      for (let j2 = 0; j2 < groups[i3].length; j2++) {
        const meshletId = groups[i3][j2];
        const meshlet = meshlets[meshletId];
        groupedMeshlets[i3].push(meshlet);
      }
    }
    return groupedMeshlets;
  }
  static group(adj, nparts) {
    const groups = this.partition(adj, nparts);
    return groups;
  }
  // METIS_API(int) METIS_PartGraphRecursive(idx_t *nvtxs, idx_t *ncon, idx_t *xadj, 
  //     idx_t *adjncy, idx_t *vwgt, idx_t *vsize, idx_t *adjwgt, 
  //     idx_t *nparts, real_t *tpwgts, real_t *ubvec, idx_t *options, 
  //     idx_t *edgecut, idx_t *part);
  static METIS_PartGraphRecursive(nvtxs, ncon, xadj, adjncy, vwgt, vsize, adjwgt, nparts, tpwgts, ubvec, options, edgecut, part) {
    const parts = new WASMPointer(new Int32Array([...part]), "out");
    const r2 = WASMHelper.call(
      _Metis.METIS,
      "METIS_PartGraphRecursive",
      "number",
      nvtxs ? new WASMPointer(new Int32Array([nvtxs])) : null,
      // nvtxs
      ncon ? new WASMPointer(new Int32Array([ncon])) : null,
      // ncon
      xadj ? new WASMPointer(new Int32Array([...xadj])) : null,
      // xadj
      adjncy ? new WASMPointer(new Int32Array([...adjncy])) : null,
      // adjncy
      vwgt ? new WASMPointer(new Int32Array([vwgt])) : null,
      // vwgt
      vsize ? new WASMPointer(new Int32Array([vsize])) : null,
      // vsize
      adjwgt ? new WASMPointer(new Int32Array([...adjwgt])) : null,
      // adjwgt
      nparts ? new WASMPointer(new Int32Array([nparts])) : null,
      // nparts
      tpwgts ? new WASMPointer(new Float32Array([...tpwgts])) : null,
      // tpwgts
      ubvec ? new WASMPointer(new Int32Array([ubvec])) : null,
      // ubvec
      options ? new WASMPointer(new Int32Array([...options])) : null,
      // options
      edgecut ? new WASMPointer(new Int32Array([edgecut])) : null,
      // objval
      parts
      // part
    );
    for (let i3 = 0; i3 < parts.data.length; i3++) part[i3] = parts.data[i3];
    return r2;
  }
};

// src/plugins/meshlets/utils/MeshletCreator.ts
var MeshletCreator = class _MeshletCreator {
  static cone_weight = 0;
  static buildMeshletsFromBuildOutput(vertices, output) {
    let meshlets = [];
    for (let i3 = 0; i3 < output.meshlets_count; i3++) {
      const meshlet = output.meshlets_result[i3];
      let meshlet_positions = [];
      let meshlet_indices = [];
      for (let v2 = 0; v2 < meshlet.vertex_count; ++v2) {
        const o2 = attribute_size * output.meshlet_vertices_result[meshlet.vertex_offset + v2];
        const vx = vertices[o2 + 0];
        const vy = vertices[o2 + 1];
        const vz = vertices[o2 + 2];
        const nx = vertices[o2 + 3];
        const ny = vertices[o2 + 4];
        const nz = vertices[o2 + 5];
        const uvx = vertices[o2 + 6];
        const uvy = vertices[o2 + 7];
        meshlet_positions.push(vx, vy, vz);
        if (attribute_size === 8) {
          meshlet_positions.push(nx, ny, nz);
          meshlet_positions.push(uvx, uvy);
        }
      }
      for (let t2 = 0; t2 < meshlet.triangle_count; ++t2) {
        const o2 = meshlet.triangle_offset + 3 * t2;
        meshlet_indices.push(output.meshlet_triangles_result[o2 + 0]);
        meshlet_indices.push(output.meshlet_triangles_result[o2 + 1]);
        meshlet_indices.push(output.meshlet_triangles_result[o2 + 2]);
      }
      meshlets.push(new Meshlet(new Float32Array(meshlet_positions), new Uint32Array(meshlet_indices)));
    }
    return meshlets;
  }
  static build(vertices, indices, max_vertices, max_triangles) {
    const cone_weight = _MeshletCreator.cone_weight;
    const output = Meshoptimizer.meshopt_buildMeshlets(vertices, indices, max_vertices, max_triangles, cone_weight);
    const m2 = {
      meshlets_count: output.meshlets_count,
      meshlets_result: output.meshlets_result.slice(0, output.meshlets_count),
      meshlet_vertices_result: output.meshlet_vertices_result,
      meshlet_triangles_result: output.meshlet_triangles_result
    };
    const meshlets = _MeshletCreator.buildMeshletsFromBuildOutput(vertices, m2);
    return meshlets;
  }
};

// src/plugins/meshlets/utils/MeshletGrouper.ts
var MeshletGrouper = class _MeshletGrouper {
  static adjacencyList(meshlets) {
    let vertexHashToMeshletMap = /* @__PURE__ */ new Map();
    for (let i3 = 0; i3 < meshlets.length; i3++) {
      const meshlet = meshlets[i3];
      for (let j2 = 0; j2 < meshlet.vertices.length; j2 += attribute_size) {
        const hash = `${meshlet.vertices[j2 + 0].toPrecision(6)},${meshlet.vertices[j2 + 1].toPrecision(6)},${meshlet.vertices[j2 + 2].toPrecision(6)}`;
        let meshletList = vertexHashToMeshletMap.get(hash);
        if (!meshletList) meshletList = /* @__PURE__ */ new Set();
        meshletList.add(i3);
        vertexHashToMeshletMap.set(hash, meshletList);
      }
    }
    const adjacencyList = /* @__PURE__ */ new Map();
    for (let [_2, indices] of vertexHashToMeshletMap) {
      if (indices.size === 1) continue;
      for (let index of indices) {
        if (!adjacencyList.has(index)) {
          adjacencyList.set(index, /* @__PURE__ */ new Set());
        }
        for (let otherIndex of indices) {
          if (otherIndex !== index) {
            adjacencyList.get(index).add(otherIndex);
          }
        }
      }
    }
    let adjacencyListArray = new Array(meshlets.length).fill(0).map((v2) => []);
    for (let [key, adjacents] of adjacencyList) {
      if (!adjacencyListArray[key]) adjacencyListArray[key] = [];
      adjacencyListArray[key].push(...Array.from(adjacents));
    }
    return adjacencyListArray;
  }
  static rebuildMeshletsFromGroupIndices(meshlets, groups) {
    let groupedMeshlets = [];
    for (let i3 = 0; i3 < groups.length; i3++) {
      if (!groupedMeshlets[i3]) groupedMeshlets[i3] = [];
      for (let j2 = 0; j2 < groups[i3].length; j2++) {
        const meshletId = groups[i3][j2];
        const meshlet = meshlets[meshletId];
        groupedMeshlets[i3].push(meshlet);
      }
    }
    return groupedMeshlets;
  }
  static group(meshlets, nparts) {
    function split(meshlet, parts) {
      const adj = _MeshletGrouper.adjacencyList(meshlet);
      const groups = Metis.partition(adj, parts);
      return _MeshletGrouper.rebuildMeshletsFromGroupIndices(meshlet, groups);
    }
    function splitRec(input, partsNeeded) {
      if (partsNeeded === 1) {
        return [input];
      } else {
        const partsLeft = Math.ceil(partsNeeded / 2);
        const partsRight = Math.floor(partsNeeded / 2);
        const [leftInput, rightInput] = split(input, 2);
        const leftResult = splitRec(leftInput, partsLeft);
        const rightResult = splitRec(rightInput, partsRight);
        return [...leftResult, ...rightResult];
      }
    }
    console.log("CALLEDsss");
    return splitRec(meshlets, nparts);
  }
  static groupV2(meshlets, nparts) {
    const adj = _MeshletGrouper.adjacencyList(meshlets);
    let adjancecy = /* @__PURE__ */ new Map();
    for (const arr of adj) {
      for (let i3 = 0; i3 < arr.length; i3++) {
        const f2 = arr[i3];
        let adjacents = adjancecy.get(f2) || [];
        for (let j2 = i3 + 1; j2 < arr.length; j2++) {
          const t2 = arr[j2];
          if (!adjacents.includes(t2)) adjacents.push(t2);
        }
        adjancecy.set(f2, adjacents);
      }
    }
    console.log(adjancecy);
    console.log(adj);
  }
  static buildMetisAdjacencyList(vertices, indices) {
    let adjacencyList = new Array(vertices.length / attribute_size);
    for (let i3 = 0; i3 < adjacencyList.length; i3++) {
      adjacencyList[i3] = /* @__PURE__ */ new Set();
    }
    for (let i3 = 0; i3 < indices.length; i3 += 3) {
      const v1 = indices[i3];
      const v2 = indices[i3 + 1];
      const v3 = indices[i3 + 2];
      adjacencyList[v1].add(v2);
      adjacencyList[v1].add(v3);
      adjacencyList[v2].add(v1);
      adjacencyList[v2].add(v3);
      adjacencyList[v3].add(v1);
      adjacencyList[v3].add(v2);
    }
    return adjacencyList.map((set) => Array.from(set));
  }
  static partitionMeshByMetisOutput(vertices, indices, metisPartitions) {
    const attribute_size2 = 8;
    const numPartitions = metisPartitions.length;
    const vertexToPartitions = /* @__PURE__ */ new Map();
    metisPartitions.forEach((partition, index) => {
      partition.forEach((vertex) => {
        if (!vertexToPartitions.has(vertex)) {
          vertexToPartitions.set(vertex, []);
        }
        vertexToPartitions.get(vertex).push(index);
      });
    });
    const partitionedData = Array.from({ length: numPartitions }, () => ({
      vertexMap: /* @__PURE__ */ new Map(),
      vertices: [],
      indices: []
    }));
    for (let i3 = 0; i3 < indices.length; i3 += 3) {
      const v1 = indices[i3];
      const v2 = indices[i3 + 1];
      const v3 = indices[i3 + 2];
      const v1Parts = vertexToPartitions.get(v1);
      const v2Parts = vertexToPartitions.get(v2);
      const v3Parts = vertexToPartitions.get(v3);
      const commonPartitions = v1Parts.filter(
        (part) => v2Parts.includes(part) && v3Parts.includes(part)
      );
      let assignedPartition;
      if (commonPartitions.length > 0) {
        assignedPartition = commonPartitions[0];
      } else {
        const vertexPartitions = [
          { vertex: v1, partitions: v1Parts },
          { vertex: v2, partitions: v2Parts },
          { vertex: v3, partitions: v3Parts }
        ];
        vertexPartitions.sort((a2, b2) => a2.vertex - b2.vertex);
        assignedPartition = vertexPartitions[0].partitions[0];
      }
      const partData = partitionedData[assignedPartition];
      [v1, v2, v3].forEach((vertex) => {
        if (!partData.vertexMap.has(vertex)) {
          const newVertexIndex = partData.vertices.length / attribute_size2;
          partData.vertexMap.set(vertex, newVertexIndex);
          for (let j2 = 0; j2 < attribute_size2; j2++) {
            partData.vertices.push(vertices[vertex * attribute_size2 + j2]);
          }
        }
      });
      partData.indices.push(
        partData.vertexMap.get(v1),
        partData.vertexMap.get(v2),
        partData.vertexMap.get(v3)
      );
    }
    const meshlets = partitionedData.filter((part) => part.vertices.length > 0).map((part) => new Meshlet(new Float32Array(part.vertices), new Uint32Array(part.indices)));
    return meshlets;
  }
  static split(meshlet, nparts) {
    function removeSelfLoops(adjacencyList) {
      return adjacencyList.map((neighbors) => {
        return neighbors.filter((neighbor) => neighbor !== adjacencyList.indexOf(neighbors));
      });
    }
    const adj = this.buildMetisAdjacencyList(meshlet.vertices, meshlet.indices);
    const groups = Metis.partition(removeSelfLoops(adj), nparts);
    return this.partitionMeshByMetisOutput(meshlet.vertices, meshlet.indices, groups);
  }
};

// src/plugins/meshlets/utils/MeshletMerger.ts
var Vertex = class {
  position;
  normal;
  uv;
  constructor(position, normal, uv) {
    this.position = position;
    this.normal = normal;
    this.uv = uv;
  }
};
var MeshletMerger = class {
  static removeDuplicateVertices(vertexData, indexData) {
    const vertexMap = /* @__PURE__ */ new Map();
    const uniqueVertices = [];
    const newIndices = [];
    var precisionPoints = 4;
    var precision = Math.pow(10, precisionPoints);
    for (let i3 = 0; i3 < indexData.length; i3++) {
      const index = indexData[i3];
      const pos = vertexData.subarray(index * attribute_size, index * attribute_size + 3);
      const norm = vertexData.subarray(index * attribute_size + 3, index * attribute_size + 6);
      const uv = vertexData.subarray(index * attribute_size + 6, index * attribute_size + 8);
      const vertex = new Vertex(Array.from(pos), Array.from(norm), Array.from(uv));
      const vertexKey = Math.round(vertex.position[0] * precision) + "_" + Math.round(vertex.position[1] * precision) + "_" + Math.round(vertex.position[2] * precision);
      if (vertexMap.has(vertexKey)) {
        newIndices.push(vertexMap.get(vertexKey));
      } else {
        const newIndex = uniqueVertices.length;
        uniqueVertices.push(vertex);
        vertexMap.set(vertexKey, newIndex);
        newIndices.push(newIndex);
      }
    }
    const newVertexData = new Float32Array(uniqueVertices.length * attribute_size);
    uniqueVertices.forEach((v2, index) => {
      newVertexData.set([...v2.position, ...v2.normal, ...v2.uv], index * attribute_size);
    });
    return {
      vertices: newVertexData,
      indices: new Uint32Array(newIndices)
    };
  }
  static merge(meshlets) {
    const vertices = [];
    const indices = [];
    let indexOffset = 0;
    for (let i3 = 0; i3 < meshlets.length; ++i3) {
      const indices2 = meshlets[i3].indices;
      for (let j2 = 0; j2 < indices2.length; j2++) {
        indices.push(indices2[j2] + indexOffset);
      }
      indexOffset += meshlets[i3].vertices.length / attribute_size;
    }
    for (let i3 = 0; i3 < meshlets.length; ++i3) vertices.push(...meshlets[i3].vertices);
    const { vertices: newVertices, indices: newIndices } = this.removeDuplicateVertices(new Float32Array(vertices), new Uint32Array(indices));
    return new Meshlet(newVertices, newIndices);
  }
  static mergeV2(meshlets) {
    let vertices = [];
    let indices = [];
    let indicesOffset = 0;
    for (const meshlet of meshlets) {
      for (const vertex of meshlet.vertices) vertices.push(vertex);
      for (const index of meshlet.indices) indices.push(index + indicesOffset);
      indicesOffset += meshlet.vertices.length / 3;
    }
    return new Meshlet(new Float32Array(vertices), new Uint32Array(indices));
  }
};

// src/plugins/meshlets/utils/MeshletBorder.ts
var MeshletBorder = class {
  // Returns an array with the shared vertices between meshes
  static GetSharedVertices(meshes, attribute_size2) {
    function VertexEncode(vertex) {
      return `${vertex[0].toPrecision(4)},${vertex[1].toPrecision(4)},${vertex[2].toPrecision(4)}`;
    }
    function VertexDecode(vertexKey) {
      const vertex = vertexKey.split(",");
      return [parseFloat(vertex[0]), parseFloat(vertex[1]), parseFloat(vertex[2])];
    }
    let vertexCountMap = /* @__PURE__ */ new Map();
    for (const mesh of meshes) {
      for (let i3 = 0; i3 < mesh.vertices.length; i3 += attribute_size2) {
        const vKey = VertexEncode([mesh.vertices[i3 + 0], mesh.vertices[i3 + 1], mesh.vertices[i3 + 2]]);
        let vCounts = vertexCountMap.get(vKey) || 0;
        vertexCountMap.set(vKey, ++vCounts);
      }
    }
    let sharedVertices = [];
    for (const [key, vCount] of vertexCountMap) {
      if (vCount > 1) {
        sharedVertices.push(VertexDecode(key));
      }
    }
    return sharedVertices;
  }
  static getVertexIndicesForVertexKeys(vertexKeys, vertices, attribute_size2) {
    let matches = [];
    for (let i3 = 0; i3 < vertexKeys.length; i3++) {
      const v2 = vertexKeys[i3];
      for (let j2 = 0; j2 < vertices.length; j2 += attribute_size2) {
        const EPS = 1e-3;
        if (Math.abs(v2[0] - vertices[j2 + 0]) < EPS && Math.abs(v2[1] - vertices[j2 + 1]) < EPS && Math.abs(v2[2] - vertices[j2 + 2]) < EPS) {
          matches.push(j2);
        }
      }
    }
    return matches;
  }
  // For a given mesh returns an array with locked vertices that match sharedVertices
  static SharedVerticesToLockedArray(sharedVertices, mesh, attribute_size2) {
    const mergedGroupLockedVertexIds = this.getVertexIndicesForVertexKeys(sharedVertices, mesh.vertices, attribute_size2);
    const lockedArray = new Uint8Array(mesh.vertices.length).fill(0);
    for (const lockedVertex of mergedGroupLockedVertexIds) {
      lockedArray[lockedVertex] = 1;
    }
    return lockedArray;
  }
};

// src/plugins/meshlets/Meshletizer.ts
var Meshletizer = class _Meshletizer {
  static MaxLOD = 25;
  static step(meshlets, lod, previousMeshlets) {
    if (meshlets.length === 1 && meshlets[0].vertices.length < Meshlet.max_triangles * 8) return meshlets;
    let nparts = Math.ceil(meshlets.length / 8);
    if (nparts > 8) nparts = 8;
    let grouped = [meshlets];
    if (nparts > 1) {
      grouped = MeshletGrouper.group(meshlets, nparts);
    }
    let splitOutputs = [];
    for (let i3 = 0; i3 < grouped.length; i3++) {
      const group = grouped[i3];
      const mergedGroup = MeshletMerger.merge(group);
      const cleanedMergedGroup = Meshoptimizer.clean(mergedGroup);
      const tLod = (lod + 1) / _Meshletizer.MaxLOD;
      const targetError = 0.1 * tLod + 0.01 * (1 - tLod);
      let target_count = cleanedMergedGroup.indices.length / 2;
      const sharedVertices = MeshletBorder.GetSharedVertices(group, attribute_size);
      const lockedArray = MeshletBorder.SharedVerticesToLockedArray(sharedVertices, mergedGroup, attribute_size);
      const simplified = Meshoptimizer.meshopt_simplifyWithAttributes(mergedGroup, lockedArray, target_count, targetError);
      const localScale = Meshoptimizer.meshopt_simplifyScale(simplified.meshlet);
      let meshSpaceError = simplified.error * localScale;
      let childrenError = 0;
      for (let m2 of group) {
        const previousMeshlet = previousMeshlets.get(m2.id);
        if (!previousMeshlet) throw Error("Could not find previous meshler");
        childrenError = Math.max(childrenError, previousMeshlet.clusterError);
      }
      meshSpaceError += childrenError;
      let splits = MeshletCreator.build(simplified.meshlet.vertices, simplified.meshlet.indices, Meshlet.max_vertices, Meshlet.max_triangles);
      for (let split of splits) {
        split.clusterError = meshSpaceError;
        split.boundingVolume = simplified.meshlet.boundingVolume;
        split.lod = lod + 1;
        previousMeshlets.set(split.id, split);
        splitOutputs.push(split);
        split.parents.push(...group);
      }
      for (let m2 of group) {
        m2.children.push(...splits);
        const previousMeshlet = previousMeshlets.get(m2.id);
        if (!previousMeshlet) throw Error("Could not find previous meshlet");
        previousMeshlet.parentError = meshSpaceError;
        previousMeshlet.parentBoundingVolume = simplified.meshlet.boundingVolume;
      }
    }
    return splitOutputs;
  }
  static async Build(vertices, indices) {
    await Meshoptimizer.load();
    await Metis.load();
    const meshlets = MeshletCreator.build(vertices, indices, Meshlet.max_vertices, Meshlet.max_triangles);
    console.log(`starting with ${meshlets.length} meshlets`);
    let inputs = meshlets;
    let rootMeshlet = null;
    let previousMeshlets = /* @__PURE__ */ new Map();
    for (let m2 of meshlets) previousMeshlets.set(m2.id, m2);
    for (let lod = 0; lod < _Meshletizer.MaxLOD; lod++) {
      const outputs = this.step(inputs, lod, previousMeshlets);
      const inputTriangleArray = inputs.map((m2) => m2.indices.length / 3);
      const outputTriangleArray = outputs.map((m2) => m2.indices.length / 3);
      const inputTriangleCount = inputTriangleArray.reduce((a2, b2) => a2 + b2);
      const outputTriangleCount = outputTriangleArray.reduce((a2, b2) => a2 + b2);
      console.log(`LOD: ${lod}: input: [meshlets: ${inputTriangleArray.length}, triangles: ${inputTriangleCount}] -> output: [meshlets: ${outputTriangleArray.length}, triangles: ${outputTriangleCount}]`);
      if (outputTriangleCount >= inputTriangleCount) {
        for (const input of inputs) {
          if (input.indices.length / 3 > Meshlet.max_triangles) {
            throw Error(`Output meshlet triangle count ${inputTriangleCount} >= input triangle count ${inputTriangleCount}`);
          }
        }
        break;
      }
      inputs = outputs;
      if (outputs.length === 1 && outputs[0].indices.length / 3 <= 128) {
        console.log("WE are done at lod", lod);
        rootMeshlet = outputs[0];
        rootMeshlet.lod = lod + 1;
        rootMeshlet.parentBoundingVolume = rootMeshlet.boundingVolume;
        break;
      }
    }
    if (rootMeshlet === null) throw Error("Root meshlet is invalid!");
    let meshletsOut = [];
    for (const [_2, meshlet] of previousMeshlets) {
      meshletsOut.push(meshlet);
    }
    return meshletsOut;
  }
};

// src/plugins/meshlets/MeshletEvents.ts
var MeshletEvents = class {
  static Updated = (meshlet) => {
  };
};

// src/plugins/meshlets/MeshletMesh.ts
var meshletsCache = /* @__PURE__ */ new Map();
var MeshletMesh = class extends Mesh {
  meshlets = [];
  Start() {
    EventSystemLocal.on(TransformEvents.Updated, this.transform, () => {
      EventSystem.emit(MeshletEvents.Updated, this);
    });
  }
  async SetGeometry(geometry, clusterize = true) {
    this.geometry = geometry;
    let cached = meshletsCache.get(geometry);
    if (cached) {
      cached.instanceCount++;
      meshletsCache.set(geometry, cached);
      this.meshlets.push(...cached.meshlets);
      return;
    }
    const pa = geometry.attributes.get("position");
    const na = geometry.attributes.get("normal");
    const ua = geometry.attributes.get("uv");
    const ia = geometry.index;
    if (!pa || !na || !ua || !ia) throw Error("To create meshlets need indices, position, normal and uv attributes");
    const p2 = pa.array;
    const n2 = na.array;
    const u2 = ua.array;
    const indices = ia.array;
    const interleavedBufferAttribute = InterleavedVertexAttribute.fromArrays([p2, n2, u2], [3, 3, 2]);
    const interleavedVertices = interleavedBufferAttribute.array;
    await Meshoptimizer.load();
    if (indices.length / 3 <= Meshlet.max_triangles) {
      this.meshlets.push(new Meshlet(interleavedVertices, indices));
    } else {
      if (clusterize) {
        const allMeshlets = await Meshletizer.Build(interleavedVertices, indices);
        this.meshlets = allMeshlets;
      } else {
        const allMeshlets = MeshletCreator.build(interleavedVertices, indices, Meshlet.max_vertices, Meshlet.max_triangles);
        this.meshlets = allMeshlets;
      }
    }
    meshletsCache.set(geometry, { meshlets: this.meshlets, instanceCount: 0 });
  }
};

// src/renderer/Material.ts
var Material = class {
  shader;
  async createShader() {
    throw Error("Not implemented");
  }
};
var PBRMaterial = class extends Material {
  id = Utils.UUID();
  initialParams;
  params;
  constructor(params) {
    super();
    this.initialParams = params;
    this.params = {
      albedoColor: params?.albedoColor ? params.albedoColor : new Color(1, 1, 1, 1),
      emissiveColor: params?.emissiveColor ? params.emissiveColor : new Color(0, 0, 0, 0),
      roughness: params?.roughness ? params.roughness : 0,
      metalness: params?.metalness ? params.metalness : 0,
      albedoMap: params?.albedoMap ? params.albedoMap : void 0,
      normalMap: params?.normalMap ? params.normalMap : void 0,
      heightMap: params?.heightMap ? params.heightMap : void 0,
      metalnessMap: params?.metalnessMap ? params.metalnessMap : void 0,
      emissiveMap: params?.emissiveMap ? params.emissiveMap : void 0,
      aoMap: params?.aoMap ? params.aoMap : void 0,
      unlit: params?.unlit ? params.unlit : false
    };
  }
  async createShader() {
    const DEFINES = {
      USE_ALBEDO_MAP: this.initialParams?.albedoMap ? true : false,
      USE_NORMAL_MAP: this.initialParams?.normalMap ? true : false,
      USE_HEIGHT_MAP: this.initialParams?.heightMap ? true : false,
      USE_METALNESS_MAP: this.initialParams?.metalnessMap ? true : false,
      USE_EMISSIVE_MAP: this.initialParams?.emissiveMap ? true : false,
      USE_AO_MAP: this.initialParams?.aoMap ? true : false
    };
    let shaderParams = {
      code: await ShaderLoader.Draw,
      defines: DEFINES,
      colorOutputs: [
        { format: "rgba16float" },
        { format: "rgba16float" },
        { format: "rgba16float" }
      ],
      depthOutput: "depth24plus",
      attributes: {
        position: { location: 0, size: 3, type: "vec3" },
        normal: { location: 1, size: 3, type: "vec3" },
        uv: { location: 2, size: 2, type: "vec2" }
      },
      uniforms: {
        projectionMatrix: { group: 0, binding: 0, type: "storage" },
        viewMatrix: { group: 0, binding: 1, type: "storage" },
        modelMatrix: { group: 0, binding: 2, type: "storage" },
        material: { group: 0, binding: 3, type: "storage" },
        TextureSampler: { group: 0, binding: 4, type: "sampler" },
        AlbedoMap: { group: 0, binding: 5, type: "texture" },
        NormalMap: { group: 0, binding: 6, type: "texture" },
        HeightMap: { group: 0, binding: 7, type: "texture" },
        MetalnessMap: { group: 0, binding: 8, type: "texture" },
        EmissiveMap: { group: 0, binding: 9, type: "texture" },
        AOMap: { group: 0, binding: 10, type: "texture" },
        cameraPosition: { group: 0, binding: 11, type: "storage" }
      }
    };
    shaderParams = Object.assign({}, shaderParams, this.params);
    const shader = await Shader.Create(shaderParams);
    if (DEFINES.USE_ALBEDO_MAP || DEFINES.USE_NORMAL_MAP || DEFINES.USE_HEIGHT_MAP || DEFINES.USE_METALNESS_MAP || DEFINES.USE_EMISSIVE_MAP || DEFINES.USE_AO_MAP) {
      const textureSampler = TextureSampler.Create();
      shader.SetSampler("TextureSampler", textureSampler);
    }
    shader.SetArray("material", new Float32Array([
      this.params.albedoColor.r,
      this.params.albedoColor.g,
      this.params.albedoColor.b,
      this.params.albedoColor.a,
      this.params.emissiveColor.r,
      this.params.emissiveColor.g,
      this.params.emissiveColor.b,
      this.params.emissiveColor.a,
      this.params.roughness,
      this.params.metalness,
      +this.params.unlit,
      0
    ]));
    if (DEFINES.USE_ALBEDO_MAP === true && this.params.albedoMap) shader.SetTexture("AlbedoMap", this.params.albedoMap);
    if (DEFINES.USE_NORMAL_MAP === true && this.params.normalMap) shader.SetTexture("NormalMap", this.params.normalMap);
    if (DEFINES.USE_HEIGHT_MAP === true && this.params.heightMap) shader.SetTexture("HeightMap", this.params.heightMap);
    if (DEFINES.USE_METALNESS_MAP === true && this.params.metalnessMap) shader.SetTexture("MetalnessMap", this.params.metalnessMap);
    if (DEFINES.USE_EMISSIVE_MAP === true && this.params.emissiveMap) shader.SetTexture("EmissiveMap", this.params.emissiveMap);
    if (DEFINES.USE_AO_MAP === true && this.params.aoMap) shader.SetTexture("AOMap", this.params.aoMap);
    this.shader = shader;
    return shader;
  }
};

// src/plugins/meshlets/passes/PrepareSceneData.ts
var PrepareSceneData = class extends RenderPass {
  name = "PrepareSceneData";
  objectInfoBuffer;
  vertexBuffer;
  meshMaterialInfo;
  meshMatrixInfoBuffer;
  meshletInfoBuffer;
  currentMeshCount = 0;
  currentMeshletsCount = 0;
  materialIndexCache = /* @__PURE__ */ new Map();
  albedoMaps = [];
  normalMaps = [];
  heightMaps = [];
  metalnessMaps = [];
  emissiveMaps = [];
  textureMaps;
  materialMaps = /* @__PURE__ */ new Map();
  constructor() {
    super({
      outputs: [
        MeshletPassParams.indirectVertices,
        MeshletPassParams.indirectMeshInfo,
        MeshletPassParams.indirectMeshletInfo,
        MeshletPassParams.indirectObjectInfo,
        MeshletPassParams.indirectMeshMatrixInfo,
        MeshletPassParams.meshletsCount,
        MeshletPassParams.textureMaps
      ]
    });
    const bufferSize = 1024 * 1024 * 10;
    this.meshMatrixInfoBuffer = new BufferMemoryAllocator(bufferSize);
    this.meshMaterialInfo = new BufferMemoryAllocator(bufferSize);
    this.meshletInfoBuffer = new BufferMemoryAllocator(bufferSize);
    this.vertexBuffer = new BufferMemoryAllocator(bufferSize);
    this.objectInfoBuffer = new BufferMemoryAllocator(bufferSize);
    EventSystem.on(MeshletEvents.Updated, (meshlet) => {
      if (this.meshMatrixInfoBuffer.has(meshlet.id)) {
        this.meshMatrixInfoBuffer.set(meshlet.id, meshlet.transform.localToWorldMatrix.elements);
      }
    });
  }
  getVertexInfo(meshlet) {
    return meshlet.vertices_gpu;
  }
  getMeshletInfo(meshlet) {
    const bv = meshlet.boundingVolume;
    const pbv = meshlet.boundingVolume;
    return new Float32Array([
      ...meshlet.coneBounds.cone_apex.elements,
      0,
      ...meshlet.coneBounds.cone_axis.elements,
      0,
      meshlet.coneBounds.cone_cutoff,
      0,
      0,
      0,
      bv.center.x,
      bv.center.y,
      bv.center.z,
      bv.radius,
      pbv.center.x,
      pbv.center.y,
      pbv.center.z,
      pbv.radius,
      meshlet.clusterError,
      0,
      0,
      0,
      meshlet.parentError,
      0,
      0,
      0,
      meshlet.lod,
      0,
      0,
      0,
      ...meshlet.bounds.min.elements,
      0,
      ...meshlet.bounds.max.elements,
      0
    ]);
  }
  getMeshMaterialInfo(mesh) {
    let materials = mesh.GetMaterials(PBRMaterial);
    if (materials.length === 0) return null;
    if (materials.length > 1) throw Error("Multiple materials not supported");
    const material = materials[0];
    const albedoIndex = this.processMaterialMap(material.params.albedoMap, "albedo");
    const normalIndex = this.processMaterialMap(material.params.normalMap, "normal");
    const heightIndex = this.processMaterialMap(material.params.heightMap, "height");
    const metalnessIndex = this.processMaterialMap(material.params.metalnessMap, "metalness");
    const emissiveIndex = this.processMaterialMap(material.params.emissiveMap, "emissive");
    const albedoColor = material.params.albedoColor;
    const emissiveColor = material.params.emissiveColor;
    const roughness = material.params.roughness;
    const metalness = material.params.metalness;
    const unlit = material.params.unlit;
    return new Float32Array([
      albedoIndex,
      normalIndex,
      heightIndex,
      metalnessIndex,
      emissiveIndex,
      0,
      0,
      0,
      ...albedoColor.elements,
      ...emissiveColor.elements,
      roughness,
      metalness,
      +unlit,
      0
    ]);
  }
  processMaterialMap(materialMap, type) {
    if (materialMap) {
      let materialIndexCached = this.materialIndexCache.get(materialMap.id);
      if (materialIndexCached === void 0) {
        materialIndexCached = this.materialIndexCache.size;
        this.materialIndexCache.set(materialMap.id, materialIndexCached);
        if (type === "albedo") this.albedoMaps.push(materialMap);
        else if (type === "normal") this.normalMaps.push(materialMap);
        else if (type === "height") this.heightMaps.push(materialMap);
        else if (type === "metalness") this.metalnessMaps.push(materialMap);
        else if (type === "emissive") this.emissiveMaps.push(materialMap);
      }
      return materialIndexCached;
    }
    return -1;
  }
  createMaterialMap(textures, type) {
    if (textures.length === 0) return TextureArray.Create(1, 1, 1);
    const w2 = textures[0].width;
    const h2 = textures[0].height;
    let materialMap = this.materialMaps.get(type);
    if (materialMap === void 0) {
      materialMap = TextureArray.Create(w2, h2, textures.length);
      materialMap.SetActiveLayer(0);
      this.materialMaps.set(type, materialMap);
    }
    for (let i3 = 0; i3 < textures.length; i3++) {
      if (textures[i3].width !== w2 || textures[i3].height !== h2) {
        console.warn(`Creating blank texture because dimensions dont match`, w2, h2, textures[i3].width, textures[i3].height);
        const t2 = RenderTexture.Create(w2, h2);
        RendererContext.CopyTextureToTextureV2(t2, materialMap, 0, 0, [w2, h2, 1], i3);
        continue;
      }
      RendererContext.CopyTextureToTextureV2(textures[i3], materialMap, 0, 0, [w2, h2, 1], i3);
    }
    return materialMap;
  }
  execute(resources) {
    const mainCamera = Camera.mainCamera;
    const scene = mainCamera.gameObject.scene;
    const sceneMeshlets = [...scene.GetComponents(MeshletMesh)];
    if (this.currentMeshCount !== sceneMeshlets.length) {
      const meshlets = [];
      for (const meshlet of sceneMeshlets) {
        for (const geometry of meshlet.meshlets) {
          meshlets.push({ mesh: meshlet, geometry });
        }
      }
      const indexedCache = /* @__PURE__ */ new Map();
      const meshMatrixCache = /* @__PURE__ */ new Map();
      const meshMaterialCache = /* @__PURE__ */ new Map();
      for (const mesh of sceneMeshlets) {
        let materialIndex = -1;
        for (const material of mesh.GetMaterials(PBRMaterial)) {
          if (!this.meshMaterialInfo.has(material.id)) {
            const meshMaterialInfo = this.getMeshMaterialInfo(mesh);
            if (meshMaterialInfo !== null) {
              this.meshMaterialInfo.set(material.id, meshMaterialInfo);
              meshMaterialCache.set(material.id, meshMaterialCache.size);
            }
          }
          let mc = meshMaterialCache.get(material.id);
          if (mc !== void 0) materialIndex = mc;
        }
        if (!this.meshMatrixInfoBuffer.has(mesh.id)) {
          this.meshMatrixInfoBuffer.set(mesh.id, mesh.transform.localToWorldMatrix.elements);
        }
        let meshMatrixIndex = meshMatrixCache.get(mesh.id);
        if (meshMatrixIndex === void 0) {
          meshMatrixIndex = meshMatrixCache.size;
          meshMatrixCache.set(mesh.id, meshMatrixIndex);
        }
        for (const meshlet of mesh.meshlets) {
          if (!this.meshletInfoBuffer.has(meshlet.id)) this.meshletInfoBuffer.set(meshlet.id, this.getMeshletInfo(meshlet));
          if (!this.vertexBuffer.has(meshlet.id)) this.vertexBuffer.set(meshlet.id, this.getVertexInfo(meshlet));
          let geometryIndex = indexedCache.get(meshlet.crc);
          if (geometryIndex === void 0) {
            geometryIndex = indexedCache.size;
            indexedCache.set(meshlet.crc, geometryIndex);
          }
          this.objectInfoBuffer.set(`${mesh.id}-${meshlet.id}`, new Float32Array([meshMatrixIndex, geometryIndex, materialIndex, 0]));
        }
      }
      this.textureMaps = {
        albedo: this.createMaterialMap(this.albedoMaps, "albedo"),
        normal: this.createMaterialMap(this.normalMaps, "normal"),
        height: this.createMaterialMap(this.heightMaps, "height"),
        metalness: this.createMaterialMap(this.metalnessMaps, "metalness"),
        emissive: this.createMaterialMap(this.emissiveMaps, "emissive")
      };
      this.currentMeshCount = sceneMeshlets.length;
      this.currentMeshletsCount = meshlets.length;
      Debugger.SetTotalMeshlets(meshlets.length);
    }
    resources.setResource(MeshletPassParams.indirectVertices, this.vertexBuffer.getBuffer());
    resources.setResource(MeshletPassParams.indirectMeshInfo, this.meshMaterialInfo.getBuffer());
    resources.setResource(MeshletPassParams.indirectMeshletInfo, this.meshletInfoBuffer.getBuffer());
    resources.setResource(MeshletPassParams.indirectObjectInfo, this.objectInfoBuffer.getBuffer());
    resources.setResource(MeshletPassParams.indirectMeshMatrixInfo, this.meshMatrixInfoBuffer.getBuffer());
    resources.setResource(MeshletPassParams.meshletsCount, this.currentMeshletsCount);
    resources.setResource(MeshletPassParams.textureMaps, this.textureMaps);
  }
};

// src/plugins/meshlets/passes/MeshletDraw.ts
var MeshletPassParams = {
  indirectVertices: "indirectVertices",
  indirectMeshInfo: "indirectMeshInfo",
  indirectMeshletInfo: "indirectMeshletInfo",
  indirectObjectInfo: "indirectObjectInfo",
  indirectMeshMatrixInfo: "indirectMeshMatrixInfo",
  indirectInstanceInfo: "indirectInstanceInfo",
  indirectDrawBuffer: "indirectDrawBuffer",
  meshletsCount: "meshletsCount",
  textureMaps: "textureMaps",
  isCullingPrepass: "isCullingPrepass"
};
var MeshletDraw = class extends RenderPass {
  name = "MeshletDraw";
  prepareSceneData;
  cullingPass;
  HiZ;
  indirectRender;
  constructor() {
    super({
      inputs: [
        PassParams.depthTexture,
        PassParams.depthTexturePyramid,
        PassParams.DebugSettings,
        PassParams.depthTexture,
        PassParams.GBufferAlbedo,
        PassParams.GBufferNormal,
        PassParams.GBufferERMO,
        PassParams.GBufferDepth
      ],
      outputs: []
    });
  }
  async init(resources) {
    this.prepareSceneData = new PrepareSceneData();
    this.cullingPass = new CullingPass();
    this.HiZ = new HiZPass();
    this.indirectRender = new IndirectGBufferPass();
    await this.prepareSceneData.init(resources);
    await this.cullingPass.init(resources);
    await this.HiZ.init(resources);
    await this.indirectRender.init(resources);
  }
  execute(resources) {
    this.prepareSceneData.execute(resources);
    this.cullingPass.execute(resources);
    this.indirectRender.execute(resources);
    const depthTexture = resources.getResource(PassParams.depthTexture);
    const outputDepthTexturePyramid = PassParams.depthTexturePyramid;
    this.HiZ.execute(resources, depthTexture, outputDepthTexturePyramid);
    this.cullingPass.execute(resources);
    this.indirectRender.execute(resources);
  }
};

// src/renderer/RenderingPipeline.ts
var PassParams = {
  DebugSettings: "DebugSettings",
  MainCamera: "MainCamera",
  depthTexture: "depthTexture",
  depthTexturePyramid: "depthTexturePyramid",
  GBufferAlbedo: "GBufferAlbedo",
  GBufferNormal: "GBufferNormal",
  GBufferERMO: "GBufferERMO",
  GBufferDepth: "GBufferDepth",
  ShadowPassDepth: "ShadowPassDepth",
  LightingPassOutput: "LightingPassOutput"
};
var RenderingPipeline = class {
  renderer;
  renderGraph;
  frame = 0;
  previousTime = 0;
  constructor(renderer) {
    this.renderer = renderer;
    const passes = {
      PrepareDeferredRender: new PrepareGBuffers(),
      meshletDrawPass: new MeshletDraw(),
      GBufferPass: new DeferredGBufferPass(),
      DeferredLightingPass: new DeferredLightingPass(),
      OutputPass: new TextureViewer()
    };
    this.renderGraph = new RenderGraph();
    for (const pass of Object.keys(passes)) {
      this.renderGraph.addPass(passes[pass]);
    }
    this.renderGraph.init();
  }
  Render(scene) {
    Renderer.BeginRenderFrame();
    this.renderGraph.execute();
    Renderer.EndRenderFrame();
    WEBGPUTimestampQuery.GetResult().then((frameTimes) => {
      if (frameTimes) {
        for (const [name, time] of frameTimes) {
          Debugger.SetPassTime(name, time);
        }
      }
    });
    const currentTime = performance.now();
    const elapsed = currentTime - this.previousTime;
    this.previousTime = currentTime;
    Debugger.SetFPS(1 / elapsed * 1e3);
    this.frame++;
  }
};

// src/Scene.ts
var Scene = class {
  renderer;
  name = "Default scene";
  _hasStarted = false;
  get hasStarted() {
    return this._hasStarted;
  }
  gameObjects = [];
  toUpdate = /* @__PURE__ */ new Map();
  componentsByType = /* @__PURE__ */ new Map();
  renderPipeline;
  constructor(renderer) {
    this.renderer = renderer;
    this.renderPipeline = new RenderingPipeline(this.renderer);
    EventSystem.on(ComponentEvents.CallUpdate, (component, flag) => {
      if (flag) this.toUpdate.set(component, true);
      else this.toUpdate.delete(component);
    });
    EventSystem.on(ComponentEvents.AddedComponent, (component, scene) => {
      if (scene !== this) return;
      let componentsArray = this.componentsByType.get(component.name) || [];
      componentsArray.push(component);
      this.componentsByType.set(component.name, componentsArray);
    });
    EventSystem.on(ComponentEvents.RemovedComponent, (component, scene) => {
      let componentsArray = this.componentsByType.get(component.name);
      if (componentsArray) {
        const index = componentsArray.indexOf(component);
        if (index !== -1) {
          componentsArray.splice(index, 1);
          this.componentsByType.set(component.name, componentsArray);
        }
      }
    });
  }
  AddGameObject(gameObject) {
    this.gameObjects.push(gameObject);
  }
  GetGameObjects() {
    return this.gameObjects;
  }
  GetComponents(type) {
    return this.componentsByType.get(type.name) || [];
  }
  RemoveGameObject(gameObject) {
    const index = this.gameObjects.indexOf(gameObject);
    if (index !== -1) this.gameObjects.splice(index, 1);
  }
  Start() {
    if (this.hasStarted) return;
    for (const gameObject of this.gameObjects) gameObject.Start();
    this._hasStarted = true;
    this.Tick();
  }
  Tick() {
    for (const [component, _2] of this.toUpdate) component.Update();
    this.renderPipeline.Render(this);
    requestAnimationFrame(() => this.Tick());
  }
};

// src/plugins/PhysicsRapier/rapier/rapier.es.js
var A;
var I = new Array(128).fill(void 0);
I.push(void 0, null, true, false);
var g = I.length;
function C(A2) {
  g === I.length && I.push(I.length + 1);
  const C2 = g;
  return g = I[C2], I[C2] = A2, C2;
}
function B(A2) {
  return I[A2];
}
function Q(A2) {
  const C2 = B(A2);
  return function(A3) {
    A3 < 132 || (I[A3] = g, g = A3);
  }(A2), C2;
}
function E(A2) {
  return null == A2;
}
var i2 = null;
function D() {
  return null !== i2 && 0 !== i2.byteLength || (i2 = new Float64Array(A.memory.buffer)), i2;
}
var o = null;
function S() {
  return null !== o && 0 !== o.byteLength || (o = new Int32Array(A.memory.buffer)), o;
}
var w = "undefined" != typeof TextDecoder ? new TextDecoder("utf-8", { ignoreBOM: true, fatal: true }) : { decode: () => {
  throw Error("TextDecoder not available");
} };
"undefined" != typeof TextDecoder && w.decode();
var G = null;
function k(I2, g2) {
  return I2 >>>= 0, w.decode((null !== G && 0 !== G.byteLength || (G = new Uint8Array(A.memory.buffer)), G).subarray(I2, I2 + g2));
}
function K(A2, I2) {
  if (!(A2 instanceof I2)) throw new Error(`expected instance of ${I2.name}`);
  return A2.ptr;
}
var U = null;
function h() {
  return null !== U && 0 !== U.byteLength || (U = new Float32Array(A.memory.buffer)), U;
}
var J = 128;
function y(A2) {
  if (1 == J) throw new Error("out of js stack");
  return I[--J] = A2, J;
}
function N(A2, I2) {
  return A2 >>>= 0, h().subarray(A2 / 4, A2 / 4 + I2);
}
var M = null;
function a() {
  return null !== M && 0 !== M.byteLength || (M = new Uint32Array(A.memory.buffer)), M;
}
var F = 0;
function s(A2, I2) {
  const g2 = I2(4 * A2.length, 4) >>> 0;
  return h().set(A2, g2 / 4), F = A2.length, g2;
}
function R(A2, I2) {
  const g2 = I2(4 * A2.length, 4) >>> 0;
  return a().set(A2, g2 / 4), F = A2.length, g2;
}
function c(I2, g2) {
  try {
    return I2.apply(this, g2);
  } catch (I3) {
    A.__wbindgen_exn_store(C(I3));
  }
}
var Y = Object.freeze({ Ball: 0, 0: "Ball", Cuboid: 1, 1: "Cuboid", Capsule: 2, 2: "Capsule", Segment: 3, 3: "Segment", Polyline: 4, 4: "Polyline", Triangle: 5, 5: "Triangle", TriMesh: 6, 6: "TriMesh", HeightField: 7, 7: "HeightField", Compound: 8, 8: "Compound", ConvexPolyhedron: 9, 9: "ConvexPolyhedron", Cylinder: 10, 10: "Cylinder", Cone: 11, 11: "Cone", RoundCuboid: 12, 12: "RoundCuboid", RoundTriangle: 13, 13: "RoundTriangle", RoundCylinder: 14, 14: "RoundCylinder", RoundCone: 15, 15: "RoundCone", RoundConvexPolyhedron: 16, 16: "RoundConvexPolyhedron", HalfSpace: 17, 17: "HalfSpace" });
var q = Object.freeze({ LinX: 0, 0: "LinX", LinY: 1, 1: "LinY", LinZ: 2, 2: "LinZ", AngX: 3, 3: "AngX", AngY: 4, 4: "AngY", AngZ: 5, 5: "AngZ" });
var l = Object.freeze({ Revolute: 0, 0: "Revolute", Fixed: 1, 1: "Fixed", Prismatic: 2, 2: "Prismatic", Rope: 3, 3: "Rope", Spring: 4, 4: "Spring", Spherical: 5, 5: "Spherical", Generic: 6, 6: "Generic" });
var L = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawbroadphase_free(I2 >>> 0));
var H = class _H {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_H.prototype);
    return I2.__wbg_ptr = A2, L.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, L.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawbroadphase_free(I2);
  }
  constructor() {
    const I2 = A.rawbroadphase_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
};
var t = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawccdsolver_free(I2 >>> 0));
var p = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, t.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawccdsolver_free(I2);
  }
  constructor() {
    const I2 = A.rawccdsolver_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
};
var e = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawcharactercollision_free(I2 >>> 0));
var r = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, e.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawcharactercollision_free(I2);
  }
  constructor() {
    const I2 = A.rawcharactercollision_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  handle() {
    return A.rawcharactercollision_handle(this.__wbg_ptr);
  }
  translationDeltaApplied() {
    const I2 = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  translationDeltaRemaining() {
    const I2 = A.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  toi() {
    return A.rawcharactercollision_toi(this.__wbg_ptr);
  }
  worldWitness1() {
    const I2 = A.rawcharactercollision_worldWitness1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  worldWitness2() {
    const I2 = A.rawcharactercollision_worldWitness2(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  worldNormal1() {
    const I2 = A.rawcharactercollision_worldNormal1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  worldNormal2() {
    const I2 = A.rawcharactercollision_worldNormal2(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
};
var d = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawcolliderset_free(I2 >>> 0));
var n = class _n {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_n.prototype);
    return I2.__wbg_ptr = A2, d.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, d.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawcolliderset_free(I2);
  }
  coTranslation(I2) {
    const g2 = A.rawcolliderset_coTranslation(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  coRotation(I2) {
    const g2 = A.rawcolliderset_coRotation(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  coSetTranslation(I2, g2, C2, B2) {
    A.rawcolliderset_coSetTranslation(this.__wbg_ptr, I2, g2, C2, B2);
  }
  coSetTranslationWrtParent(I2, g2, C2, B2) {
    A.rawcolliderset_coSetTranslationWrtParent(this.__wbg_ptr, I2, g2, C2, B2);
  }
  coSetRotation(I2, g2, C2, B2, Q2) {
    A.rawcolliderset_coSetRotation(this.__wbg_ptr, I2, g2, C2, B2, Q2);
  }
  coSetRotationWrtParent(I2, g2, C2, B2, Q2) {
    A.rawcolliderset_coSetRotationWrtParent(this.__wbg_ptr, I2, g2, C2, B2, Q2);
  }
  coIsSensor(I2) {
    return 0 !== A.rawcolliderset_coIsSensor(this.__wbg_ptr, I2);
  }
  coShapeType(I2) {
    return A.rawcolliderset_coShapeType(this.__wbg_ptr, I2);
  }
  coHalfspaceNormal(I2) {
    const g2 = A.rawcolliderset_coHalfspaceNormal(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  coHalfExtents(I2) {
    const g2 = A.rawcolliderset_coHalfExtents(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  coSetHalfExtents(I2, g2) {
    K(g2, xA), A.rawcolliderset_coSetHalfExtents(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  coRadius(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coRadius(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coSetRadius(I2, g2) {
    A.rawcolliderset_coSetRadius(this.__wbg_ptr, I2, g2);
  }
  coHalfHeight(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coHalfHeight(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coSetHalfHeight(I2, g2) {
    A.rawcolliderset_coSetHalfHeight(this.__wbg_ptr, I2, g2);
  }
  coRoundRadius(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coRoundRadius(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coSetRoundRadius(I2, g2) {
    A.rawcolliderset_coSetRoundRadius(this.__wbg_ptr, I2, g2);
  }
  coVertices(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coVertices(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = S()[B2 / 4 + 1];
      let Q2;
      return 0 !== g2 && (Q2 = N(g2, C2).slice(), A.__wbindgen_free(g2, 4 * C2, 4)), Q2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coIndices(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coIndices(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = S()[B2 / 4 + 1];
      let Q2;
      return 0 !== g2 && (Q2 = function(A2, I3) {
        return A2 >>>= 0, a().subarray(A2 / 4, A2 / 4 + I3);
      }(g2, C2).slice(), A.__wbindgen_free(g2, 4 * C2, 4)), Q2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coTriMeshFlags(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coTriMeshFlags(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = S()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2 >>> 0;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coHeightFieldFlags(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coHeightFieldFlags(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = S()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2 >>> 0;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coHeightfieldHeights(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coHeightfieldHeights(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = S()[B2 / 4 + 1];
      let Q2;
      return 0 !== g2 && (Q2 = N(g2, C2).slice(), A.__wbindgen_free(g2, 4 * C2, 4)), Q2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coHeightfieldScale(I2) {
    const g2 = A.rawcolliderset_coHeightfieldScale(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  coHeightfieldNRows(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coHeightfieldNRows(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = S()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2 >>> 0;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coHeightfieldNCols(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coHeightfieldNCols(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = S()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2 >>> 0;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coParent(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawcolliderset_coParent(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = D()[B2 / 8 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  coSetEnabled(I2, g2) {
    A.rawcolliderset_coSetEnabled(this.__wbg_ptr, I2, g2);
  }
  coIsEnabled(I2) {
    return 0 !== A.rawcolliderset_coIsEnabled(this.__wbg_ptr, I2);
  }
  coSetContactSkin(I2, g2) {
    A.rawcolliderset_coSetContactSkin(this.__wbg_ptr, I2, g2);
  }
  coContactSkin(I2) {
    return A.rawcolliderset_coContactSkin(this.__wbg_ptr, I2);
  }
  coFriction(I2) {
    return A.rawcolliderset_coFriction(this.__wbg_ptr, I2);
  }
  coRestitution(I2) {
    return A.rawcolliderset_coRestitution(this.__wbg_ptr, I2);
  }
  coDensity(I2) {
    return A.rawcolliderset_coDensity(this.__wbg_ptr, I2);
  }
  coMass(I2) {
    return A.rawcolliderset_coMass(this.__wbg_ptr, I2);
  }
  coVolume(I2) {
    return A.rawcolliderset_coVolume(this.__wbg_ptr, I2);
  }
  coCollisionGroups(I2) {
    return A.rawcolliderset_coCollisionGroups(this.__wbg_ptr, I2) >>> 0;
  }
  coSolverGroups(I2) {
    return A.rawcolliderset_coSolverGroups(this.__wbg_ptr, I2) >>> 0;
  }
  coActiveHooks(I2) {
    return A.rawcolliderset_coActiveHooks(this.__wbg_ptr, I2) >>> 0;
  }
  coActiveCollisionTypes(I2) {
    return A.rawcolliderset_coActiveCollisionTypes(this.__wbg_ptr, I2);
  }
  coActiveEvents(I2) {
    return A.rawcolliderset_coActiveEvents(this.__wbg_ptr, I2) >>> 0;
  }
  coContactForceEventThreshold(I2) {
    return A.rawcolliderset_coContactForceEventThreshold(this.__wbg_ptr, I2);
  }
  coContainsPoint(I2, g2) {
    K(g2, xA);
    return 0 !== A.rawcolliderset_coContainsPoint(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  coCastShape(I2, g2, C2, B2, Q2, E2, i3, D2, o2) {
    K(g2, xA), K(C2, nA), K(B2, xA), K(Q2, HA), K(E2, xA);
    const S2 = A.rawcolliderset_coCastShape(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, E2.__wbg_ptr, i3, D2, o2);
    return 0 === S2 ? void 0 : OA.__wrap(S2);
  }
  coCastCollider(I2, g2, C2, B2, Q2, E2, i3) {
    K(g2, xA), K(B2, xA);
    const D2 = A.rawcolliderset_coCastCollider(this.__wbg_ptr, I2, g2.__wbg_ptr, C2, B2.__wbg_ptr, Q2, E2, i3);
    return 0 === D2 ? void 0 : O.__wrap(D2);
  }
  coIntersectsShape(I2, g2, C2, B2) {
    K(g2, nA), K(C2, xA), K(B2, HA);
    return 0 !== A.rawcolliderset_coIntersectsShape(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr);
  }
  coContactShape(I2, g2, C2, B2, Q2) {
    K(g2, nA), K(C2, xA), K(B2, HA);
    const E2 = A.rawcolliderset_coContactShape(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2);
    return 0 === E2 ? void 0 : bA.__wrap(E2);
  }
  coContactCollider(I2, g2, C2) {
    const B2 = A.rawcolliderset_coContactCollider(this.__wbg_ptr, I2, g2, C2);
    return 0 === B2 ? void 0 : bA.__wrap(B2);
  }
  coProjectPoint(I2, g2, C2) {
    K(g2, xA);
    const B2 = A.rawcolliderset_coProjectPoint(this.__wbg_ptr, I2, g2.__wbg_ptr, C2);
    return yA.__wrap(B2);
  }
  coIntersectsRay(I2, g2, C2, B2) {
    K(g2, xA), K(C2, xA);
    return 0 !== A.rawcolliderset_coIntersectsRay(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2);
  }
  coCastRay(I2, g2, C2, B2, Q2) {
    K(g2, xA), K(C2, xA);
    return A.rawcolliderset_coCastRay(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2, Q2);
  }
  coCastRayAndGetNormal(I2, g2, C2, B2, Q2) {
    K(g2, xA), K(C2, xA);
    const E2 = A.rawcolliderset_coCastRayAndGetNormal(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2, Q2);
    return 0 === E2 ? void 0 : YA.__wrap(E2);
  }
  coSetSensor(I2, g2) {
    A.rawcolliderset_coSetSensor(this.__wbg_ptr, I2, g2);
  }
  coSetRestitution(I2, g2) {
    A.rawcolliderset_coSetRestitution(this.__wbg_ptr, I2, g2);
  }
  coSetFriction(I2, g2) {
    A.rawcolliderset_coSetFriction(this.__wbg_ptr, I2, g2);
  }
  coFrictionCombineRule(I2) {
    return A.rawcolliderset_coFrictionCombineRule(this.__wbg_ptr, I2) >>> 0;
  }
  coSetFrictionCombineRule(I2, g2) {
    A.rawcolliderset_coSetFrictionCombineRule(this.__wbg_ptr, I2, g2);
  }
  coRestitutionCombineRule(I2) {
    return A.rawcolliderset_coRestitutionCombineRule(this.__wbg_ptr, I2) >>> 0;
  }
  coSetRestitutionCombineRule(I2, g2) {
    A.rawcolliderset_coSetRestitutionCombineRule(this.__wbg_ptr, I2, g2);
  }
  coSetCollisionGroups(I2, g2) {
    A.rawcolliderset_coSetCollisionGroups(this.__wbg_ptr, I2, g2);
  }
  coSetSolverGroups(I2, g2) {
    A.rawcolliderset_coSetSolverGroups(this.__wbg_ptr, I2, g2);
  }
  coSetActiveHooks(I2, g2) {
    A.rawcolliderset_coSetActiveHooks(this.__wbg_ptr, I2, g2);
  }
  coSetActiveEvents(I2, g2) {
    A.rawcolliderset_coSetActiveEvents(this.__wbg_ptr, I2, g2);
  }
  coSetActiveCollisionTypes(I2, g2) {
    A.rawcolliderset_coSetActiveCollisionTypes(this.__wbg_ptr, I2, g2);
  }
  coSetShape(I2, g2) {
    K(g2, nA), A.rawcolliderset_coSetShape(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  coSetContactForceEventThreshold(I2, g2) {
    A.rawcolliderset_coSetContactForceEventThreshold(this.__wbg_ptr, I2, g2);
  }
  coSetDensity(I2, g2) {
    A.rawcolliderset_coSetDensity(this.__wbg_ptr, I2, g2);
  }
  coSetMass(I2, g2) {
    A.rawcolliderset_coSetMass(this.__wbg_ptr, I2, g2);
  }
  coSetMassProperties(I2, g2, C2, B2, Q2) {
    K(C2, xA), K(B2, xA), K(Q2, HA), A.rawcolliderset_coSetMassProperties(this.__wbg_ptr, I2, g2, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr);
  }
  constructor() {
    const I2 = A.rawcolliderset_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  len() {
    return A.rawcolliderset_len(this.__wbg_ptr) >>> 0;
  }
  contains(I2) {
    return 0 !== A.rawcolliderset_contains(this.__wbg_ptr, I2);
  }
  createCollider(I2, g2, C2, B2, Q2, E2, i3, o2, w2, G2, k2, U2, h2, J2, y2, N2, M2, a2, F2, s2, R2, c2, Y2, q2, l2) {
    try {
      const t2 = A.__wbindgen_add_to_stack_pointer(-16);
      K(g2, nA), K(C2, xA), K(B2, HA), K(i3, xA), K(o2, xA), K(w2, HA), K(l2, lA), A.rawcolliderset_createCollider(t2, this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2, E2, i3.__wbg_ptr, o2.__wbg_ptr, w2.__wbg_ptr, G2, k2, U2, h2, J2, y2, N2, M2, a2, F2, s2, R2, c2, Y2, q2, l2.__wbg_ptr);
      var L2 = S()[t2 / 4 + 0], H2 = D()[t2 / 8 + 1];
      return 0 === L2 ? void 0 : H2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  remove(I2, g2, C2, B2) {
    K(g2, EA), K(C2, lA), A.rawcolliderset_remove(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2);
  }
  isHandleValid(I2) {
    return 0 !== A.rawcolliderset_contains(this.__wbg_ptr, I2);
  }
  forEachColliderHandle(g2) {
    try {
      A.rawcolliderset_forEachColliderHandle(this.__wbg_ptr, y(g2));
    } finally {
      I[J++] = void 0;
    }
  }
};
var T = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawcollidershapecasthit_free(I2 >>> 0));
var O = class _O {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_O.prototype);
    return I2.__wbg_ptr = A2, T.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, T.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawcollidershapecasthit_free(I2);
  }
  colliderHandle() {
    return A.rawcharactercollision_handle(this.__wbg_ptr);
  }
  time_of_impact() {
    return A.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);
  }
  witness1() {
    const I2 = A.rawcollidershapecasthit_witness1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  witness2() {
    const I2 = A.rawcollidershapecasthit_witness2(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  normal1() {
    const I2 = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  normal2() {
    const I2 = A.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
};
var Z = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawcontactforceevent_free(I2 >>> 0));
var b = class _b {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_b.prototype);
    return I2.__wbg_ptr = A2, Z.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Z.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawcontactforceevent_free(I2);
  }
  collider1() {
    return A.rawcharactercollision_handle(this.__wbg_ptr);
  }
  collider2() {
    return A.rawcontactforceevent_collider2(this.__wbg_ptr);
  }
  total_force() {
    const I2 = A.rawcontactforceevent_total_force(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  total_force_magnitude() {
    return A.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr);
  }
  max_force_direction() {
    const I2 = A.rawcontactforceevent_max_force_direction(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  max_force_magnitude() {
    return A.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr);
  }
};
var W = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawcontactmanifold_free(I2 >>> 0));
var x = class _x {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_x.prototype);
    return I2.__wbg_ptr = A2, W.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, W.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawcontactmanifold_free(I2);
  }
  normal() {
    const I2 = A.rawcontactmanifold_normal(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  local_n1() {
    const I2 = A.rawcontactmanifold_local_n1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  local_n2() {
    const I2 = A.rawcontactmanifold_local_n2(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  subshape1() {
    return A.rawcontactmanifold_subshape1(this.__wbg_ptr) >>> 0;
  }
  subshape2() {
    return A.rawcontactmanifold_subshape2(this.__wbg_ptr) >>> 0;
  }
  num_contacts() {
    return A.rawcontactmanifold_num_contacts(this.__wbg_ptr) >>> 0;
  }
  contact_local_p1(I2) {
    const g2 = A.rawcontactmanifold_contact_local_p1(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  contact_local_p2(I2) {
    const g2 = A.rawcontactmanifold_contact_local_p2(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  contact_dist(I2) {
    return A.rawcontactmanifold_contact_dist(this.__wbg_ptr, I2);
  }
  contact_fid1(I2) {
    return A.rawcontactmanifold_contact_fid1(this.__wbg_ptr, I2) >>> 0;
  }
  contact_fid2(I2) {
    return A.rawcontactmanifold_contact_fid2(this.__wbg_ptr, I2) >>> 0;
  }
  contact_impulse(I2) {
    return A.rawcontactmanifold_contact_impulse(this.__wbg_ptr, I2);
  }
  contact_tangent_impulse_x(I2) {
    return A.rawcontactmanifold_contact_tangent_impulse_x(this.__wbg_ptr, I2);
  }
  contact_tangent_impulse_y(I2) {
    return A.rawcontactmanifold_contact_tangent_impulse_y(this.__wbg_ptr, I2);
  }
  num_solver_contacts() {
    return A.rawcontactmanifold_num_solver_contacts(this.__wbg_ptr) >>> 0;
  }
  solver_contact_point(I2) {
    const g2 = A.rawcontactmanifold_solver_contact_point(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  solver_contact_dist(I2) {
    return A.rawcontactmanifold_solver_contact_dist(this.__wbg_ptr, I2);
  }
  solver_contact_friction(I2) {
    return A.rawcontactmanifold_solver_contact_friction(this.__wbg_ptr, I2);
  }
  solver_contact_restitution(I2) {
    return A.rawcontactmanifold_solver_contact_restitution(this.__wbg_ptr, I2);
  }
  solver_contact_tangent_velocity(I2) {
    const g2 = A.rawcontactmanifold_solver_contact_tangent_velocity(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
};
var j = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawcontactpair_free(I2 >>> 0));
var m = class _m {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_m.prototype);
    return I2.__wbg_ptr = A2, j.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, j.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawcontactpair_free(I2);
  }
  collider1() {
    return A.rawcontactpair_collider1(this.__wbg_ptr);
  }
  collider2() {
    return A.rawcontactpair_collider2(this.__wbg_ptr);
  }
  numContactManifolds() {
    return A.rawcontactpair_numContactManifolds(this.__wbg_ptr) >>> 0;
  }
  contactManifold(I2) {
    const g2 = A.rawcontactpair_contactManifold(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : x.__wrap(g2);
  }
};
var f = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawdebugrenderpipeline_free(I2 >>> 0));
var V = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, f.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawdebugrenderpipeline_free(I2);
  }
  constructor() {
    const I2 = A.rawdebugrenderpipeline_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  vertices() {
    return Q(A.rawdebugrenderpipeline_vertices(this.__wbg_ptr));
  }
  colors() {
    return Q(A.rawdebugrenderpipeline_colors(this.__wbg_ptr));
  }
  render(I2, g2, C2, B2, Q2) {
    K(I2, lA), K(g2, n), K(C2, gA), K(B2, SA), K(Q2, GA), A.rawdebugrenderpipeline_render(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr);
  }
};
var X = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawdeserializedworld_free(I2 >>> 0));
var P = class _P {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_P.prototype);
    return I2.__wbg_ptr = A2, X.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, X.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawdeserializedworld_free(I2);
  }
  takeGravity() {
    const I2 = A.rawdeserializedworld_takeGravity(this.__wbg_ptr);
    return 0 === I2 ? void 0 : xA.__wrap(I2);
  }
  takeIntegrationParameters() {
    const I2 = A.rawdeserializedworld_takeIntegrationParameters(this.__wbg_ptr);
    return 0 === I2 ? void 0 : BA.__wrap(I2);
  }
  takeIslandManager() {
    const I2 = A.rawdeserializedworld_takeIslandManager(this.__wbg_ptr);
    return 0 === I2 ? void 0 : EA.__wrap(I2);
  }
  takeBroadPhase() {
    const I2 = A.rawdeserializedworld_takeBroadPhase(this.__wbg_ptr);
    return 0 === I2 ? void 0 : H.__wrap(I2);
  }
  takeNarrowPhase() {
    const I2 = A.rawdeserializedworld_takeNarrowPhase(this.__wbg_ptr);
    return 0 === I2 ? void 0 : GA.__wrap(I2);
  }
  takeBodies() {
    const I2 = A.rawdeserializedworld_takeBodies(this.__wbg_ptr);
    return 0 === I2 ? void 0 : lA.__wrap(I2);
  }
  takeColliders() {
    const I2 = A.rawdeserializedworld_takeColliders(this.__wbg_ptr);
    return 0 === I2 ? void 0 : n.__wrap(I2);
  }
  takeImpulseJoints() {
    const I2 = A.rawdeserializedworld_takeImpulseJoints(this.__wbg_ptr);
    return 0 === I2 ? void 0 : gA.__wrap(I2);
  }
  takeMultibodyJoints() {
    const I2 = A.rawdeserializedworld_takeMultibodyJoints(this.__wbg_ptr);
    return 0 === I2 ? void 0 : SA.__wrap(I2);
  }
};
var u = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawdynamicraycastvehiclecontroller_free(I2 >>> 0));
var z = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, u.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawdynamicraycastvehiclecontroller_free(I2);
  }
  constructor(I2) {
    const g2 = A.rawdynamicraycastvehiclecontroller_new(I2);
    return this.__wbg_ptr = g2 >>> 0, this;
  }
  current_vehicle_speed() {
    return A.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);
  }
  chassis() {
    return A.rawdynamicraycastvehiclecontroller_chassis(this.__wbg_ptr);
  }
  index_up_axis() {
    return A.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr) >>> 0;
  }
  set_index_up_axis(I2) {
    A.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, I2);
  }
  index_forward_axis() {
    return A.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr) >>> 0;
  }
  set_index_forward_axis(I2) {
    A.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, I2);
  }
  add_wheel(I2, g2, C2, B2, Q2) {
    K(I2, xA), K(g2, xA), K(C2, xA), A.rawdynamicraycastvehiclecontroller_add_wheel(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2, Q2);
  }
  num_wheels() {
    return A.rawdynamicraycastvehiclecontroller_num_wheels(this.__wbg_ptr) >>> 0;
  }
  update_vehicle(g2, C2, B2, Q2, i3, D2, o2) {
    try {
      K(C2, lA), K(B2, n), K(Q2, MA), A.rawdynamicraycastvehiclecontroller_update_vehicle(this.__wbg_ptr, g2, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3, !E(D2), E(D2) ? 0 : D2, y(o2));
    } finally {
      I[J++] = void 0;
    }
  }
  wheel_chassis_connection_point_cs(I2) {
    const g2 = A.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  set_wheel_chassis_connection_point_cs(I2, g2) {
    K(g2, xA), A.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  wheel_suspension_rest_length(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_suspension_rest_length(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length(this.__wbg_ptr, I2, g2);
  }
  wheel_max_suspension_travel(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_max_suspension_travel(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel(this.__wbg_ptr, I2, g2);
  }
  wheel_radius(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_radius(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_radius(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_radius(this.__wbg_ptr, I2, g2);
  }
  wheel_suspension_stiffness(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_suspension_stiffness(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness(this.__wbg_ptr, I2, g2);
  }
  wheel_suspension_compression(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_suspension_compression(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_suspension_compression(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression(this.__wbg_ptr, I2, g2);
  }
  wheel_suspension_relaxation(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_suspension_relaxation(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation(this.__wbg_ptr, I2, g2);
  }
  wheel_max_suspension_force(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_max_suspension_force(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force(this.__wbg_ptr, I2, g2);
  }
  wheel_brake(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_brake(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_brake(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_brake(this.__wbg_ptr, I2, g2);
  }
  wheel_steering(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_steering(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_steering(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_steering(this.__wbg_ptr, I2, g2);
  }
  wheel_engine_force(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_engine_force(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_engine_force(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_engine_force(this.__wbg_ptr, I2, g2);
  }
  wheel_direction_cs(I2) {
    const g2 = A.rawdynamicraycastvehiclecontroller_wheel_direction_cs(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  set_wheel_direction_cs(I2, g2) {
    K(g2, xA), A.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  wheel_axle_cs(I2) {
    const g2 = A.rawdynamicraycastvehiclecontroller_wheel_axle_cs(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  set_wheel_axle_cs(I2, g2) {
    K(g2, xA), A.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  wheel_friction_slip(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_friction_slip(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_friction_slip(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip(this.__wbg_ptr, I2, g2);
  }
  wheel_side_friction_stiffness(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_wheel_side_friction_stiffness(I2, g2) {
    A.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness(this.__wbg_ptr, I2, g2);
  }
  wheel_rotation(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_rotation(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  wheel_forward_impulse(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_forward_impulse(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  wheel_side_impulse(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_side_impulse(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  wheel_suspension_force(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_suspension_force(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  wheel_contact_normal_ws(I2) {
    const g2 = A.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  wheel_contact_point_ws(I2) {
    const g2 = A.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  wheel_suspension_length(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_suspension_length(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = h()[B2 / 4 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  wheel_hard_point_ws(I2) {
    const g2 = A.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws(this.__wbg_ptr, I2);
    return 0 === g2 ? void 0 : xA.__wrap(g2);
  }
  wheel_is_in_contact(I2) {
    return 0 !== A.rawdynamicraycastvehiclecontroller_wheel_is_in_contact(this.__wbg_ptr, I2);
  }
  wheel_ground_object(I2) {
    try {
      const B2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawdynamicraycastvehiclecontroller_wheel_ground_object(B2, this.__wbg_ptr, I2);
      var g2 = S()[B2 / 4 + 0], C2 = D()[B2 / 8 + 1];
      return 0 === g2 ? void 0 : C2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
};
var v = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_raweventqueue_free(I2 >>> 0));
var _ = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, v.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_raweventqueue_free(I2);
  }
  constructor(I2) {
    const g2 = A.raweventqueue_new(I2);
    return this.__wbg_ptr = g2 >>> 0, this;
  }
  drainCollisionEvents(g2) {
    try {
      A.raweventqueue_drainCollisionEvents(this.__wbg_ptr, y(g2));
    } finally {
      I[J++] = void 0;
    }
  }
  drainContactForceEvents(g2) {
    try {
      A.raweventqueue_drainContactForceEvents(this.__wbg_ptr, y(g2));
    } finally {
      I[J++] = void 0;
    }
  }
  clear() {
    A.raweventqueue_clear(this.__wbg_ptr);
  }
};
var $ = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawgenericjoint_free(I2 >>> 0));
var AA = class _AA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_AA.prototype);
    return I2.__wbg_ptr = A2, $.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, $.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawgenericjoint_free(I2);
  }
  static generic(I2, g2, C2, B2) {
    K(I2, xA), K(g2, xA), K(C2, xA);
    const Q2 = A.rawgenericjoint_generic(I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2);
    return 0 === Q2 ? void 0 : _AA.__wrap(Q2);
  }
  static spring(I2, g2, C2, B2, Q2) {
    K(B2, xA), K(Q2, xA);
    const E2 = A.rawgenericjoint_spring(I2, g2, C2, B2.__wbg_ptr, Q2.__wbg_ptr);
    return _AA.__wrap(E2);
  }
  static rope(I2, g2, C2) {
    K(g2, xA), K(C2, xA);
    const B2 = A.rawgenericjoint_rope(I2, g2.__wbg_ptr, C2.__wbg_ptr);
    return _AA.__wrap(B2);
  }
  static spherical(I2, g2) {
    K(I2, xA), K(g2, xA);
    const C2 = A.rawgenericjoint_spherical(I2.__wbg_ptr, g2.__wbg_ptr);
    return _AA.__wrap(C2);
  }
  static prismatic(I2, g2, C2, B2, Q2, E2) {
    K(I2, xA), K(g2, xA), K(C2, xA);
    const i3 = A.rawgenericjoint_prismatic(I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2, Q2, E2);
    return 0 === i3 ? void 0 : _AA.__wrap(i3);
  }
  static fixed(I2, g2, C2, B2) {
    K(I2, xA), K(g2, HA), K(C2, xA), K(B2, HA);
    const Q2 = A.rawgenericjoint_fixed(I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr);
    return _AA.__wrap(Q2);
  }
  static revolute(I2, g2, C2) {
    K(I2, xA), K(g2, xA), K(C2, xA);
    const B2 = A.rawgenericjoint_revolute(I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr);
    return 0 === B2 ? void 0 : _AA.__wrap(B2);
  }
};
var IA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawimpulsejointset_free(I2 >>> 0));
var gA = class _gA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_gA.prototype);
    return I2.__wbg_ptr = A2, IA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, IA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawimpulsejointset_free(I2);
  }
  jointType(I2) {
    return A.rawimpulsejointset_jointType(this.__wbg_ptr, I2);
  }
  jointBodyHandle1(I2) {
    return A.rawimpulsejointset_jointBodyHandle1(this.__wbg_ptr, I2);
  }
  jointBodyHandle2(I2) {
    return A.rawimpulsejointset_jointBodyHandle2(this.__wbg_ptr, I2);
  }
  jointFrameX1(I2) {
    const g2 = A.rawimpulsejointset_jointFrameX1(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  jointFrameX2(I2) {
    const g2 = A.rawimpulsejointset_jointFrameX2(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  jointAnchor1(I2) {
    const g2 = A.rawimpulsejointset_jointAnchor1(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  jointAnchor2(I2) {
    const g2 = A.rawimpulsejointset_jointAnchor2(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  jointSetAnchor1(I2, g2) {
    K(g2, xA), A.rawimpulsejointset_jointSetAnchor1(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  jointSetAnchor2(I2, g2) {
    K(g2, xA), A.rawimpulsejointset_jointSetAnchor2(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  jointContactsEnabled(I2) {
    return 0 !== A.rawimpulsejointset_jointContactsEnabled(this.__wbg_ptr, I2);
  }
  jointSetContactsEnabled(I2, g2) {
    A.rawimpulsejointset_jointSetContactsEnabled(this.__wbg_ptr, I2, g2);
  }
  jointLimitsEnabled(I2, g2) {
    return 0 !== A.rawimpulsejointset_jointLimitsEnabled(this.__wbg_ptr, I2, g2);
  }
  jointLimitsMin(I2, g2) {
    return A.rawimpulsejointset_jointLimitsMin(this.__wbg_ptr, I2, g2);
  }
  jointLimitsMax(I2, g2) {
    return A.rawimpulsejointset_jointLimitsMax(this.__wbg_ptr, I2, g2);
  }
  jointSetLimits(I2, g2, C2, B2) {
    A.rawimpulsejointset_jointSetLimits(this.__wbg_ptr, I2, g2, C2, B2);
  }
  jointConfigureMotorModel(I2, g2, C2) {
    A.rawimpulsejointset_jointConfigureMotorModel(this.__wbg_ptr, I2, g2, C2);
  }
  jointConfigureMotorVelocity(I2, g2, C2, B2) {
    A.rawimpulsejointset_jointConfigureMotorVelocity(this.__wbg_ptr, I2, g2, C2, B2);
  }
  jointConfigureMotorPosition(I2, g2, C2, B2, Q2) {
    A.rawimpulsejointset_jointConfigureMotorPosition(this.__wbg_ptr, I2, g2, C2, B2, Q2);
  }
  jointConfigureMotor(I2, g2, C2, B2, Q2, E2) {
    A.rawimpulsejointset_jointConfigureMotor(this.__wbg_ptr, I2, g2, C2, B2, Q2, E2);
  }
  constructor() {
    const I2 = A.rawimpulsejointset_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  createJoint(I2, g2, C2, B2) {
    K(I2, AA);
    return A.rawimpulsejointset_createJoint(this.__wbg_ptr, I2.__wbg_ptr, g2, C2, B2);
  }
  remove(I2, g2) {
    A.rawimpulsejointset_remove(this.__wbg_ptr, I2, g2);
  }
  len() {
    return A.rawimpulsejointset_len(this.__wbg_ptr) >>> 0;
  }
  contains(I2) {
    return 0 !== A.rawimpulsejointset_contains(this.__wbg_ptr, I2);
  }
  forEachJointHandle(g2) {
    try {
      A.rawimpulsejointset_forEachJointHandle(this.__wbg_ptr, y(g2));
    } finally {
      I[J++] = void 0;
    }
  }
  forEachJointAttachedToRigidBody(g2, C2) {
    try {
      A.rawimpulsejointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, g2, y(C2));
    } finally {
      I[J++] = void 0;
    }
  }
};
var CA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawintegrationparameters_free(I2 >>> 0));
var BA = class _BA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_BA.prototype);
    return I2.__wbg_ptr = A2, CA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, CA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawintegrationparameters_free(I2);
  }
  constructor() {
    const I2 = A.rawintegrationparameters_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  get dt() {
    return A.rawintegrationparameters_dt(this.__wbg_ptr);
  }
  get contact_erp() {
    return A.rawintegrationparameters_contact_erp(this.__wbg_ptr);
  }
  get normalizedAllowedLinearError() {
    return A.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);
  }
  get normalizedPredictionDistance() {
    return A.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr);
  }
  get numSolverIterations() {
    return A.rawintegrationparameters_numSolverIterations(this.__wbg_ptr) >>> 0;
  }
  get numAdditionalFrictionIterations() {
    return A.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr) >>> 0;
  }
  get numInternalPgsIterations() {
    return A.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr) >>> 0;
  }
  get minIslandSize() {
    return A.rawimpulsejointset_len(this.__wbg_ptr) >>> 0;
  }
  get maxCcdSubsteps() {
    return A.rawintegrationparameters_maxCcdSubsteps(this.__wbg_ptr) >>> 0;
  }
  get lengthUnit() {
    return A.rawintegrationparameters_lengthUnit(this.__wbg_ptr);
  }
  set dt(I2) {
    A.rawintegrationparameters_set_dt(this.__wbg_ptr, I2);
  }
  set contact_natural_frequency(I2) {
    A.rawintegrationparameters_set_contact_natural_frequency(this.__wbg_ptr, I2);
  }
  set normalizedAllowedLinearError(I2) {
    A.rawintegrationparameters_set_normalizedAllowedLinearError(this.__wbg_ptr, I2);
  }
  set normalizedPredictionDistance(I2) {
    A.rawintegrationparameters_set_normalizedPredictionDistance(this.__wbg_ptr, I2);
  }
  set numSolverIterations(I2) {
    A.rawintegrationparameters_set_numSolverIterations(this.__wbg_ptr, I2);
  }
  set numAdditionalFrictionIterations(I2) {
    A.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, I2);
  }
  set numInternalPgsIterations(I2) {
    A.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, I2);
  }
  set minIslandSize(I2) {
    A.rawintegrationparameters_set_minIslandSize(this.__wbg_ptr, I2);
  }
  set maxCcdSubsteps(I2) {
    A.rawintegrationparameters_set_maxCcdSubsteps(this.__wbg_ptr, I2);
  }
  set lengthUnit(I2) {
    A.rawintegrationparameters_set_lengthUnit(this.__wbg_ptr, I2);
  }
  switchToStandardPgsSolver() {
    A.rawintegrationparameters_switchToStandardPgsSolver(this.__wbg_ptr);
  }
  switchToSmallStepsPgsSolver() {
    A.rawintegrationparameters_switchToSmallStepsPgsSolver(this.__wbg_ptr);
  }
  switchToSmallStepsPgsSolverWithoutWarmstart() {
    A.rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart(this.__wbg_ptr);
  }
};
var QA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawislandmanager_free(I2 >>> 0));
var EA = class _EA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_EA.prototype);
    return I2.__wbg_ptr = A2, QA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, QA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawislandmanager_free(I2);
  }
  constructor() {
    const I2 = A.rawislandmanager_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  forEachActiveRigidBodyHandle(g2) {
    try {
      A.rawislandmanager_forEachActiveRigidBodyHandle(this.__wbg_ptr, y(g2));
    } finally {
      I[J++] = void 0;
    }
  }
};
var iA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawkinematiccharactercontroller_free(I2 >>> 0));
var DA = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, iA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawkinematiccharactercontroller_free(I2);
  }
  constructor(I2) {
    const g2 = A.rawkinematiccharactercontroller_new(I2);
    return this.__wbg_ptr = g2 >>> 0, this;
  }
  up() {
    const I2 = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  setUp(I2) {
    K(I2, xA), A.rawkinematiccharactercontroller_setUp(this.__wbg_ptr, I2.__wbg_ptr);
  }
  normalNudgeFactor() {
    return A.rawkinematiccharactercontroller_normalNudgeFactor(this.__wbg_ptr);
  }
  setNormalNudgeFactor(I2) {
    A.rawkinematiccharactercontroller_setNormalNudgeFactor(this.__wbg_ptr, I2);
  }
  offset() {
    return A.rawintegrationparameters_dt(this.__wbg_ptr);
  }
  setOffset(I2) {
    A.rawkinematiccharactercontroller_setOffset(this.__wbg_ptr, I2);
  }
  slideEnabled() {
    return 0 !== A.rawkinematiccharactercontroller_slideEnabled(this.__wbg_ptr);
  }
  setSlideEnabled(I2) {
    A.rawkinematiccharactercontroller_setSlideEnabled(this.__wbg_ptr, I2);
  }
  autostepMaxHeight() {
    try {
      const C2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawkinematiccharactercontroller_autostepMaxHeight(C2, this.__wbg_ptr);
      var I2 = S()[C2 / 4 + 0], g2 = h()[C2 / 4 + 1];
      return 0 === I2 ? void 0 : g2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  autostepMinWidth() {
    try {
      const C2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawkinematiccharactercontroller_autostepMinWidth(C2, this.__wbg_ptr);
      var I2 = S()[C2 / 4 + 0], g2 = h()[C2 / 4 + 1];
      return 0 === I2 ? void 0 : g2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  autostepIncludesDynamicBodies() {
    const I2 = A.rawkinematiccharactercontroller_autostepIncludesDynamicBodies(this.__wbg_ptr);
    return 16777215 === I2 ? void 0 : 0 !== I2;
  }
  autostepEnabled() {
    return 0 !== A.rawkinematiccharactercontroller_autostepEnabled(this.__wbg_ptr);
  }
  enableAutostep(I2, g2, C2) {
    A.rawkinematiccharactercontroller_enableAutostep(this.__wbg_ptr, I2, g2, C2);
  }
  disableAutostep() {
    A.rawkinematiccharactercontroller_disableAutostep(this.__wbg_ptr);
  }
  maxSlopeClimbAngle() {
    return A.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);
  }
  setMaxSlopeClimbAngle(I2) {
    A.rawkinematiccharactercontroller_setMaxSlopeClimbAngle(this.__wbg_ptr, I2);
  }
  minSlopeSlideAngle() {
    return A.rawkinematiccharactercontroller_minSlopeSlideAngle(this.__wbg_ptr);
  }
  setMinSlopeSlideAngle(I2) {
    A.rawkinematiccharactercontroller_setMinSlopeSlideAngle(this.__wbg_ptr, I2);
  }
  snapToGroundDistance() {
    try {
      const C2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawkinematiccharactercontroller_snapToGroundDistance(C2, this.__wbg_ptr);
      var I2 = S()[C2 / 4 + 0], g2 = h()[C2 / 4 + 1];
      return 0 === I2 ? void 0 : g2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
  enableSnapToGround(I2) {
    A.rawkinematiccharactercontroller_enableSnapToGround(this.__wbg_ptr, I2);
  }
  disableSnapToGround() {
    A.rawkinematiccharactercontroller_disableSnapToGround(this.__wbg_ptr);
  }
  snapToGroundEnabled() {
    return 0 !== A.rawkinematiccharactercontroller_snapToGroundEnabled(this.__wbg_ptr);
  }
  computeColliderMovement(g2, C2, B2, Q2, i3, D2, o2, S2, w2, G2, k2) {
    try {
      K(C2, lA), K(B2, n), K(Q2, MA), K(D2, xA), A.rawkinematiccharactercontroller_computeColliderMovement(this.__wbg_ptr, g2, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3, D2.__wbg_ptr, o2, !E(S2), E(S2) ? 0 : S2, w2, !E(G2), E(G2) ? 0 : G2, y(k2));
    } finally {
      I[J++] = void 0;
    }
  }
  computedMovement() {
    const I2 = A.rawkinematiccharactercontroller_computedMovement(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  computedGrounded() {
    return 0 !== A.rawkinematiccharactercontroller_computedGrounded(this.__wbg_ptr);
  }
  numComputedCollisions() {
    return A.rawkinematiccharactercontroller_numComputedCollisions(this.__wbg_ptr) >>> 0;
  }
  computedCollision(I2, g2) {
    K(g2, r);
    return 0 !== A.rawkinematiccharactercontroller_computedCollision(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
};
var oA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawmultibodyjointset_free(I2 >>> 0));
var SA = class _SA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_SA.prototype);
    return I2.__wbg_ptr = A2, oA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, oA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawmultibodyjointset_free(I2);
  }
  jointType(I2) {
    return A.rawmultibodyjointset_jointType(this.__wbg_ptr, I2);
  }
  jointFrameX1(I2) {
    const g2 = A.rawmultibodyjointset_jointFrameX1(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  jointFrameX2(I2) {
    const g2 = A.rawmultibodyjointset_jointFrameX2(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  jointAnchor1(I2) {
    const g2 = A.rawmultibodyjointset_jointAnchor1(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  jointAnchor2(I2) {
    const g2 = A.rawmultibodyjointset_jointAnchor2(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  jointContactsEnabled(I2) {
    return 0 !== A.rawmultibodyjointset_jointContactsEnabled(this.__wbg_ptr, I2);
  }
  jointSetContactsEnabled(I2, g2) {
    A.rawmultibodyjointset_jointSetContactsEnabled(this.__wbg_ptr, I2, g2);
  }
  jointLimitsEnabled(I2, g2) {
    return 0 !== A.rawmultibodyjointset_jointLimitsEnabled(this.__wbg_ptr, I2, g2);
  }
  jointLimitsMin(I2, g2) {
    return A.rawmultibodyjointset_jointLimitsMin(this.__wbg_ptr, I2, g2);
  }
  jointLimitsMax(I2, g2) {
    return A.rawmultibodyjointset_jointLimitsMax(this.__wbg_ptr, I2, g2);
  }
  constructor() {
    const I2 = A.rawmultibodyjointset_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  createJoint(I2, g2, C2, B2) {
    K(I2, AA);
    return A.rawmultibodyjointset_createJoint(this.__wbg_ptr, I2.__wbg_ptr, g2, C2, B2);
  }
  remove(I2, g2) {
    A.rawmultibodyjointset_remove(this.__wbg_ptr, I2, g2);
  }
  contains(I2) {
    return 0 !== A.rawmultibodyjointset_contains(this.__wbg_ptr, I2);
  }
  forEachJointHandle(g2) {
    try {
      A.rawmultibodyjointset_forEachJointHandle(this.__wbg_ptr, y(g2));
    } finally {
      I[J++] = void 0;
    }
  }
  forEachJointAttachedToRigidBody(g2, C2) {
    try {
      A.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, g2, y(C2));
    } finally {
      I[J++] = void 0;
    }
  }
};
var wA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawnarrowphase_free(I2 >>> 0));
var GA = class _GA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_GA.prototype);
    return I2.__wbg_ptr = A2, wA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, wA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawnarrowphase_free(I2);
  }
  constructor() {
    const I2 = A.rawnarrowphase_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  contact_pairs_with(I2, g2) {
    A.rawnarrowphase_contact_pairs_with(this.__wbg_ptr, I2, C(g2));
  }
  contact_pair(I2, g2) {
    const C2 = A.rawnarrowphase_contact_pair(this.__wbg_ptr, I2, g2);
    return 0 === C2 ? void 0 : m.__wrap(C2);
  }
  intersection_pairs_with(I2, g2) {
    A.rawnarrowphase_intersection_pairs_with(this.__wbg_ptr, I2, C(g2));
  }
  intersection_pair(I2, g2) {
    return 0 !== A.rawnarrowphase_intersection_pair(this.__wbg_ptr, I2, g2);
  }
};
var kA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawphysicspipeline_free(I2 >>> 0));
var KA = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, kA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawphysicspipeline_free(I2);
  }
  constructor() {
    const I2 = A.rawphysicspipeline_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  step(I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2) {
    K(I2, xA), K(g2, BA), K(C2, EA), K(B2, H), K(Q2, GA), K(E2, lA), K(i3, n), K(D2, gA), K(o2, SA), K(S2, p), A.rawphysicspipeline_step(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, E2.__wbg_ptr, i3.__wbg_ptr, D2.__wbg_ptr, o2.__wbg_ptr, S2.__wbg_ptr);
  }
  stepWithEvents(I2, g2, B2, Q2, E2, i3, D2, o2, S2, w2, G2, k2, U2, h2) {
    K(I2, xA), K(g2, BA), K(B2, EA), K(Q2, H), K(E2, GA), K(i3, lA), K(D2, n), K(o2, gA), K(S2, SA), K(w2, p), K(G2, _), A.rawphysicspipeline_stepWithEvents(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, E2.__wbg_ptr, i3.__wbg_ptr, D2.__wbg_ptr, o2.__wbg_ptr, S2.__wbg_ptr, w2.__wbg_ptr, G2.__wbg_ptr, C(k2), C(U2), C(h2));
  }
};
var UA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawpointcolliderprojection_free(I2 >>> 0));
var hA = class _hA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_hA.prototype);
    return I2.__wbg_ptr = A2, UA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, UA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawpointcolliderprojection_free(I2);
  }
  colliderHandle() {
    return A.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);
  }
  point() {
    const I2 = A.rawpointcolliderprojection_point(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  isInside() {
    return 0 !== A.rawpointcolliderprojection_isInside(this.__wbg_ptr);
  }
  featureType() {
    return A.rawpointcolliderprojection_featureType(this.__wbg_ptr);
  }
  featureId() {
    try {
      const C2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawpointcolliderprojection_featureId(C2, this.__wbg_ptr);
      var I2 = S()[C2 / 4 + 0], g2 = S()[C2 / 4 + 1];
      return 0 === I2 ? void 0 : g2 >>> 0;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
};
var JA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawpointprojection_free(I2 >>> 0));
var yA = class _yA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_yA.prototype);
    return I2.__wbg_ptr = A2, JA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, JA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawpointprojection_free(I2);
  }
  point() {
    const I2 = A.rawpointprojection_point(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  isInside() {
    return 0 !== A.rawpointprojection_isInside(this.__wbg_ptr);
  }
};
var NA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawquerypipeline_free(I2 >>> 0));
var MA = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, NA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawquerypipeline_free(I2);
  }
  constructor() {
    const I2 = A.rawquerypipeline_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  update(I2) {
    K(I2, n), A.rawquerypipeline_update(this.__wbg_ptr, I2.__wbg_ptr);
  }
  castRay(g2, C2, B2, Q2, i3, D2, o2, S2, w2, G2, k2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA), K(Q2, xA);
      const I2 = A.rawquerypipeline_castRay(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3, D2, o2, !E(S2), E(S2) ? 0 : S2, !E(w2), E(w2) ? 0 : w2, !E(G2), E(G2) ? 0 : G2, y(k2));
      return 0 === I2 ? void 0 : FA.__wrap(I2);
    } finally {
      I[J++] = void 0;
    }
  }
  castRayAndGetNormal(g2, C2, B2, Q2, i3, D2, o2, S2, w2, G2, k2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA), K(Q2, xA);
      const I2 = A.rawquerypipeline_castRayAndGetNormal(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3, D2, o2, !E(S2), E(S2) ? 0 : S2, !E(w2), E(w2) ? 0 : w2, !E(G2), E(G2) ? 0 : G2, y(k2));
      return 0 === I2 ? void 0 : RA.__wrap(I2);
    } finally {
      I[J++] = void 0;
    }
  }
  intersectionsWithRay(g2, C2, B2, Q2, i3, D2, o2, S2, w2, G2, k2, U2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA), K(Q2, xA), A.rawquerypipeline_intersectionsWithRay(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3, D2, y(o2), S2, !E(w2), E(w2) ? 0 : w2, !E(G2), E(G2) ? 0 : G2, !E(k2), E(k2) ? 0 : k2, y(U2));
    } finally {
      I[J++] = void 0, I[J++] = void 0;
    }
  }
  intersectionWithShape(g2, C2, B2, Q2, i3, o2, w2, G2, k2, U2) {
    try {
      const I2 = A.__wbindgen_add_to_stack_pointer(-16);
      K(g2, lA), K(C2, n), K(B2, xA), K(Q2, HA), K(i3, nA), A.rawquerypipeline_intersectionWithShape(I2, this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3.__wbg_ptr, o2, !E(w2), E(w2) ? 0 : w2, !E(G2), E(G2) ? 0 : G2, !E(k2), E(k2) ? 0 : k2, y(U2));
      var h2 = S()[I2 / 4 + 0], N2 = D()[I2 / 8 + 1];
      return 0 === h2 ? void 0 : N2;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16), I[J++] = void 0;
    }
  }
  projectPoint(g2, C2, B2, Q2, i3, D2, o2, S2, w2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA);
      const I2 = A.rawquerypipeline_projectPoint(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2, i3, !E(D2), E(D2) ? 0 : D2, !E(o2), E(o2) ? 0 : o2, !E(S2), E(S2) ? 0 : S2, y(w2));
      return 0 === I2 ? void 0 : hA.__wrap(I2);
    } finally {
      I[J++] = void 0;
    }
  }
  projectPointAndGetFeature(g2, C2, B2, Q2, i3, D2, o2, S2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA);
      const I2 = A.rawquerypipeline_projectPointAndGetFeature(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2, !E(i3), E(i3) ? 0 : i3, !E(D2), E(D2) ? 0 : D2, !E(o2), E(o2) ? 0 : o2, y(S2));
      return 0 === I2 ? void 0 : hA.__wrap(I2);
    } finally {
      I[J++] = void 0;
    }
  }
  intersectionsWithPoint(g2, C2, B2, Q2, i3, D2, o2, S2, w2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA), A.rawquerypipeline_intersectionsWithPoint(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, y(Q2), i3, !E(D2), E(D2) ? 0 : D2, !E(o2), E(o2) ? 0 : o2, !E(S2), E(S2) ? 0 : S2, y(w2));
    } finally {
      I[J++] = void 0, I[J++] = void 0;
    }
  }
  castShape(g2, C2, B2, Q2, i3, D2, o2, S2, w2, G2, k2, U2, h2, N2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA), K(Q2, HA), K(i3, xA), K(D2, nA);
      const I2 = A.rawquerypipeline_castShape(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3.__wbg_ptr, D2.__wbg_ptr, o2, S2, w2, G2, !E(k2), E(k2) ? 0 : k2, !E(U2), E(U2) ? 0 : U2, !E(h2), E(h2) ? 0 : h2, y(N2));
      return 0 === I2 ? void 0 : O.__wrap(I2);
    } finally {
      I[J++] = void 0;
    }
  }
  intersectionsWithShape(g2, C2, B2, Q2, i3, D2, o2, S2, w2, G2, k2) {
    try {
      K(g2, lA), K(C2, n), K(B2, xA), K(Q2, HA), K(i3, nA), A.rawquerypipeline_intersectionsWithShape(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, i3.__wbg_ptr, y(D2), o2, !E(S2), E(S2) ? 0 : S2, !E(w2), E(w2) ? 0 : w2, !E(G2), E(G2) ? 0 : G2, y(k2));
    } finally {
      I[J++] = void 0, I[J++] = void 0;
    }
  }
  collidersWithAabbIntersectingAabb(g2, C2, B2) {
    try {
      K(g2, xA), K(C2, xA), A.rawquerypipeline_collidersWithAabbIntersectingAabb(this.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, y(B2));
    } finally {
      I[J++] = void 0;
    }
  }
};
var aA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawraycolliderhit_free(I2 >>> 0));
var FA = class _FA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_FA.prototype);
    return I2.__wbg_ptr = A2, aA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, aA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawraycolliderhit_free(I2);
  }
  colliderHandle() {
    return A.rawcharactercollision_handle(this.__wbg_ptr);
  }
  timeOfImpact() {
    return A.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);
  }
};
var sA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawraycolliderintersection_free(I2 >>> 0));
var RA = class _RA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_RA.prototype);
    return I2.__wbg_ptr = A2, sA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, sA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawraycolliderintersection_free(I2);
  }
  colliderHandle() {
    return A.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);
  }
  normal() {
    const I2 = A.rawcollidershapecasthit_witness1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  time_of_impact() {
    return A.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);
  }
  featureType() {
    return A.rawpointcolliderprojection_featureType(this.__wbg_ptr);
  }
  featureId() {
    try {
      const C2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawpointcolliderprojection_featureId(C2, this.__wbg_ptr);
      var I2 = S()[C2 / 4 + 0], g2 = S()[C2 / 4 + 1];
      return 0 === I2 ? void 0 : g2 >>> 0;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
};
var cA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawrayintersection_free(I2 >>> 0));
var YA = class _YA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_YA.prototype);
    return I2.__wbg_ptr = A2, cA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, cA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawrayintersection_free(I2);
  }
  normal() {
    const I2 = A.rawcollidershapecasthit_witness1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  time_of_impact() {
    return A.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);
  }
  featureType() {
    return A.rawpointcolliderprojection_featureType(this.__wbg_ptr);
  }
  featureId() {
    try {
      const C2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.rawpointcolliderprojection_featureId(C2, this.__wbg_ptr);
      var I2 = S()[C2 / 4 + 0], g2 = S()[C2 / 4 + 1];
      return 0 === I2 ? void 0 : g2 >>> 0;
    } finally {
      A.__wbindgen_add_to_stack_pointer(16);
    }
  }
};
var qA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawrigidbodyset_free(I2 >>> 0));
var lA = class _lA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_lA.prototype);
    return I2.__wbg_ptr = A2, qA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, qA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawrigidbodyset_free(I2);
  }
  rbTranslation(I2) {
    const g2 = A.rawrigidbodyset_rbTranslation(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbRotation(I2) {
    const g2 = A.rawrigidbodyset_rbRotation(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  rbSleep(I2) {
    A.rawrigidbodyset_rbSleep(this.__wbg_ptr, I2);
  }
  rbIsSleeping(I2) {
    return 0 !== A.rawrigidbodyset_rbIsSleeping(this.__wbg_ptr, I2);
  }
  rbIsMoving(I2) {
    return 0 !== A.rawrigidbodyset_rbIsMoving(this.__wbg_ptr, I2);
  }
  rbNextTranslation(I2) {
    const g2 = A.rawrigidbodyset_rbNextTranslation(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbNextRotation(I2) {
    const g2 = A.rawrigidbodyset_rbNextRotation(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  rbSetTranslation(I2, g2, C2, B2, Q2) {
    A.rawrigidbodyset_rbSetTranslation(this.__wbg_ptr, I2, g2, C2, B2, Q2);
  }
  rbSetRotation(I2, g2, C2, B2, Q2, E2) {
    A.rawrigidbodyset_rbSetRotation(this.__wbg_ptr, I2, g2, C2, B2, Q2, E2);
  }
  rbSetLinvel(I2, g2, C2) {
    K(g2, xA), A.rawrigidbodyset_rbSetLinvel(this.__wbg_ptr, I2, g2.__wbg_ptr, C2);
  }
  rbSetAngvel(I2, g2, C2) {
    K(g2, xA), A.rawrigidbodyset_rbSetAngvel(this.__wbg_ptr, I2, g2.__wbg_ptr, C2);
  }
  rbSetNextKinematicTranslation(I2, g2, C2, B2) {
    A.rawrigidbodyset_rbSetNextKinematicTranslation(this.__wbg_ptr, I2, g2, C2, B2);
  }
  rbSetNextKinematicRotation(I2, g2, C2, B2, Q2) {
    A.rawrigidbodyset_rbSetNextKinematicRotation(this.__wbg_ptr, I2, g2, C2, B2, Q2);
  }
  rbRecomputeMassPropertiesFromColliders(I2, g2) {
    K(g2, n), A.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.__wbg_ptr, I2, g2.__wbg_ptr);
  }
  rbSetAdditionalMass(I2, g2, C2) {
    A.rawrigidbodyset_rbSetAdditionalMass(this.__wbg_ptr, I2, g2, C2);
  }
  rbSetAdditionalMassProperties(I2, g2, C2, B2, Q2, E2) {
    K(C2, xA), K(B2, xA), K(Q2, HA), A.rawrigidbodyset_rbSetAdditionalMassProperties(this.__wbg_ptr, I2, g2, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, E2);
  }
  rbLinvel(I2) {
    const g2 = A.rawrigidbodyset_rbLinvel(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbAngvel(I2) {
    const g2 = A.rawrigidbodyset_rbAngvel(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbLockTranslations(I2, g2, C2) {
    A.rawrigidbodyset_rbLockTranslations(this.__wbg_ptr, I2, g2, C2);
  }
  rbSetEnabledTranslations(I2, g2, C2, B2, Q2) {
    A.rawrigidbodyset_rbSetEnabledTranslations(this.__wbg_ptr, I2, g2, C2, B2, Q2);
  }
  rbLockRotations(I2, g2, C2) {
    A.rawrigidbodyset_rbLockRotations(this.__wbg_ptr, I2, g2, C2);
  }
  rbSetEnabledRotations(I2, g2, C2, B2, Q2) {
    A.rawrigidbodyset_rbSetEnabledRotations(this.__wbg_ptr, I2, g2, C2, B2, Q2);
  }
  rbDominanceGroup(I2) {
    return A.rawrigidbodyset_rbDominanceGroup(this.__wbg_ptr, I2);
  }
  rbSetDominanceGroup(I2, g2) {
    A.rawrigidbodyset_rbSetDominanceGroup(this.__wbg_ptr, I2, g2);
  }
  rbEnableCcd(I2, g2) {
    A.rawrigidbodyset_rbEnableCcd(this.__wbg_ptr, I2, g2);
  }
  rbSetSoftCcdPrediction(I2, g2) {
    A.rawrigidbodyset_rbSetSoftCcdPrediction(this.__wbg_ptr, I2, g2);
  }
  rbMass(I2) {
    return A.rawrigidbodyset_rbMass(this.__wbg_ptr, I2);
  }
  rbInvMass(I2) {
    return A.rawrigidbodyset_rbInvMass(this.__wbg_ptr, I2);
  }
  rbEffectiveInvMass(I2) {
    const g2 = A.rawrigidbodyset_rbEffectiveInvMass(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbLocalCom(I2) {
    const g2 = A.rawrigidbodyset_rbLocalCom(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbWorldCom(I2) {
    const g2 = A.rawrigidbodyset_rbWorldCom(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbInvPrincipalInertiaSqrt(I2) {
    const g2 = A.rawrigidbodyset_rbInvPrincipalInertiaSqrt(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbPrincipalInertiaLocalFrame(I2) {
    const g2 = A.rawrigidbodyset_rbPrincipalInertiaLocalFrame(this.__wbg_ptr, I2);
    return HA.__wrap(g2);
  }
  rbPrincipalInertia(I2) {
    const g2 = A.rawrigidbodyset_rbPrincipalInertia(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbEffectiveWorldInvInertiaSqrt(I2) {
    const g2 = A.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt(this.__wbg_ptr, I2);
    return pA.__wrap(g2);
  }
  rbEffectiveAngularInertia(I2) {
    const g2 = A.rawrigidbodyset_rbEffectiveAngularInertia(this.__wbg_ptr, I2);
    return pA.__wrap(g2);
  }
  rbWakeUp(I2) {
    A.rawrigidbodyset_rbWakeUp(this.__wbg_ptr, I2);
  }
  rbIsCcdEnabled(I2) {
    return 0 !== A.rawrigidbodyset_rbIsCcdEnabled(this.__wbg_ptr, I2);
  }
  rbSoftCcdPrediction(I2) {
    return A.rawrigidbodyset_rbSoftCcdPrediction(this.__wbg_ptr, I2);
  }
  rbNumColliders(I2) {
    return A.rawrigidbodyset_rbNumColliders(this.__wbg_ptr, I2) >>> 0;
  }
  rbCollider(I2, g2) {
    return A.rawrigidbodyset_rbCollider(this.__wbg_ptr, I2, g2);
  }
  rbBodyType(I2) {
    return A.rawrigidbodyset_rbBodyType(this.__wbg_ptr, I2);
  }
  rbSetBodyType(I2, g2, C2) {
    A.rawrigidbodyset_rbSetBodyType(this.__wbg_ptr, I2, g2, C2);
  }
  rbIsFixed(I2) {
    return 0 !== A.rawrigidbodyset_rbIsFixed(this.__wbg_ptr, I2);
  }
  rbIsKinematic(I2) {
    return 0 !== A.rawrigidbodyset_rbIsKinematic(this.__wbg_ptr, I2);
  }
  rbIsDynamic(I2) {
    return 0 !== A.rawrigidbodyset_rbIsDynamic(this.__wbg_ptr, I2);
  }
  rbLinearDamping(I2) {
    return A.rawrigidbodyset_rbLinearDamping(this.__wbg_ptr, I2);
  }
  rbAngularDamping(I2) {
    return A.rawrigidbodyset_rbAngularDamping(this.__wbg_ptr, I2);
  }
  rbSetLinearDamping(I2, g2) {
    A.rawrigidbodyset_rbSetLinearDamping(this.__wbg_ptr, I2, g2);
  }
  rbSetAngularDamping(I2, g2) {
    A.rawrigidbodyset_rbSetAngularDamping(this.__wbg_ptr, I2, g2);
  }
  rbSetEnabled(I2, g2) {
    A.rawrigidbodyset_rbSetEnabled(this.__wbg_ptr, I2, g2);
  }
  rbIsEnabled(I2) {
    return 0 !== A.rawrigidbodyset_rbIsEnabled(this.__wbg_ptr, I2);
  }
  rbGravityScale(I2) {
    return A.rawrigidbodyset_rbGravityScale(this.__wbg_ptr, I2);
  }
  rbSetGravityScale(I2, g2, C2) {
    A.rawrigidbodyset_rbSetGravityScale(this.__wbg_ptr, I2, g2, C2);
  }
  rbResetForces(I2, g2) {
    A.rawrigidbodyset_rbResetForces(this.__wbg_ptr, I2, g2);
  }
  rbResetTorques(I2, g2) {
    A.rawrigidbodyset_rbResetTorques(this.__wbg_ptr, I2, g2);
  }
  rbAddForce(I2, g2, C2) {
    K(g2, xA), A.rawrigidbodyset_rbAddForce(this.__wbg_ptr, I2, g2.__wbg_ptr, C2);
  }
  rbApplyImpulse(I2, g2, C2) {
    K(g2, xA), A.rawrigidbodyset_rbApplyImpulse(this.__wbg_ptr, I2, g2.__wbg_ptr, C2);
  }
  rbAddTorque(I2, g2, C2) {
    K(g2, xA), A.rawrigidbodyset_rbAddTorque(this.__wbg_ptr, I2, g2.__wbg_ptr, C2);
  }
  rbApplyTorqueImpulse(I2, g2, C2) {
    K(g2, xA), A.rawrigidbodyset_rbApplyTorqueImpulse(this.__wbg_ptr, I2, g2.__wbg_ptr, C2);
  }
  rbAddForceAtPoint(I2, g2, C2, B2) {
    K(g2, xA), K(C2, xA), A.rawrigidbodyset_rbAddForceAtPoint(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2);
  }
  rbApplyImpulseAtPoint(I2, g2, C2, B2) {
    K(g2, xA), K(C2, xA), A.rawrigidbodyset_rbApplyImpulseAtPoint(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2);
  }
  rbAdditionalSolverIterations(I2) {
    return A.rawrigidbodyset_rbAdditionalSolverIterations(this.__wbg_ptr, I2) >>> 0;
  }
  rbSetAdditionalSolverIterations(I2, g2) {
    A.rawrigidbodyset_rbSetAdditionalSolverIterations(this.__wbg_ptr, I2, g2);
  }
  rbUserData(I2) {
    return A.rawrigidbodyset_rbUserData(this.__wbg_ptr, I2) >>> 0;
  }
  rbSetUserData(I2, g2) {
    A.rawrigidbodyset_rbSetUserData(this.__wbg_ptr, I2, g2);
  }
  rbUserForce(I2) {
    const g2 = A.rawrigidbodyset_rbUserForce(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  rbUserTorque(I2) {
    const g2 = A.rawrigidbodyset_rbUserTorque(this.__wbg_ptr, I2);
    return xA.__wrap(g2);
  }
  constructor() {
    const I2 = A.rawrigidbodyset_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  createRigidBody(I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2, w2, G2, k2, U2, h2, J2, y2, N2, M2, a2, F2, s2, R2, c2, Y2, q2) {
    K(g2, xA), K(C2, HA), K(i3, xA), K(D2, xA), K(o2, xA), K(S2, xA), K(w2, HA);
    return A.rawrigidbodyset_createRigidBody(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2, Q2, E2, i3.__wbg_ptr, D2.__wbg_ptr, o2.__wbg_ptr, S2.__wbg_ptr, w2.__wbg_ptr, G2, k2, U2, h2, J2, y2, N2, M2, a2, F2, s2, R2, c2, Y2, q2);
  }
  remove(I2, g2, C2, B2, Q2) {
    K(g2, EA), K(C2, n), K(B2, gA), K(Q2, SA), A.rawrigidbodyset_remove(this.__wbg_ptr, I2, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr);
  }
  len() {
    return A.rawcolliderset_len(this.__wbg_ptr) >>> 0;
  }
  contains(I2) {
    return 0 !== A.rawrigidbodyset_contains(this.__wbg_ptr, I2);
  }
  forEachRigidBodyHandle(g2) {
    try {
      A.rawrigidbodyset_forEachRigidBodyHandle(this.__wbg_ptr, y(g2));
    } finally {
      I[J++] = void 0;
    }
  }
  propagateModifiedBodyPositionsToColliders(I2) {
    K(I2, n), A.rawrigidbodyset_propagateModifiedBodyPositionsToColliders(this.__wbg_ptr, I2.__wbg_ptr);
  }
};
var LA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawrotation_free(I2 >>> 0));
var HA = class _HA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_HA.prototype);
    return I2.__wbg_ptr = A2, LA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, LA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawrotation_free(I2);
  }
  constructor(I2, g2, C2, B2) {
    const Q2 = A.rawrotation_new(I2, g2, C2, B2);
    return this.__wbg_ptr = Q2 >>> 0, this;
  }
  static identity() {
    const I2 = A.rawrotation_identity();
    return _HA.__wrap(I2);
  }
  get x() {
    return A.rawrotation_x(this.__wbg_ptr);
  }
  get y() {
    return A.rawintegrationparameters_dt(this.__wbg_ptr);
  }
  get z() {
    return A.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);
  }
  get w() {
    return A.rawrotation_w(this.__wbg_ptr);
  }
};
var tA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawsdpmatrix3_free(I2 >>> 0));
var pA = class _pA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_pA.prototype);
    return I2.__wbg_ptr = A2, tA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, tA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawsdpmatrix3_free(I2);
  }
  elements() {
    return Q(A.rawsdpmatrix3_elements(this.__wbg_ptr));
  }
};
var eA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawserializationpipeline_free(I2 >>> 0));
var rA = class {
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, eA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawserializationpipeline_free(I2);
  }
  constructor() {
    const I2 = A.rawserializationpipeline_new();
    return this.__wbg_ptr = I2 >>> 0, this;
  }
  serializeAll(I2, g2, C2, B2, E2, i3, D2, o2, S2) {
    K(I2, xA), K(g2, BA), K(C2, EA), K(B2, H), K(E2, GA), K(i3, lA), K(D2, n), K(o2, gA), K(S2, SA);
    return Q(A.rawserializationpipeline_serializeAll(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, E2.__wbg_ptr, i3.__wbg_ptr, D2.__wbg_ptr, o2.__wbg_ptr, S2.__wbg_ptr));
  }
  deserializeAll(I2) {
    const g2 = A.rawserializationpipeline_deserializeAll(this.__wbg_ptr, C(I2));
    return 0 === g2 ? void 0 : P.__wrap(g2);
  }
};
var dA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawshape_free(I2 >>> 0));
var nA = class _nA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_nA.prototype);
    return I2.__wbg_ptr = A2, dA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, dA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawshape_free(I2);
  }
  static cuboid(I2, g2, C2) {
    const B2 = A.rawshape_cuboid(I2, g2, C2);
    return _nA.__wrap(B2);
  }
  static roundCuboid(I2, g2, C2, B2) {
    const Q2 = A.rawshape_roundCuboid(I2, g2, C2, B2);
    return _nA.__wrap(Q2);
  }
  static ball(I2) {
    const g2 = A.rawshape_ball(I2);
    return _nA.__wrap(g2);
  }
  static halfspace(I2) {
    K(I2, xA);
    const g2 = A.rawshape_halfspace(I2.__wbg_ptr);
    return _nA.__wrap(g2);
  }
  static capsule(I2, g2) {
    const C2 = A.rawshape_capsule(I2, g2);
    return _nA.__wrap(C2);
  }
  static cylinder(I2, g2) {
    const C2 = A.rawshape_cylinder(I2, g2);
    return _nA.__wrap(C2);
  }
  static roundCylinder(I2, g2, C2) {
    const B2 = A.rawshape_roundCylinder(I2, g2, C2);
    return _nA.__wrap(B2);
  }
  static cone(I2, g2) {
    const C2 = A.rawshape_cone(I2, g2);
    return _nA.__wrap(C2);
  }
  static roundCone(I2, g2, C2) {
    const B2 = A.rawshape_roundCone(I2, g2, C2);
    return _nA.__wrap(B2);
  }
  static polyline(I2, g2) {
    const C2 = s(I2, A.__wbindgen_malloc), B2 = F, Q2 = R(g2, A.__wbindgen_malloc), E2 = F, i3 = A.rawshape_polyline(C2, B2, Q2, E2);
    return _nA.__wrap(i3);
  }
  static trimesh(I2, g2, C2) {
    const B2 = s(I2, A.__wbindgen_malloc), Q2 = F, E2 = R(g2, A.__wbindgen_malloc), i3 = F, D2 = A.rawshape_trimesh(B2, Q2, E2, i3, C2);
    return _nA.__wrap(D2);
  }
  static heightfield(I2, g2, C2, B2, Q2) {
    const E2 = s(C2, A.__wbindgen_malloc), i3 = F;
    K(B2, xA);
    const D2 = A.rawshape_heightfield(I2, g2, E2, i3, B2.__wbg_ptr, Q2);
    return _nA.__wrap(D2);
  }
  static segment(I2, g2) {
    K(I2, xA), K(g2, xA);
    const C2 = A.rawshape_segment(I2.__wbg_ptr, g2.__wbg_ptr);
    return _nA.__wrap(C2);
  }
  static triangle(I2, g2, C2) {
    K(I2, xA), K(g2, xA), K(C2, xA);
    const B2 = A.rawshape_triangle(I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr);
    return _nA.__wrap(B2);
  }
  static roundTriangle(I2, g2, C2, B2) {
    K(I2, xA), K(g2, xA), K(C2, xA);
    const Q2 = A.rawshape_roundTriangle(I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2);
    return _nA.__wrap(Q2);
  }
  static convexHull(I2) {
    const g2 = s(I2, A.__wbindgen_malloc), C2 = F, B2 = A.rawshape_convexHull(g2, C2);
    return 0 === B2 ? void 0 : _nA.__wrap(B2);
  }
  static roundConvexHull(I2, g2) {
    const C2 = s(I2, A.__wbindgen_malloc), B2 = F, Q2 = A.rawshape_roundConvexHull(C2, B2, g2);
    return 0 === Q2 ? void 0 : _nA.__wrap(Q2);
  }
  static convexMesh(I2, g2) {
    const C2 = s(I2, A.__wbindgen_malloc), B2 = F, Q2 = R(g2, A.__wbindgen_malloc), E2 = F, i3 = A.rawshape_convexMesh(C2, B2, Q2, E2);
    return 0 === i3 ? void 0 : _nA.__wrap(i3);
  }
  static roundConvexMesh(I2, g2, C2) {
    const B2 = s(I2, A.__wbindgen_malloc), Q2 = F, E2 = R(g2, A.__wbindgen_malloc), i3 = F, D2 = A.rawshape_roundConvexMesh(B2, Q2, E2, i3, C2);
    return 0 === D2 ? void 0 : _nA.__wrap(D2);
  }
  castShape(I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2) {
    K(I2, xA), K(g2, HA), K(C2, xA), K(B2, _nA), K(Q2, xA), K(E2, HA), K(i3, xA);
    const w2 = A.rawshape_castShape(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, E2.__wbg_ptr, i3.__wbg_ptr, D2, o2, S2);
    return 0 === w2 ? void 0 : OA.__wrap(w2);
  }
  intersectsShape(I2, g2, C2, B2, Q2) {
    K(I2, xA), K(g2, HA), K(C2, _nA), K(B2, xA), K(Q2, HA);
    return 0 !== A.rawshape_intersectsShape(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr);
  }
  contactShape(I2, g2, C2, B2, Q2, E2) {
    K(I2, xA), K(g2, HA), K(C2, _nA), K(B2, xA), K(Q2, HA);
    const i3 = A.rawshape_contactShape(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2.__wbg_ptr, E2);
    return 0 === i3 ? void 0 : bA.__wrap(i3);
  }
  containsPoint(I2, g2, C2) {
    K(I2, xA), K(g2, HA), K(C2, xA);
    return 0 !== A.rawshape_containsPoint(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr);
  }
  projectPoint(I2, g2, C2, B2) {
    K(I2, xA), K(g2, HA), K(C2, xA);
    const Q2 = A.rawshape_projectPoint(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2);
    return yA.__wrap(Q2);
  }
  intersectsRay(I2, g2, C2, B2, Q2) {
    K(I2, xA), K(g2, HA), K(C2, xA), K(B2, xA);
    return 0 !== A.rawshape_intersectsRay(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2);
  }
  castRay(I2, g2, C2, B2, Q2, E2) {
    K(I2, xA), K(g2, HA), K(C2, xA), K(B2, xA);
    return A.rawshape_castRay(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2, E2);
  }
  castRayAndGetNormal(I2, g2, C2, B2, Q2, E2) {
    K(I2, xA), K(g2, HA), K(C2, xA), K(B2, xA);
    const i3 = A.rawshape_castRayAndGetNormal(this.__wbg_ptr, I2.__wbg_ptr, g2.__wbg_ptr, C2.__wbg_ptr, B2.__wbg_ptr, Q2, E2);
    return 0 === i3 ? void 0 : YA.__wrap(i3);
  }
};
var TA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawshapecasthit_free(I2 >>> 0));
var OA = class _OA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_OA.prototype);
    return I2.__wbg_ptr = A2, TA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, TA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawshapecasthit_free(I2);
  }
  time_of_impact() {
    return A.rawrotation_x(this.__wbg_ptr);
  }
  witness1() {
    const I2 = A.rawshapecasthit_witness1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  witness2() {
    const I2 = A.rawcontactforceevent_total_force(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  normal1() {
    const I2 = A.rawshapecasthit_normal1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  normal2() {
    const I2 = A.rawshapecasthit_normal2(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
};
var ZA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawshapecontact_free(I2 >>> 0));
var bA = class _bA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_bA.prototype);
    return I2.__wbg_ptr = A2, ZA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, ZA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawshapecontact_free(I2);
  }
  distance() {
    return A.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);
  }
  point1() {
    const I2 = A.rawpointprojection_point(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  point2() {
    const I2 = A.rawcollidershapecasthit_witness1(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  normal1() {
    const I2 = A.rawcollidershapecasthit_witness2(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
  normal2() {
    const I2 = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);
    return xA.__wrap(I2);
  }
};
var WA = "undefined" == typeof FinalizationRegistry ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((I2) => A.__wbg_rawvector_free(I2 >>> 0));
var xA = class _xA {
  static __wrap(A2) {
    A2 >>>= 0;
    const I2 = Object.create(_xA.prototype);
    return I2.__wbg_ptr = A2, WA.register(I2, I2.__wbg_ptr, I2), I2;
  }
  __destroy_into_raw() {
    const A2 = this.__wbg_ptr;
    return this.__wbg_ptr = 0, WA.unregister(this), A2;
  }
  free() {
    const I2 = this.__destroy_into_raw();
    A.__wbg_rawvector_free(I2);
  }
  static zero() {
    const I2 = A.rawvector_zero();
    return _xA.__wrap(I2);
  }
  constructor(I2, g2, C2) {
    const B2 = A.rawvector_new(I2, g2, C2);
    return this.__wbg_ptr = B2 >>> 0, this;
  }
  get x() {
    return A.rawrotation_x(this.__wbg_ptr);
  }
  set x(I2) {
    A.rawvector_set_x(this.__wbg_ptr, I2);
  }
  get y() {
    return A.rawintegrationparameters_dt(this.__wbg_ptr);
  }
  set y(I2) {
    A.rawintegrationparameters_set_dt(this.__wbg_ptr, I2);
  }
  get z() {
    return A.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);
  }
  set z(I2) {
    A.rawvector_set_z(this.__wbg_ptr, I2);
  }
  xyz() {
    const I2 = A.rawvector_xyz(this.__wbg_ptr);
    return _xA.__wrap(I2);
  }
  yxz() {
    const I2 = A.rawvector_yxz(this.__wbg_ptr);
    return _xA.__wrap(I2);
  }
  zxy() {
    const I2 = A.rawvector_zxy(this.__wbg_ptr);
    return _xA.__wrap(I2);
  }
  xzy() {
    const I2 = A.rawvector_xzy(this.__wbg_ptr);
    return _xA.__wrap(I2);
  }
  yzx() {
    const I2 = A.rawvector_yzx(this.__wbg_ptr);
    return _xA.__wrap(I2);
  }
  zyx() {
    const I2 = A.rawvector_zyx(this.__wbg_ptr);
    return _xA.__wrap(I2);
  }
};
async function jA(I2) {
  if (void 0 !== A) return A;
  void 0 === I2 && (I2 = new URL("rapier_wasm3d_bg.wasm", "<deleted>"));
  const g2 = function() {
    const I3 = { wbg: {} };
    return I3.wbg.__wbindgen_number_new = function(A2) {
      return C(A2);
    }, I3.wbg.__wbindgen_boolean_get = function(A2) {
      const I4 = B(A2);
      return "boolean" == typeof I4 ? I4 ? 1 : 0 : 2;
    }, I3.wbg.__wbindgen_object_drop_ref = function(A2) {
      Q(A2);
    }, I3.wbg.__wbindgen_number_get = function(A2, I4) {
      const g3 = B(I4), C2 = "number" == typeof g3 ? g3 : void 0;
      D()[A2 / 8 + 1] = E(C2) ? 0 : C2, S()[A2 / 4 + 0] = !E(C2);
    }, I3.wbg.__wbindgen_is_function = function(A2) {
      return "function" == typeof B(A2);
    }, I3.wbg.__wbg_rawraycolliderintersection_new = function(A2) {
      return C(RA.__wrap(A2));
    }, I3.wbg.__wbg_rawcontactforceevent_new = function(A2) {
      return C(b.__wrap(A2));
    }, I3.wbg.__wbg_call_b3ca7c6051f9bec1 = function() {
      return c(function(A2, I4, g3) {
        return C(B(A2).call(B(I4), B(g3)));
      }, arguments);
    }, I3.wbg.__wbg_call_8e7cb608789c2528 = function() {
      return c(function(A2, I4, g3, Q2) {
        return C(B(A2).call(B(I4), B(g3), B(Q2)));
      }, arguments);
    }, I3.wbg.__wbg_call_938992c832f74314 = function() {
      return c(function(A2, I4, g3, Q2, E2) {
        return C(B(A2).call(B(I4), B(g3), B(Q2), B(E2)));
      }, arguments);
    }, I3.wbg.__wbg_bind_4d857b598695205e = function(A2, I4, g3, Q2) {
      return C(B(A2).bind(B(I4), B(g3), B(Q2)));
    }, I3.wbg.__wbg_buffer_12d079cc21e14bdb = function(A2) {
      return C(B(A2).buffer);
    }, I3.wbg.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb = function(A2, I4, g3) {
      return C(new Uint8Array(B(A2), I4 >>> 0, g3 >>> 0));
    }, I3.wbg.__wbg_new_63b92bc8671ed464 = function(A2) {
      return C(new Uint8Array(B(A2)));
    }, I3.wbg.__wbg_set_a47bac70306a19a7 = function(A2, I4, g3) {
      B(A2).set(B(I4), g3 >>> 0);
    }, I3.wbg.__wbg_length_c20a40f15020d68a = function(A2) {
      return B(A2).length;
    }, I3.wbg.__wbg_newwithbyteoffsetandlength_4a659d079a1650e0 = function(A2, I4, g3) {
      return C(new Float32Array(B(A2), I4 >>> 0, g3 >>> 0));
    }, I3.wbg.__wbg_set_bd975934d1b1fddb = function(A2, I4, g3) {
      B(A2).set(B(I4), g3 >>> 0);
    }, I3.wbg.__wbg_length_d25bbcbc3367f684 = function(A2) {
      return B(A2).length;
    }, I3.wbg.__wbg_newwithlength_1e8b839a06de01c5 = function(A2) {
      return C(new Float32Array(A2 >>> 0));
    }, I3.wbg.__wbindgen_throw = function(A2, I4) {
      throw new Error(k(A2, I4));
    }, I3.wbg.__wbindgen_memory = function() {
      return C(A.memory);
    }, I3;
  }();
  ("string" == typeof I2 || "function" == typeof Request && I2 instanceof Request || "function" == typeof URL && I2 instanceof URL) && (I2 = fetch(I2));
  const { instance: w2, module: K2 } = await async function(A2, I3) {
    if ("function" == typeof Response && A2 instanceof Response) {
      if ("function" == typeof WebAssembly.instantiateStreaming) try {
        return await WebAssembly.instantiateStreaming(A2, I3);
      } catch (I4) {
        if ("application/wasm" == A2.headers.get("Content-Type")) throw I4;
        console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", I4);
      }
      const g3 = await A2.arrayBuffer();
      return await WebAssembly.instantiate(g3, I3);
    }
    {
      const g3 = await WebAssembly.instantiate(A2, I3);
      return g3 instanceof WebAssembly.Instance ? { instance: g3, module: A2 } : g3;
    }
  }(await I2, g2);
  return function(I3, g3) {
    return A = I3.exports, jA.__wbindgen_wasm_module = g3, U = null, i2 = null, o = null, M = null, G = null, A;
  }(w2, K2);
}
var mA = class {
  constructor(A2, I2, g2) {
    this.x = A2, this.y = I2, this.z = g2;
  }
};
var fA = class _fA {
  static new(A2, I2, g2) {
    return new mA(A2, I2, g2);
  }
  static intoRaw(A2) {
    return new xA(A2.x, A2.y, A2.z);
  }
  static zeros() {
    return _fA.new(0, 0, 0);
  }
  static fromRaw(A2) {
    if (!A2) return null;
    let I2 = _fA.new(A2.x, A2.y, A2.z);
    return A2.free(), I2;
  }
  static copy(A2, I2) {
    A2.x = I2.x, A2.y = I2.y, A2.z = I2.z;
  }
};
var VA = class {
  constructor(A2, I2, g2, C2) {
    this.x = A2, this.y = I2, this.z = g2, this.w = C2;
  }
};
var XA = class {
  static identity() {
    return new VA(0, 0, 0, 1);
  }
  static fromRaw(A2) {
    if (!A2) return null;
    let I2 = new VA(A2.x, A2.y, A2.z, A2.w);
    return A2.free(), I2;
  }
  static intoRaw(A2) {
    return new HA(A2.x, A2.y, A2.z, A2.w);
  }
  static copy(A2, I2) {
    A2.x = I2.x, A2.y = I2.y, A2.z = I2.z, A2.w = I2.w;
  }
};
var PA = class {
  get m11() {
    return this.elements[0];
  }
  get m12() {
    return this.elements[1];
  }
  get m21() {
    return this.m12;
  }
  get m13() {
    return this.elements[2];
  }
  get m31() {
    return this.m13;
  }
  get m22() {
    return this.elements[3];
  }
  get m23() {
    return this.elements[4];
  }
  get m32() {
    return this.m23;
  }
  get m33() {
    return this.elements[5];
  }
  constructor(A2) {
    this.elements = A2;
  }
};
var uA = class {
  static fromRaw(A2) {
    const I2 = new PA(A2.elements());
    return A2.free(), I2;
  }
};
var zA;
var vA;
var _A;
var $A;
var AI;
var II;
var gI;
var CI;
var BI;
var QI;
var EI;
var iI;
var DI;
var oI;
var SI;
!function(A2) {
  A2[A2.Dynamic = 0] = "Dynamic", A2[A2.Fixed = 1] = "Fixed", A2[A2.KinematicPositionBased = 2] = "KinematicPositionBased", A2[A2.KinematicVelocityBased = 3] = "KinematicVelocityBased";
}(zA || (zA = {}));
var wI = class {
  constructor(A2, I2, g2) {
    this.rawSet = A2, this.colliderSet = I2, this.handle = g2;
  }
  finalizeDeserialization(A2) {
    this.colliderSet = A2;
  }
  isValid() {
    return this.rawSet.contains(this.handle);
  }
  lockTranslations(A2, I2) {
    return this.rawSet.rbLockTranslations(this.handle, A2, I2);
  }
  lockRotations(A2, I2) {
    return this.rawSet.rbLockRotations(this.handle, A2, I2);
  }
  setEnabledTranslations(A2, I2, g2, C2) {
    return this.rawSet.rbSetEnabledTranslations(this.handle, A2, I2, g2, C2);
  }
  restrictTranslations(A2, I2, g2, C2) {
    this.setEnabledTranslations(A2, I2, g2, C2);
  }
  setEnabledRotations(A2, I2, g2, C2) {
    return this.rawSet.rbSetEnabledRotations(this.handle, A2, I2, g2, C2);
  }
  restrictRotations(A2, I2, g2, C2) {
    this.setEnabledRotations(A2, I2, g2, C2);
  }
  dominanceGroup() {
    return this.rawSet.rbDominanceGroup(this.handle);
  }
  setDominanceGroup(A2) {
    this.rawSet.rbSetDominanceGroup(this.handle, A2);
  }
  additionalSolverIterations() {
    return this.rawSet.rbAdditionalSolverIterations(this.handle);
  }
  setAdditionalSolverIterations(A2) {
    this.rawSet.rbSetAdditionalSolverIterations(this.handle, A2);
  }
  enableCcd(A2) {
    this.rawSet.rbEnableCcd(this.handle, A2);
  }
  setSoftCcdPrediction(A2) {
    this.rawSet.rbSetSoftCcdPrediction(this.handle, A2);
  }
  softCcdPrediction() {
    return this.rawSet.rbSoftCcdPrediction(this.handle);
  }
  translation() {
    let A2 = this.rawSet.rbTranslation(this.handle);
    return fA.fromRaw(A2);
  }
  rotation() {
    let A2 = this.rawSet.rbRotation(this.handle);
    return XA.fromRaw(A2);
  }
  nextTranslation() {
    let A2 = this.rawSet.rbNextTranslation(this.handle);
    return fA.fromRaw(A2);
  }
  nextRotation() {
    let A2 = this.rawSet.rbNextRotation(this.handle);
    return XA.fromRaw(A2);
  }
  setTranslation(A2, I2) {
    this.rawSet.rbSetTranslation(this.handle, A2.x, A2.y, A2.z, I2);
  }
  setLinvel(A2, I2) {
    let g2 = fA.intoRaw(A2);
    this.rawSet.rbSetLinvel(this.handle, g2, I2), g2.free();
  }
  gravityScale() {
    return this.rawSet.rbGravityScale(this.handle);
  }
  setGravityScale(A2, I2) {
    this.rawSet.rbSetGravityScale(this.handle, A2, I2);
  }
  setRotation(A2, I2) {
    this.rawSet.rbSetRotation(this.handle, A2.x, A2.y, A2.z, A2.w, I2);
  }
  setAngvel(A2, I2) {
    let g2 = fA.intoRaw(A2);
    this.rawSet.rbSetAngvel(this.handle, g2, I2), g2.free();
  }
  setNextKinematicTranslation(A2) {
    this.rawSet.rbSetNextKinematicTranslation(this.handle, A2.x, A2.y, A2.z);
  }
  setNextKinematicRotation(A2) {
    this.rawSet.rbSetNextKinematicRotation(this.handle, A2.x, A2.y, A2.z, A2.w);
  }
  linvel() {
    return fA.fromRaw(this.rawSet.rbLinvel(this.handle));
  }
  angvel() {
    return fA.fromRaw(this.rawSet.rbAngvel(this.handle));
  }
  mass() {
    return this.rawSet.rbMass(this.handle);
  }
  effectiveInvMass() {
    return fA.fromRaw(this.rawSet.rbEffectiveInvMass(this.handle));
  }
  invMass() {
    return this.rawSet.rbInvMass(this.handle);
  }
  localCom() {
    return fA.fromRaw(this.rawSet.rbLocalCom(this.handle));
  }
  worldCom() {
    return fA.fromRaw(this.rawSet.rbWorldCom(this.handle));
  }
  invPrincipalInertiaSqrt() {
    return fA.fromRaw(this.rawSet.rbInvPrincipalInertiaSqrt(this.handle));
  }
  principalInertia() {
    return fA.fromRaw(this.rawSet.rbPrincipalInertia(this.handle));
  }
  principalInertiaLocalFrame() {
    return XA.fromRaw(this.rawSet.rbPrincipalInertiaLocalFrame(this.handle));
  }
  effectiveWorldInvInertiaSqrt() {
    return uA.fromRaw(this.rawSet.rbEffectiveWorldInvInertiaSqrt(this.handle));
  }
  effectiveAngularInertia() {
    return uA.fromRaw(this.rawSet.rbEffectiveAngularInertia(this.handle));
  }
  sleep() {
    this.rawSet.rbSleep(this.handle);
  }
  wakeUp() {
    this.rawSet.rbWakeUp(this.handle);
  }
  isCcdEnabled() {
    return this.rawSet.rbIsCcdEnabled(this.handle);
  }
  numColliders() {
    return this.rawSet.rbNumColliders(this.handle);
  }
  collider(A2) {
    return this.colliderSet.get(this.rawSet.rbCollider(this.handle, A2));
  }
  setEnabled(A2) {
    this.rawSet.rbSetEnabled(this.handle, A2);
  }
  isEnabled() {
    return this.rawSet.rbIsEnabled(this.handle);
  }
  bodyType() {
    return this.rawSet.rbBodyType(this.handle);
  }
  setBodyType(A2, I2) {
    return this.rawSet.rbSetBodyType(this.handle, A2, I2);
  }
  isSleeping() {
    return this.rawSet.rbIsSleeping(this.handle);
  }
  isMoving() {
    return this.rawSet.rbIsMoving(this.handle);
  }
  isFixed() {
    return this.rawSet.rbIsFixed(this.handle);
  }
  isKinematic() {
    return this.rawSet.rbIsKinematic(this.handle);
  }
  isDynamic() {
    return this.rawSet.rbIsDynamic(this.handle);
  }
  linearDamping() {
    return this.rawSet.rbLinearDamping(this.handle);
  }
  angularDamping() {
    return this.rawSet.rbAngularDamping(this.handle);
  }
  setLinearDamping(A2) {
    this.rawSet.rbSetLinearDamping(this.handle, A2);
  }
  recomputeMassPropertiesFromColliders() {
    this.rawSet.rbRecomputeMassPropertiesFromColliders(this.handle, this.colliderSet.raw);
  }
  setAdditionalMass(A2, I2) {
    this.rawSet.rbSetAdditionalMass(this.handle, A2, I2);
  }
  setAdditionalMassProperties(A2, I2, g2, C2, B2) {
    let Q2 = fA.intoRaw(I2), E2 = fA.intoRaw(g2), i3 = XA.intoRaw(C2);
    this.rawSet.rbSetAdditionalMassProperties(this.handle, A2, Q2, E2, i3, B2), Q2.free(), E2.free(), i3.free();
  }
  setAngularDamping(A2) {
    this.rawSet.rbSetAngularDamping(this.handle, A2);
  }
  resetForces(A2) {
    this.rawSet.rbResetForces(this.handle, A2);
  }
  resetTorques(A2) {
    this.rawSet.rbResetTorques(this.handle, A2);
  }
  addForce(A2, I2) {
    const g2 = fA.intoRaw(A2);
    this.rawSet.rbAddForce(this.handle, g2, I2), g2.free();
  }
  applyImpulse(A2, I2) {
    const g2 = fA.intoRaw(A2);
    this.rawSet.rbApplyImpulse(this.handle, g2, I2), g2.free();
  }
  addTorque(A2, I2) {
    const g2 = fA.intoRaw(A2);
    this.rawSet.rbAddTorque(this.handle, g2, I2), g2.free();
  }
  applyTorqueImpulse(A2, I2) {
    const g2 = fA.intoRaw(A2);
    this.rawSet.rbApplyTorqueImpulse(this.handle, g2, I2), g2.free();
  }
  addForceAtPoint(A2, I2, g2) {
    const C2 = fA.intoRaw(A2), B2 = fA.intoRaw(I2);
    this.rawSet.rbAddForceAtPoint(this.handle, C2, B2, g2), C2.free(), B2.free();
  }
  applyImpulseAtPoint(A2, I2, g2) {
    const C2 = fA.intoRaw(A2), B2 = fA.intoRaw(I2);
    this.rawSet.rbApplyImpulseAtPoint(this.handle, C2, B2, g2), C2.free(), B2.free();
  }
  userForce() {
    return fA.fromRaw(this.rawSet.rbUserForce(this.handle));
  }
  userTorque() {
    return fA.fromRaw(this.rawSet.rbUserTorque(this.handle));
  }
};
var GI = class _GI {
  constructor(A2) {
    this.enabled = true, this.status = A2, this.translation = fA.zeros(), this.rotation = XA.identity(), this.gravityScale = 1, this.linvel = fA.zeros(), this.mass = 0, this.massOnly = false, this.centerOfMass = fA.zeros(), this.translationsEnabledX = true, this.translationsEnabledY = true, this.angvel = fA.zeros(), this.principalAngularInertia = fA.zeros(), this.angularInertiaLocalFrame = XA.identity(), this.translationsEnabledZ = true, this.rotationsEnabledX = true, this.rotationsEnabledY = true, this.rotationsEnabledZ = true, this.linearDamping = 0, this.angularDamping = 0, this.canSleep = true, this.sleeping = false, this.ccdEnabled = false, this.softCcdPrediction = 0, this.dominanceGroup = 0, this.additionalSolverIterations = 0;
  }
  static dynamic() {
    return new _GI(zA.Dynamic);
  }
  static kinematicPositionBased() {
    return new _GI(zA.KinematicPositionBased);
  }
  static kinematicVelocityBased() {
    return new _GI(zA.KinematicVelocityBased);
  }
  static fixed() {
    return new _GI(zA.Fixed);
  }
  static newDynamic() {
    return new _GI(zA.Dynamic);
  }
  static newKinematicPositionBased() {
    return new _GI(zA.KinematicPositionBased);
  }
  static newKinematicVelocityBased() {
    return new _GI(zA.KinematicVelocityBased);
  }
  static newStatic() {
    return new _GI(zA.Fixed);
  }
  setDominanceGroup(A2) {
    return this.dominanceGroup = A2, this;
  }
  setAdditionalSolverIterations(A2) {
    return this.additionalSolverIterations = A2, this;
  }
  setEnabled(A2) {
    return this.enabled = A2, this;
  }
  setTranslation(A2, I2, g2) {
    if ("number" != typeof A2 || "number" != typeof I2 || "number" != typeof g2) throw TypeError("The translation components must be numbers.");
    return this.translation = { x: A2, y: I2, z: g2 }, this;
  }
  setRotation(A2) {
    return XA.copy(this.rotation, A2), this;
  }
  setGravityScale(A2) {
    return this.gravityScale = A2, this;
  }
  setAdditionalMass(A2) {
    return this.mass = A2, this.massOnly = true, this;
  }
  setLinvel(A2, I2, g2) {
    if ("number" != typeof A2 || "number" != typeof I2 || "number" != typeof g2) throw TypeError("The linvel components must be numbers.");
    return this.linvel = { x: A2, y: I2, z: g2 }, this;
  }
  setAngvel(A2) {
    return fA.copy(this.angvel, A2), this;
  }
  setAdditionalMassProperties(A2, I2, g2, C2) {
    return this.mass = A2, fA.copy(this.centerOfMass, I2), fA.copy(this.principalAngularInertia, g2), XA.copy(this.angularInertiaLocalFrame, C2), this.massOnly = false, this;
  }
  enabledTranslations(A2, I2, g2) {
    return this.translationsEnabledX = A2, this.translationsEnabledY = I2, this.translationsEnabledZ = g2, this;
  }
  restrictTranslations(A2, I2, g2) {
    return this.enabledTranslations(A2, I2, g2);
  }
  lockTranslations() {
    return this.enabledTranslations(false, false, false);
  }
  enabledRotations(A2, I2, g2) {
    return this.rotationsEnabledX = A2, this.rotationsEnabledY = I2, this.rotationsEnabledZ = g2, this;
  }
  restrictRotations(A2, I2, g2) {
    return this.enabledRotations(A2, I2, g2);
  }
  lockRotations() {
    return this.restrictRotations(false, false, false);
  }
  setLinearDamping(A2) {
    return this.linearDamping = A2, this;
  }
  setAngularDamping(A2) {
    return this.angularDamping = A2, this;
  }
  setCanSleep(A2) {
    return this.canSleep = A2, this;
  }
  setSleeping(A2) {
    return this.sleeping = A2, this;
  }
  setCcdEnabled(A2) {
    return this.ccdEnabled = A2, this;
  }
  setSoftCcdPrediction(A2) {
    return this.softCcdPrediction = A2, this;
  }
  setUserData(A2) {
    return this.userData = A2, this;
  }
};
var kI = class {
  constructor() {
    this.fconv = new Float64Array(1), this.uconv = new Uint32Array(this.fconv.buffer), this.data = new Array(), this.size = 0;
  }
  set(A2, I2) {
    let g2 = this.index(A2);
    for (; this.data.length <= g2; ) this.data.push(null);
    null == this.data[g2] && (this.size += 1), this.data[g2] = I2;
  }
  len() {
    return this.size;
  }
  delete(A2) {
    let I2 = this.index(A2);
    I2 < this.data.length && (null != this.data[I2] && (this.size -= 1), this.data[I2] = null);
  }
  clear() {
    this.data = new Array();
  }
  get(A2) {
    let I2 = this.index(A2);
    return I2 < this.data.length ? this.data[I2] : null;
  }
  forEach(A2) {
    for (const I2 of this.data) null != I2 && A2(I2);
  }
  getAll() {
    return this.data.filter((A2) => null != A2);
  }
  index(A2) {
    return this.fconv[0] = A2, this.uconv[0];
  }
};
var KI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new lA(), this.map = new kI(), A2 && A2.forEachRigidBodyHandle((I2) => {
      this.map.set(I2, new wI(A2, null, I2));
    });
  }
  finalizeDeserialization(A2) {
    this.map.forEach((I2) => I2.finalizeDeserialization(A2));
  }
  createRigidBody(A2, I2) {
    let g2 = fA.intoRaw(I2.translation), C2 = XA.intoRaw(I2.rotation), B2 = fA.intoRaw(I2.linvel), Q2 = fA.intoRaw(I2.centerOfMass), E2 = fA.intoRaw(I2.angvel), i3 = fA.intoRaw(I2.principalAngularInertia), D2 = XA.intoRaw(I2.angularInertiaLocalFrame), o2 = this.raw.createRigidBody(I2.enabled, g2, C2, I2.gravityScale, I2.mass, I2.massOnly, Q2, B2, E2, i3, D2, I2.translationsEnabledX, I2.translationsEnabledY, I2.translationsEnabledZ, I2.rotationsEnabledX, I2.rotationsEnabledY, I2.rotationsEnabledZ, I2.linearDamping, I2.angularDamping, I2.status, I2.canSleep, I2.sleeping, I2.softCcdPrediction, I2.ccdEnabled, I2.dominanceGroup, I2.additionalSolverIterations);
    g2.free(), C2.free(), B2.free(), Q2.free(), E2.free(), i3.free(), D2.free();
    const S2 = new wI(this.raw, A2, o2);
    return S2.userData = I2.userData, this.map.set(o2, S2), S2;
  }
  remove(A2, I2, g2, C2, B2) {
    for (let I3 = 0; I3 < this.raw.rbNumColliders(A2); I3 += 1) g2.unmap(this.raw.rbCollider(A2, I3));
    C2.forEachJointHandleAttachedToRigidBody(A2, (A3) => C2.unmap(A3)), B2.forEachJointHandleAttachedToRigidBody(A2, (A3) => B2.unmap(A3)), this.raw.remove(A2, I2.raw, g2.raw, C2.raw, B2.raw), this.map.delete(A2);
  }
  len() {
    return this.map.len();
  }
  contains(A2) {
    return null != this.get(A2);
  }
  get(A2) {
    return this.map.get(A2);
  }
  forEach(A2) {
    this.map.forEach(A2);
  }
  forEachActiveRigidBody(A2, I2) {
    A2.forEachActiveRigidBodyHandle((A3) => {
      I2(this.get(A3));
    });
  }
  getAll() {
    return this.map.getAll();
  }
};
var UI = class {
  constructor(A2) {
    this.raw = A2 || new BA();
  }
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  get dt() {
    return this.raw.dt;
  }
  get contact_erp() {
    return this.raw.contact_erp;
  }
  get lengthUnit() {
    return this.raw.lengthUnit;
  }
  get normalizedAllowedLinearError() {
    return this.raw.normalizedAllowedLinearError;
  }
  get normalizedPredictionDistance() {
    return this.raw.normalizedPredictionDistance;
  }
  get numSolverIterations() {
    return this.raw.numSolverIterations;
  }
  get numAdditionalFrictionIterations() {
    return this.raw.numAdditionalFrictionIterations;
  }
  get numInternalPgsIterations() {
    return this.raw.numInternalPgsIterations;
  }
  get minIslandSize() {
    return this.raw.minIslandSize;
  }
  get maxCcdSubsteps() {
    return this.raw.maxCcdSubsteps;
  }
  set dt(A2) {
    this.raw.dt = A2;
  }
  set contact_natural_frequency(A2) {
    this.raw.contact_natural_frequency = A2;
  }
  set lengthUnit(A2) {
    this.raw.lengthUnit = A2;
  }
  set normalizedAllowedLinearError(A2) {
    this.raw.normalizedAllowedLinearError = A2;
  }
  set normalizedPredictionDistance(A2) {
    this.raw.normalizedPredictionDistance = A2;
  }
  set numSolverIterations(A2) {
    this.raw.numSolverIterations = A2;
  }
  set numAdditionalFrictionIterations(A2) {
    this.raw.numAdditionalFrictionIterations = A2;
  }
  set numInternalPgsIterations(A2) {
    this.raw.numInternalPgsIterations = A2;
  }
  set minIslandSize(A2) {
    this.raw.minIslandSize = A2;
  }
  set maxCcdSubsteps(A2) {
    this.raw.maxCcdSubsteps = A2;
  }
  switchToStandardPgsSolver() {
    this.raw.switchToStandardPgsSolver();
  }
  switchToSmallStepsPgsSolver() {
    this.raw.switchToSmallStepsPgsSolver();
  }
  switchToSmallStepsPgsSolverWithoutWarmstart() {
    this.raw.switchToSmallStepsPgsSolverWithoutWarmstart();
  }
};
!function(A2) {
  A2[A2.Revolute = 0] = "Revolute", A2[A2.Fixed = 1] = "Fixed", A2[A2.Prismatic = 2] = "Prismatic", A2[A2.Rope = 3] = "Rope", A2[A2.Spring = 4] = "Spring", A2[A2.Spherical = 5] = "Spherical", A2[A2.Generic = 6] = "Generic";
}(vA || (vA = {})), function(A2) {
  A2[A2.AccelerationBased = 0] = "AccelerationBased", A2[A2.ForceBased = 1] = "ForceBased";
}(_A || (_A = {})), function(A2) {
  A2[A2.LinX = 1] = "LinX", A2[A2.LinY = 2] = "LinY", A2[A2.LinZ = 4] = "LinZ", A2[A2.AngX = 8] = "AngX", A2[A2.AngY = 16] = "AngY", A2[A2.AngZ = 32] = "AngZ";
}($A || ($A = {}));
var hI = class _hI {
  constructor(A2, I2, g2) {
    this.rawSet = A2, this.bodySet = I2, this.handle = g2;
  }
  static newTyped(A2, I2, g2) {
    switch (A2.jointType(g2)) {
      case l.Revolute:
        return new FI(A2, I2, g2);
      case l.Prismatic:
        return new aI(A2, I2, g2);
      case l.Fixed:
        return new yI(A2, I2, g2);
      case l.Spring:
        return new MI(A2, I2, g2);
      case l.Rope:
        return new NI(A2, I2, g2);
      case l.Spherical:
        return new RI(A2, I2, g2);
      case l.Generic:
        return new sI(A2, I2, g2);
      default:
        return new _hI(A2, I2, g2);
    }
  }
  finalizeDeserialization(A2) {
    this.bodySet = A2;
  }
  isValid() {
    return this.rawSet.contains(this.handle);
  }
  body1() {
    return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle));
  }
  body2() {
    return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle));
  }
  type() {
    return this.rawSet.jointType(this.handle);
  }
  frameX1() {
    return XA.fromRaw(this.rawSet.jointFrameX1(this.handle));
  }
  frameX2() {
    return XA.fromRaw(this.rawSet.jointFrameX2(this.handle));
  }
  anchor1() {
    return fA.fromRaw(this.rawSet.jointAnchor1(this.handle));
  }
  anchor2() {
    return fA.fromRaw(this.rawSet.jointAnchor2(this.handle));
  }
  setAnchor1(A2) {
    const I2 = fA.intoRaw(A2);
    this.rawSet.jointSetAnchor1(this.handle, I2), I2.free();
  }
  setAnchor2(A2) {
    const I2 = fA.intoRaw(A2);
    this.rawSet.jointSetAnchor2(this.handle, I2), I2.free();
  }
  setContactsEnabled(A2) {
    this.rawSet.jointSetContactsEnabled(this.handle, A2);
  }
  contactsEnabled() {
    return this.rawSet.jointContactsEnabled(this.handle);
  }
};
var JI = class extends hI {
  limitsEnabled() {
    return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());
  }
  limitsMin() {
    return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());
  }
  limitsMax() {
    return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());
  }
  setLimits(A2, I2) {
    this.rawSet.jointSetLimits(this.handle, this.rawAxis(), A2, I2);
  }
  configureMotorModel(A2) {
    this.rawSet.jointConfigureMotorModel(this.handle, this.rawAxis(), A2);
  }
  configureMotorVelocity(A2, I2) {
    this.rawSet.jointConfigureMotorVelocity(this.handle, this.rawAxis(), A2, I2);
  }
  configureMotorPosition(A2, I2, g2) {
    this.rawSet.jointConfigureMotorPosition(this.handle, this.rawAxis(), A2, I2, g2);
  }
  configureMotor(A2, I2, g2, C2) {
    this.rawSet.jointConfigureMotor(this.handle, this.rawAxis(), A2, I2, g2, C2);
  }
};
var yI = class extends hI {
};
var NI = class extends hI {
};
var MI = class extends hI {
};
var aI = class extends JI {
  rawAxis() {
    return q.LinX;
  }
};
var FI = class extends JI {
  rawAxis() {
    return q.AngX;
  }
};
var sI = class extends hI {
};
var RI = class extends hI {
};
var cI = class _cI {
  constructor() {
  }
  static fixed(A2, I2, g2, C2) {
    let B2 = new _cI();
    return B2.anchor1 = A2, B2.anchor2 = g2, B2.frame1 = I2, B2.frame2 = C2, B2.jointType = vA.Fixed, B2;
  }
  static spring(A2, I2, g2, C2, B2) {
    let Q2 = new _cI();
    return Q2.anchor1 = C2, Q2.anchor2 = B2, Q2.length = A2, Q2.stiffness = I2, Q2.damping = g2, Q2.jointType = vA.Spring, Q2;
  }
  static rope(A2, I2, g2) {
    let C2 = new _cI();
    return C2.anchor1 = I2, C2.anchor2 = g2, C2.length = A2, C2.jointType = vA.Rope, C2;
  }
  static generic(A2, I2, g2, C2) {
    let B2 = new _cI();
    return B2.anchor1 = A2, B2.anchor2 = I2, B2.axis = g2, B2.axesMask = C2, B2.jointType = vA.Generic, B2;
  }
  static spherical(A2, I2) {
    let g2 = new _cI();
    return g2.anchor1 = A2, g2.anchor2 = I2, g2.jointType = vA.Spherical, g2;
  }
  static prismatic(A2, I2, g2) {
    let C2 = new _cI();
    return C2.anchor1 = A2, C2.anchor2 = I2, C2.axis = g2, C2.jointType = vA.Prismatic, C2;
  }
  static revolute(A2, I2, g2) {
    let C2 = new _cI();
    return C2.anchor1 = A2, C2.anchor2 = I2, C2.axis = g2, C2.jointType = vA.Revolute, C2;
  }
  intoRaw() {
    let A2, I2, g2 = fA.intoRaw(this.anchor1), C2 = fA.intoRaw(this.anchor2), B2 = false, Q2 = 0, E2 = 0;
    switch (this.jointType) {
      case vA.Fixed:
        let i3 = XA.intoRaw(this.frame1), D2 = XA.intoRaw(this.frame2);
        I2 = AA.fixed(g2, i3, C2, D2), i3.free(), D2.free();
        break;
      case vA.Spring:
        I2 = AA.spring(this.length, this.stiffness, this.damping, g2, C2);
        break;
      case vA.Rope:
        I2 = AA.rope(this.length, g2, C2);
        break;
      case vA.Prismatic:
        A2 = fA.intoRaw(this.axis), this.limitsEnabled && (B2 = true, Q2 = this.limits[0], E2 = this.limits[1]), I2 = AA.prismatic(g2, C2, A2, B2, Q2, E2), A2.free();
        break;
      case vA.Generic:
        A2 = fA.intoRaw(this.axis);
        let o2 = this.axesMask;
        I2 = AA.generic(g2, C2, A2, o2);
        break;
      case vA.Spherical:
        I2 = AA.spherical(g2, C2);
        break;
      case vA.Revolute:
        A2 = fA.intoRaw(this.axis), I2 = AA.revolute(g2, C2, A2), A2.free();
    }
    return g2.free(), C2.free(), I2;
  }
};
var YI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new gA(), this.map = new kI(), A2 && A2.forEachJointHandle((I2) => {
      this.map.set(I2, hI.newTyped(A2, null, I2));
    });
  }
  finalizeDeserialization(A2) {
    this.map.forEach((I2) => I2.finalizeDeserialization(A2));
  }
  createJoint(A2, I2, g2, C2, B2) {
    const Q2 = I2.intoRaw(), E2 = this.raw.createJoint(Q2, g2, C2, B2);
    Q2.free();
    let i3 = hI.newTyped(this.raw, A2, E2);
    return this.map.set(E2, i3), i3;
  }
  remove(A2, I2) {
    this.raw.remove(A2, I2), this.unmap(A2);
  }
  forEachJointHandleAttachedToRigidBody(A2, I2) {
    this.raw.forEachJointAttachedToRigidBody(A2, I2);
  }
  unmap(A2) {
    this.map.delete(A2);
  }
  len() {
    return this.map.len();
  }
  contains(A2) {
    return null != this.get(A2);
  }
  get(A2) {
    return this.map.get(A2);
  }
  forEach(A2) {
    this.map.forEach(A2);
  }
  getAll() {
    return this.map.getAll();
  }
};
var qI = class _qI {
  constructor(A2, I2) {
    this.rawSet = A2, this.handle = I2;
  }
  static newTyped(A2, I2) {
    switch (A2.jointType(I2)) {
      case l.Revolute:
        return new tI(A2, I2);
      case l.Prismatic:
        return new HI(A2, I2);
      case l.Fixed:
        return new LI(A2, I2);
      case l.Spherical:
        return new pI(A2, I2);
      default:
        return new _qI(A2, I2);
    }
  }
  isValid() {
    return this.rawSet.contains(this.handle);
  }
  setContactsEnabled(A2) {
    this.rawSet.jointSetContactsEnabled(this.handle, A2);
  }
  contactsEnabled() {
    return this.rawSet.jointContactsEnabled(this.handle);
  }
};
var lI = class extends qI {
};
var LI = class extends qI {
};
var HI = class extends lI {
  rawAxis() {
    return q.LinX;
  }
};
var tI = class extends lI {
  rawAxis() {
    return q.AngX;
  }
};
var pI = class extends qI {
};
var eI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new SA(), this.map = new kI(), A2 && A2.forEachJointHandle((A3) => {
      this.map.set(A3, qI.newTyped(this.raw, A3));
    });
  }
  createJoint(A2, I2, g2, C2) {
    const B2 = A2.intoRaw(), Q2 = this.raw.createJoint(B2, I2, g2, C2);
    B2.free();
    let E2 = qI.newTyped(this.raw, Q2);
    return this.map.set(Q2, E2), E2;
  }
  remove(A2, I2) {
    this.raw.remove(A2, I2), this.map.delete(A2);
  }
  unmap(A2) {
    this.map.delete(A2);
  }
  len() {
    return this.map.len();
  }
  contains(A2) {
    return null != this.get(A2);
  }
  get(A2) {
    return this.map.get(A2);
  }
  forEach(A2) {
    this.map.forEach(A2);
  }
  forEachJointHandleAttachedToRigidBody(A2, I2) {
    this.raw.forEachJointAttachedToRigidBody(A2, I2);
  }
  getAll() {
    return this.map.getAll();
  }
};
!function(A2) {
  A2[A2.Average = 0] = "Average", A2[A2.Min = 1] = "Min", A2[A2.Multiply = 2] = "Multiply", A2[A2.Max = 3] = "Max";
}(AI || (AI = {}));
var rI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new p();
  }
};
var dI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new EA();
  }
  forEachActiveRigidBodyHandle(A2) {
    this.raw.forEachActiveRigidBodyHandle(A2);
  }
};
var nI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new H();
  }
};
var TI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new GA(), this.tempManifold = new OI(null);
  }
  contactPairsWith(A2, I2) {
    this.raw.contact_pairs_with(A2, I2);
  }
  intersectionPairsWith(A2, I2) {
    this.raw.intersection_pairs_with(A2, I2);
  }
  contactPair(A2, I2, g2) {
    const C2 = this.raw.contact_pair(A2, I2);
    if (C2) {
      const I3 = C2.collider1() != A2;
      let B2;
      for (B2 = 0; B2 < C2.numContactManifolds(); ++B2) this.tempManifold.raw = C2.contactManifold(B2), this.tempManifold.raw && g2(this.tempManifold, I3), this.tempManifold.free();
      C2.free();
    }
  }
  intersectionPair(A2, I2) {
    return this.raw.intersection_pair(A2, I2);
  }
};
var OI = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2;
  }
  normal() {
    return fA.fromRaw(this.raw.normal());
  }
  localNormal1() {
    return fA.fromRaw(this.raw.local_n1());
  }
  localNormal2() {
    return fA.fromRaw(this.raw.local_n2());
  }
  subshape1() {
    return this.raw.subshape1();
  }
  subshape2() {
    return this.raw.subshape2();
  }
  numContacts() {
    return this.raw.num_contacts();
  }
  localContactPoint1(A2) {
    return fA.fromRaw(this.raw.contact_local_p1(A2));
  }
  localContactPoint2(A2) {
    return fA.fromRaw(this.raw.contact_local_p2(A2));
  }
  contactDist(A2) {
    return this.raw.contact_dist(A2);
  }
  contactFid1(A2) {
    return this.raw.contact_fid1(A2);
  }
  contactFid2(A2) {
    return this.raw.contact_fid2(A2);
  }
  contactImpulse(A2) {
    return this.raw.contact_impulse(A2);
  }
  contactTangentImpulseX(A2) {
    return this.raw.contact_tangent_impulse_x(A2);
  }
  contactTangentImpulseY(A2) {
    return this.raw.contact_tangent_impulse_y(A2);
  }
  numSolverContacts() {
    return this.raw.num_solver_contacts();
  }
  solverContactPoint(A2) {
    return fA.fromRaw(this.raw.solver_contact_point(A2));
  }
  solverContactDist(A2) {
    return this.raw.solver_contact_dist(A2);
  }
  solverContactFriction(A2) {
    return this.raw.solver_contact_friction(A2);
  }
  solverContactRestitution(A2) {
    return this.raw.solver_contact_restitution(A2);
  }
  solverContactTangentVelocity(A2) {
    return fA.fromRaw(this.raw.solver_contact_tangent_velocity(A2));
  }
};
var ZI = class _ZI {
  constructor(A2, I2, g2, C2, B2) {
    this.distance = A2, this.point1 = I2, this.point2 = g2, this.normal1 = C2, this.normal2 = B2;
  }
  static fromRaw(A2) {
    if (!A2) return null;
    const I2 = new _ZI(A2.distance(), fA.fromRaw(A2.point1()), fA.fromRaw(A2.point2()), fA.fromRaw(A2.normal1()), fA.fromRaw(A2.normal2()));
    return A2.free(), I2;
  }
};
!function(A2) {
  A2[A2.Vertex = 0] = "Vertex", A2[A2.Edge = 1] = "Edge", A2[A2.Face = 2] = "Face", A2[A2.Unknown = 3] = "Unknown";
}(II || (II = {}));
var bI = class _bI {
  constructor(A2, I2) {
    this.point = A2, this.isInside = I2;
  }
  static fromRaw(A2) {
    if (!A2) return null;
    const I2 = new _bI(fA.fromRaw(A2.point()), A2.isInside());
    return A2.free(), I2;
  }
};
var WI = class _WI {
  constructor(A2, I2, g2, C2, B2) {
    this.featureType = II.Unknown, this.featureId = void 0, this.collider = A2, this.point = I2, this.isInside = g2, void 0 !== B2 && (this.featureId = B2), void 0 !== C2 && (this.featureType = C2);
  }
  static fromRaw(A2, I2) {
    if (!I2) return null;
    const g2 = new _WI(A2.get(I2.colliderHandle()), fA.fromRaw(I2.point()), I2.isInside(), I2.featureType(), I2.featureId());
    return I2.free(), g2;
  }
};
var xI = class {
  constructor(A2, I2) {
    this.origin = A2, this.dir = I2;
  }
  pointAt(A2) {
    return { x: this.origin.x + this.dir.x * A2, y: this.origin.y + this.dir.y * A2, z: this.origin.z + this.dir.z * A2 };
  }
};
var jI = class _jI {
  constructor(A2, I2, g2, C2) {
    this.featureType = II.Unknown, this.featureId = void 0, this.timeOfImpact = A2, this.normal = I2, void 0 !== C2 && (this.featureId = C2), void 0 !== g2 && (this.featureType = g2);
  }
  static fromRaw(A2) {
    if (!A2) return null;
    const I2 = new _jI(A2.time_of_impact(), fA.fromRaw(A2.normal()), A2.featureType(), A2.featureId());
    return A2.free(), I2;
  }
};
var mI = class _mI {
  constructor(A2, I2, g2, C2, B2) {
    this.featureType = II.Unknown, this.featureId = void 0, this.collider = A2, this.timeOfImpact = I2, this.normal = g2, void 0 !== B2 && (this.featureId = B2), void 0 !== C2 && (this.featureType = C2);
  }
  static fromRaw(A2, I2) {
    if (!I2) return null;
    const g2 = new _mI(A2.get(I2.colliderHandle()), I2.time_of_impact(), fA.fromRaw(I2.normal()), I2.featureType(), I2.featureId());
    return I2.free(), g2;
  }
};
var fI = class _fI {
  constructor(A2, I2) {
    this.collider = A2, this.timeOfImpact = I2;
  }
  static fromRaw(A2, I2) {
    if (!I2) return null;
    const g2 = new _fI(A2.get(I2.colliderHandle()), I2.timeOfImpact());
    return I2.free(), g2;
  }
};
var VI = class _VI {
  constructor(A2, I2, g2, C2, B2) {
    this.time_of_impact = A2, this.witness1 = I2, this.witness2 = g2, this.normal1 = C2, this.normal2 = B2;
  }
  static fromRaw(A2, I2) {
    if (!I2) return null;
    const g2 = new _VI(I2.time_of_impact(), fA.fromRaw(I2.witness1()), fA.fromRaw(I2.witness2()), fA.fromRaw(I2.normal1()), fA.fromRaw(I2.normal2()));
    return I2.free(), g2;
  }
};
var XI = class _XI extends VI {
  constructor(A2, I2, g2, C2, B2, Q2) {
    super(I2, g2, C2, B2, Q2), this.collider = A2;
  }
  static fromRaw(A2, I2) {
    if (!I2) return null;
    const g2 = new _XI(A2.get(I2.colliderHandle()), I2.time_of_impact(), fA.fromRaw(I2.witness1()), fA.fromRaw(I2.witness2()), fA.fromRaw(I2.normal1()), fA.fromRaw(I2.normal2()));
    return I2.free(), g2;
  }
};
var PI = class {
  static fromRaw(A2, I2) {
    const g2 = A2.coShapeType(I2);
    let C2, B2, Q2, E2, i3, D2, o2;
    switch (g2) {
      case Y.Ball:
        return new uI(A2.coRadius(I2));
      case Y.Cuboid:
        return C2 = A2.coHalfExtents(I2), new vI(C2.x, C2.y, C2.z);
      case Y.RoundCuboid:
        return C2 = A2.coHalfExtents(I2), B2 = A2.coRoundRadius(I2), new _I(C2.x, C2.y, C2.z, B2);
      case Y.Capsule:
        return i3 = A2.coHalfHeight(I2), D2 = A2.coRadius(I2), new $I(i3, D2);
      case Y.Segment:
        return Q2 = A2.coVertices(I2), new Ag(fA.new(Q2[0], Q2[1], Q2[2]), fA.new(Q2[3], Q2[4], Q2[5]));
      case Y.Polyline:
        return Q2 = A2.coVertices(I2), E2 = A2.coIndices(I2), new Cg(Q2, E2);
      case Y.Triangle:
        return Q2 = A2.coVertices(I2), new Ig(fA.new(Q2[0], Q2[1], Q2[2]), fA.new(Q2[3], Q2[4], Q2[5]), fA.new(Q2[6], Q2[7], Q2[8]));
      case Y.RoundTriangle:
        return Q2 = A2.coVertices(I2), B2 = A2.coRoundRadius(I2), new gg(fA.new(Q2[0], Q2[1], Q2[2]), fA.new(Q2[3], Q2[4], Q2[5]), fA.new(Q2[6], Q2[7], Q2[8]), B2);
      case Y.HalfSpace:
        return o2 = fA.fromRaw(A2.coHalfspaceNormal(I2)), new zI(o2);
      case Y.TriMesh:
        Q2 = A2.coVertices(I2), E2 = A2.coIndices(I2);
        const S2 = A2.coTriMeshFlags(I2);
        return new Bg(Q2, E2, S2);
      case Y.HeightField:
        const w2 = A2.coHeightfieldScale(I2), G2 = A2.coHeightfieldHeights(I2), k2 = A2.coHeightfieldNRows(I2), K2 = A2.coHeightfieldNCols(I2), U2 = A2.coHeightFieldFlags(I2);
        return new ig(k2, K2, G2, w2, U2);
      case Y.ConvexPolyhedron:
        return Q2 = A2.coVertices(I2), E2 = A2.coIndices(I2), new Qg(Q2, E2);
      case Y.RoundConvexPolyhedron:
        return Q2 = A2.coVertices(I2), E2 = A2.coIndices(I2), B2 = A2.coRoundRadius(I2), new Eg(Q2, E2, B2);
      case Y.Cylinder:
        return i3 = A2.coHalfHeight(I2), D2 = A2.coRadius(I2), new Dg(i3, D2);
      case Y.RoundCylinder:
        return i3 = A2.coHalfHeight(I2), D2 = A2.coRadius(I2), B2 = A2.coRoundRadius(I2), new og(i3, D2, B2);
      case Y.Cone:
        return i3 = A2.coHalfHeight(I2), D2 = A2.coRadius(I2), new Sg(i3, D2);
      case Y.RoundCone:
        return i3 = A2.coHalfHeight(I2), D2 = A2.coRadius(I2), B2 = A2.coRoundRadius(I2), new wg(i3, D2, B2);
      default:
        throw new Error("unknown shape type: " + g2);
    }
  }
  castShape(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2) {
    let S2 = fA.intoRaw(A2), w2 = XA.intoRaw(I2), G2 = fA.intoRaw(g2), k2 = fA.intoRaw(B2), K2 = XA.intoRaw(Q2), U2 = fA.intoRaw(E2), h2 = this.intoRaw(), J2 = C2.intoRaw(), y2 = VI.fromRaw(null, h2.castShape(S2, w2, G2, J2, k2, K2, U2, i3, D2, o2));
    return S2.free(), w2.free(), G2.free(), k2.free(), K2.free(), U2.free(), h2.free(), J2.free(), y2;
  }
  intersectsShape(A2, I2, g2, C2, B2) {
    let Q2 = fA.intoRaw(A2), E2 = XA.intoRaw(I2), i3 = fA.intoRaw(C2), D2 = XA.intoRaw(B2), o2 = this.intoRaw(), S2 = g2.intoRaw(), w2 = o2.intersectsShape(Q2, E2, S2, i3, D2);
    return Q2.free(), E2.free(), i3.free(), D2.free(), o2.free(), S2.free(), w2;
  }
  contactShape(A2, I2, g2, C2, B2, Q2) {
    let E2 = fA.intoRaw(A2), i3 = XA.intoRaw(I2), D2 = fA.intoRaw(C2), o2 = XA.intoRaw(B2), S2 = this.intoRaw(), w2 = g2.intoRaw(), G2 = ZI.fromRaw(S2.contactShape(E2, i3, w2, D2, o2, Q2));
    return E2.free(), i3.free(), D2.free(), o2.free(), S2.free(), w2.free(), G2;
  }
  containsPoint(A2, I2, g2) {
    let C2 = fA.intoRaw(A2), B2 = XA.intoRaw(I2), Q2 = fA.intoRaw(g2), E2 = this.intoRaw(), i3 = E2.containsPoint(C2, B2, Q2);
    return C2.free(), B2.free(), Q2.free(), E2.free(), i3;
  }
  projectPoint(A2, I2, g2, C2) {
    let B2 = fA.intoRaw(A2), Q2 = XA.intoRaw(I2), E2 = fA.intoRaw(g2), i3 = this.intoRaw(), D2 = bI.fromRaw(i3.projectPoint(B2, Q2, E2, C2));
    return B2.free(), Q2.free(), E2.free(), i3.free(), D2;
  }
  intersectsRay(A2, I2, g2, C2) {
    let B2 = fA.intoRaw(I2), Q2 = XA.intoRaw(g2), E2 = fA.intoRaw(A2.origin), i3 = fA.intoRaw(A2.dir), D2 = this.intoRaw(), o2 = D2.intersectsRay(B2, Q2, E2, i3, C2);
    return B2.free(), Q2.free(), E2.free(), i3.free(), D2.free(), o2;
  }
  castRay(A2, I2, g2, C2, B2) {
    let Q2 = fA.intoRaw(I2), E2 = XA.intoRaw(g2), i3 = fA.intoRaw(A2.origin), D2 = fA.intoRaw(A2.dir), o2 = this.intoRaw(), S2 = o2.castRay(Q2, E2, i3, D2, C2, B2);
    return Q2.free(), E2.free(), i3.free(), D2.free(), o2.free(), S2;
  }
  castRayAndGetNormal(A2, I2, g2, C2, B2) {
    let Q2 = fA.intoRaw(I2), E2 = XA.intoRaw(g2), i3 = fA.intoRaw(A2.origin), D2 = fA.intoRaw(A2.dir), o2 = this.intoRaw(), S2 = jI.fromRaw(o2.castRayAndGetNormal(Q2, E2, i3, D2, C2, B2));
    return Q2.free(), E2.free(), i3.free(), D2.free(), o2.free(), S2;
  }
};
!function(A2) {
  A2[A2.Ball = 0] = "Ball", A2[A2.Cuboid = 1] = "Cuboid", A2[A2.Capsule = 2] = "Capsule", A2[A2.Segment = 3] = "Segment", A2[A2.Polyline = 4] = "Polyline", A2[A2.Triangle = 5] = "Triangle", A2[A2.TriMesh = 6] = "TriMesh", A2[A2.HeightField = 7] = "HeightField", A2[A2.ConvexPolyhedron = 9] = "ConvexPolyhedron", A2[A2.Cylinder = 10] = "Cylinder", A2[A2.Cone = 11] = "Cone", A2[A2.RoundCuboid = 12] = "RoundCuboid", A2[A2.RoundTriangle = 13] = "RoundTriangle", A2[A2.RoundCylinder = 14] = "RoundCylinder", A2[A2.RoundCone = 15] = "RoundCone", A2[A2.RoundConvexPolyhedron = 16] = "RoundConvexPolyhedron", A2[A2.HalfSpace = 17] = "HalfSpace";
}(gI || (gI = {})), function(A2) {
  A2[A2.FIX_INTERNAL_EDGES = 1] = "FIX_INTERNAL_EDGES";
}(CI || (CI = {})), function(A2) {
  A2[A2.DELETE_BAD_TOPOLOGY_TRIANGLES = 4] = "DELETE_BAD_TOPOLOGY_TRIANGLES", A2[A2.ORIENTED = 8] = "ORIENTED", A2[A2.MERGE_DUPLICATE_VERTICES = 16] = "MERGE_DUPLICATE_VERTICES", A2[A2.DELETE_DEGENERATE_TRIANGLES = 32] = "DELETE_DEGENERATE_TRIANGLES", A2[A2.DELETE_DUPLICATE_TRIANGLES = 64] = "DELETE_DUPLICATE_TRIANGLES", A2[A2.FIX_INTERNAL_EDGES = 152] = "FIX_INTERNAL_EDGES";
}(BI || (BI = {}));
var uI = class extends PI {
  constructor(A2) {
    super(), this.type = gI.Ball, this.radius = A2;
  }
  intoRaw() {
    return nA.ball(this.radius);
  }
};
var zI = class extends PI {
  constructor(A2) {
    super(), this.type = gI.HalfSpace, this.normal = A2;
  }
  intoRaw() {
    let A2 = fA.intoRaw(this.normal), I2 = nA.halfspace(A2);
    return A2.free(), I2;
  }
};
var vI = class extends PI {
  constructor(A2, I2, g2) {
    super(), this.type = gI.Cuboid, this.halfExtents = fA.new(A2, I2, g2);
  }
  intoRaw() {
    return nA.cuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z);
  }
};
var _I = class extends PI {
  constructor(A2, I2, g2, C2) {
    super(), this.type = gI.RoundCuboid, this.halfExtents = fA.new(A2, I2, g2), this.borderRadius = C2;
  }
  intoRaw() {
    return nA.roundCuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z, this.borderRadius);
  }
};
var $I = class extends PI {
  constructor(A2, I2) {
    super(), this.type = gI.Capsule, this.halfHeight = A2, this.radius = I2;
  }
  intoRaw() {
    return nA.capsule(this.halfHeight, this.radius);
  }
};
var Ag = class extends PI {
  constructor(A2, I2) {
    super(), this.type = gI.Segment, this.a = A2, this.b = I2;
  }
  intoRaw() {
    let A2 = fA.intoRaw(this.a), I2 = fA.intoRaw(this.b), g2 = nA.segment(A2, I2);
    return A2.free(), I2.free(), g2;
  }
};
var Ig = class extends PI {
  constructor(A2, I2, g2) {
    super(), this.type = gI.Triangle, this.a = A2, this.b = I2, this.c = g2;
  }
  intoRaw() {
    let A2 = fA.intoRaw(this.a), I2 = fA.intoRaw(this.b), g2 = fA.intoRaw(this.c), C2 = nA.triangle(A2, I2, g2);
    return A2.free(), I2.free(), g2.free(), C2;
  }
};
var gg = class extends PI {
  constructor(A2, I2, g2, C2) {
    super(), this.type = gI.RoundTriangle, this.a = A2, this.b = I2, this.c = g2, this.borderRadius = C2;
  }
  intoRaw() {
    let A2 = fA.intoRaw(this.a), I2 = fA.intoRaw(this.b), g2 = fA.intoRaw(this.c), C2 = nA.roundTriangle(A2, I2, g2, this.borderRadius);
    return A2.free(), I2.free(), g2.free(), C2;
  }
};
var Cg = class extends PI {
  constructor(A2, I2) {
    super(), this.type = gI.Polyline, this.vertices = A2, this.indices = null != I2 ? I2 : new Uint32Array(0);
  }
  intoRaw() {
    return nA.polyline(this.vertices, this.indices);
  }
};
var Bg = class extends PI {
  constructor(A2, I2, g2) {
    super(), this.type = gI.TriMesh, this.vertices = A2, this.indices = I2, this.flags = g2;
  }
  intoRaw() {
    return nA.trimesh(this.vertices, this.indices, this.flags);
  }
};
var Qg = class extends PI {
  constructor(A2, I2) {
    super(), this.type = gI.ConvexPolyhedron, this.vertices = A2, this.indices = I2;
  }
  intoRaw() {
    return this.indices ? nA.convexMesh(this.vertices, this.indices) : nA.convexHull(this.vertices);
  }
};
var Eg = class extends PI {
  constructor(A2, I2, g2) {
    super(), this.type = gI.RoundConvexPolyhedron, this.vertices = A2, this.indices = I2, this.borderRadius = g2;
  }
  intoRaw() {
    return this.indices ? nA.roundConvexMesh(this.vertices, this.indices, this.borderRadius) : nA.roundConvexHull(this.vertices, this.borderRadius);
  }
};
var ig = class extends PI {
  constructor(A2, I2, g2, C2, B2) {
    super(), this.type = gI.HeightField, this.nrows = A2, this.ncols = I2, this.heights = g2, this.scale = C2, this.flags = B2;
  }
  intoRaw() {
    let A2 = fA.intoRaw(this.scale), I2 = nA.heightfield(this.nrows, this.ncols, this.heights, A2, this.flags);
    return A2.free(), I2;
  }
};
var Dg = class extends PI {
  constructor(A2, I2) {
    super(), this.type = gI.Cylinder, this.halfHeight = A2, this.radius = I2;
  }
  intoRaw() {
    return nA.cylinder(this.halfHeight, this.radius);
  }
};
var og = class extends PI {
  constructor(A2, I2, g2) {
    super(), this.type = gI.RoundCylinder, this.borderRadius = g2, this.halfHeight = A2, this.radius = I2;
  }
  intoRaw() {
    return nA.roundCylinder(this.halfHeight, this.radius, this.borderRadius);
  }
};
var Sg = class extends PI {
  constructor(A2, I2) {
    super(), this.type = gI.Cone, this.halfHeight = A2, this.radius = I2;
  }
  intoRaw() {
    return nA.cone(this.halfHeight, this.radius);
  }
};
var wg = class extends PI {
  constructor(A2, I2, g2) {
    super(), this.type = gI.RoundCone, this.halfHeight = A2, this.radius = I2, this.borderRadius = g2;
  }
  intoRaw() {
    return nA.roundCone(this.halfHeight, this.radius, this.borderRadius);
  }
};
var Gg = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new KA();
  }
  step(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2, w2) {
    let G2 = fA.intoRaw(A2);
    S2 ? this.raw.stepWithEvents(G2, I2.raw, g2.raw, C2.raw, B2.raw, Q2.raw, E2.raw, i3.raw, D2.raw, o2.raw, S2.raw, w2, w2 ? w2.filterContactPair : null, w2 ? w2.filterIntersectionPair : null) : this.raw.step(G2, I2.raw, g2.raw, C2.raw, B2.raw, Q2.raw, E2.raw, i3.raw, D2.raw, o2.raw), G2.free();
  }
};
!function(A2) {
  A2[A2.EXCLUDE_FIXED = 1] = "EXCLUDE_FIXED", A2[A2.EXCLUDE_KINEMATIC = 2] = "EXCLUDE_KINEMATIC", A2[A2.EXCLUDE_DYNAMIC = 4] = "EXCLUDE_DYNAMIC", A2[A2.EXCLUDE_SENSORS = 8] = "EXCLUDE_SENSORS", A2[A2.EXCLUDE_SOLIDS = 16] = "EXCLUDE_SOLIDS", A2[A2.ONLY_DYNAMIC = 3] = "ONLY_DYNAMIC", A2[A2.ONLY_KINEMATIC = 5] = "ONLY_KINEMATIC", A2[A2.ONLY_FIXED = 6] = "ONLY_FIXED";
}(QI || (QI = {}));
var kg = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new MA();
  }
  update(A2) {
    this.raw.update(A2.raw);
  }
  castRay(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2) {
    let S2 = fA.intoRaw(g2.origin), w2 = fA.intoRaw(g2.dir), G2 = fI.fromRaw(I2, this.raw.castRay(A2.raw, I2.raw, S2, w2, C2, B2, Q2, E2, i3, D2, o2));
    return S2.free(), w2.free(), G2;
  }
  castRayAndGetNormal(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2) {
    let S2 = fA.intoRaw(g2.origin), w2 = fA.intoRaw(g2.dir), G2 = mI.fromRaw(I2, this.raw.castRayAndGetNormal(A2.raw, I2.raw, S2, w2, C2, B2, Q2, E2, i3, D2, o2));
    return S2.free(), w2.free(), G2;
  }
  intersectionsWithRay(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2) {
    let w2 = fA.intoRaw(g2.origin), G2 = fA.intoRaw(g2.dir);
    this.raw.intersectionsWithRay(A2.raw, I2.raw, w2, G2, C2, B2, (A3) => Q2(mI.fromRaw(I2, A3)), E2, i3, D2, o2, S2), w2.free(), G2.free();
  }
  intersectionWithShape(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2) {
    let S2 = fA.intoRaw(g2), w2 = XA.intoRaw(C2), G2 = B2.intoRaw(), k2 = this.raw.intersectionWithShape(A2.raw, I2.raw, S2, w2, G2, Q2, E2, i3, D2, o2);
    return S2.free(), w2.free(), G2.free(), k2;
  }
  projectPoint(A2, I2, g2, C2, B2, Q2, E2, i3, D2) {
    let o2 = fA.intoRaw(g2), S2 = WI.fromRaw(I2, this.raw.projectPoint(A2.raw, I2.raw, o2, C2, B2, Q2, E2, i3, D2));
    return o2.free(), S2;
  }
  projectPointAndGetFeature(A2, I2, g2, C2, B2, Q2, E2, i3) {
    let D2 = fA.intoRaw(g2), o2 = WI.fromRaw(I2, this.raw.projectPointAndGetFeature(A2.raw, I2.raw, D2, C2, B2, Q2, E2, i3));
    return D2.free(), o2;
  }
  intersectionsWithPoint(A2, I2, g2, C2, B2, Q2, E2, i3, D2) {
    let o2 = fA.intoRaw(g2);
    this.raw.intersectionsWithPoint(A2.raw, I2.raw, o2, C2, B2, Q2, E2, i3, D2), o2.free();
  }
  castShape(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2, w2, G2, k2) {
    let K2 = fA.intoRaw(g2), U2 = XA.intoRaw(C2), h2 = fA.intoRaw(B2), J2 = Q2.intoRaw(), y2 = XI.fromRaw(I2, this.raw.castShape(A2.raw, I2.raw, K2, U2, h2, J2, E2, i3, D2, o2, S2, w2, G2, k2));
    return K2.free(), U2.free(), h2.free(), J2.free(), y2;
  }
  intersectionsWithShape(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2) {
    let w2 = fA.intoRaw(g2), G2 = XA.intoRaw(C2), k2 = B2.intoRaw();
    this.raw.intersectionsWithShape(A2.raw, I2.raw, w2, G2, k2, Q2, E2, i3, D2, o2, S2), w2.free(), G2.free(), k2.free();
  }
  collidersWithAabbIntersectingAabb(A2, I2, g2) {
    let C2 = fA.intoRaw(A2), B2 = fA.intoRaw(I2);
    this.raw.collidersWithAabbIntersectingAabb(C2, B2, g2), C2.free(), B2.free();
  }
};
var Kg = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new rA();
  }
  serializeAll(A2, I2, g2, C2, B2, Q2, E2, i3, D2) {
    let o2 = fA.intoRaw(A2);
    const S2 = this.raw.serializeAll(o2, I2.raw, g2.raw, C2.raw, B2.raw, Q2.raw, E2.raw, i3.raw, D2.raw);
    return o2.free(), S2;
  }
  deserializeAll(A2) {
    return Mg.fromRaw(this.raw.deserializeAll(A2));
  }
};
var Ug = class {
  constructor(A2, I2) {
    this.vertices = A2, this.colors = I2;
  }
};
var hg = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0, this.vertices = void 0, this.colors = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new V();
  }
  render(A2, I2, g2, C2, B2) {
    this.raw.render(A2.raw, I2.raw, g2.raw, C2.raw, B2.raw), this.vertices = this.raw.vertices(), this.colors = this.raw.colors();
  }
};
var Jg = class {
};
var yg = class {
  constructor(A2, I2, g2, C2, B2) {
    this.params = I2, this.bodies = g2, this.colliders = C2, this.queries = B2, this.raw = new DA(A2), this.rawCharacterCollision = new r(), this._applyImpulsesToDynamicBodies = false, this._characterMass = null;
  }
  free() {
    this.raw && (this.raw.free(), this.rawCharacterCollision.free()), this.raw = void 0, this.rawCharacterCollision = void 0;
  }
  up() {
    return this.raw.up();
  }
  setUp(A2) {
    let I2 = fA.intoRaw(A2);
    return this.raw.setUp(I2);
  }
  applyImpulsesToDynamicBodies() {
    return this._applyImpulsesToDynamicBodies;
  }
  setApplyImpulsesToDynamicBodies(A2) {
    this._applyImpulsesToDynamicBodies = A2;
  }
  characterMass() {
    return this._characterMass;
  }
  setCharacterMass(A2) {
    this._characterMass = A2;
  }
  offset() {
    return this.raw.offset();
  }
  setOffset(A2) {
    this.raw.setOffset(A2);
  }
  normalNudgeFactor() {
    return this.raw.normalNudgeFactor();
  }
  setNormalNudgeFactor(A2) {
    this.raw.setNormalNudgeFactor(A2);
  }
  slideEnabled() {
    return this.raw.slideEnabled();
  }
  setSlideEnabled(A2) {
    this.raw.setSlideEnabled(A2);
  }
  autostepMaxHeight() {
    return this.raw.autostepMaxHeight();
  }
  autostepMinWidth() {
    return this.raw.autostepMinWidth();
  }
  autostepIncludesDynamicBodies() {
    return this.raw.autostepIncludesDynamicBodies();
  }
  autostepEnabled() {
    return this.raw.autostepEnabled();
  }
  enableAutostep(A2, I2, g2) {
    this.raw.enableAutostep(A2, I2, g2);
  }
  disableAutostep() {
    return this.raw.disableAutostep();
  }
  maxSlopeClimbAngle() {
    return this.raw.maxSlopeClimbAngle();
  }
  setMaxSlopeClimbAngle(A2) {
    this.raw.setMaxSlopeClimbAngle(A2);
  }
  minSlopeSlideAngle() {
    return this.raw.minSlopeSlideAngle();
  }
  setMinSlopeSlideAngle(A2) {
    this.raw.setMinSlopeSlideAngle(A2);
  }
  snapToGroundDistance() {
    return this.raw.snapToGroundDistance();
  }
  enableSnapToGround(A2) {
    this.raw.enableSnapToGround(A2);
  }
  disableSnapToGround() {
    this.raw.disableSnapToGround();
  }
  snapToGroundEnabled() {
    return this.raw.snapToGroundEnabled();
  }
  computeColliderMovement(A2, I2, g2, C2, B2) {
    let Q2 = fA.intoRaw(I2);
    this.raw.computeColliderMovement(this.params.dt, this.bodies.raw, this.colliders.raw, this.queries.raw, A2.handle, Q2, this._applyImpulsesToDynamicBodies, this._characterMass, g2, C2, this.colliders.castClosure(B2)), Q2.free();
  }
  computedMovement() {
    return fA.fromRaw(this.raw.computedMovement());
  }
  computedGrounded() {
    return this.raw.computedGrounded();
  }
  numComputedCollisions() {
    return this.raw.numComputedCollisions();
  }
  computedCollision(A2, I2) {
    if (this.raw.computedCollision(A2, this.rawCharacterCollision)) {
      let A3 = this.rawCharacterCollision;
      return (I2 = null != I2 ? I2 : new Jg()).translationDeltaApplied = fA.fromRaw(A3.translationDeltaApplied()), I2.translationDeltaRemaining = fA.fromRaw(A3.translationDeltaRemaining()), I2.toi = A3.toi(), I2.witness1 = fA.fromRaw(A3.worldWitness1()), I2.witness2 = fA.fromRaw(A3.worldWitness2()), I2.normal1 = fA.fromRaw(A3.worldNormal1()), I2.normal2 = fA.fromRaw(A3.worldNormal2()), I2.collider = this.colliders.get(A3.handle()), I2;
    }
    return null;
  }
};
var Ng = class {
  constructor(A2, I2, g2, C2) {
    this.raw = new z(A2.handle), this.bodies = I2, this.colliders = g2, this.queries = C2, this._chassis = A2;
  }
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  updateVehicle(A2, I2, g2, C2) {
    this.raw.update_vehicle(A2, this.bodies.raw, this.colliders.raw, this.queries.raw, I2, g2, this.colliders.castClosure(C2));
  }
  currentVehicleSpeed() {
    return this.raw.current_vehicle_speed();
  }
  chassis() {
    return this._chassis;
  }
  get indexUpAxis() {
    return this.raw.index_up_axis();
  }
  set indexUpAxis(A2) {
    this.raw.set_index_up_axis(A2);
  }
  get indexForwardAxis() {
    return this.raw.index_forward_axis();
  }
  set setIndexForwardAxis(A2) {
    this.raw.set_index_forward_axis(A2);
  }
  addWheel(A2, I2, g2, C2, B2) {
    let Q2 = fA.intoRaw(A2), E2 = fA.intoRaw(I2), i3 = fA.intoRaw(g2);
    this.raw.add_wheel(Q2, E2, i3, C2, B2), Q2.free(), E2.free(), i3.free();
  }
  numWheels() {
    return this.raw.num_wheels();
  }
  wheelChassisConnectionPointCs(A2) {
    return fA.fromRaw(this.raw.wheel_chassis_connection_point_cs(A2));
  }
  setWheelChassisConnectionPointCs(A2, I2) {
    let g2 = fA.intoRaw(I2);
    this.raw.set_wheel_chassis_connection_point_cs(A2, g2), g2.free();
  }
  wheelSuspensionRestLength(A2) {
    return this.raw.wheel_suspension_rest_length(A2);
  }
  setWheelSuspensionRestLength(A2, I2) {
    this.raw.set_wheel_suspension_rest_length(A2, I2);
  }
  wheelMaxSuspensionTravel(A2) {
    return this.raw.wheel_max_suspension_travel(A2);
  }
  setWheelMaxSuspensionTravel(A2, I2) {
    this.raw.set_wheel_max_suspension_travel(A2, I2);
  }
  wheelRadius(A2) {
    return this.raw.wheel_radius(A2);
  }
  setWheelRadius(A2, I2) {
    this.raw.set_wheel_radius(A2, I2);
  }
  wheelSuspensionStiffness(A2) {
    return this.raw.wheel_suspension_stiffness(A2);
  }
  setWheelSuspensionStiffness(A2, I2) {
    this.raw.set_wheel_suspension_stiffness(A2, I2);
  }
  wheelSuspensionCompression(A2) {
    return this.raw.wheel_suspension_compression(A2);
  }
  setWheelSuspensionCompression(A2, I2) {
    this.raw.set_wheel_suspension_compression(A2, I2);
  }
  wheelSuspensionRelaxation(A2) {
    return this.raw.wheel_suspension_relaxation(A2);
  }
  setWheelSuspensionRelaxation(A2, I2) {
    this.raw.set_wheel_suspension_relaxation(A2, I2);
  }
  wheelMaxSuspensionForce(A2) {
    return this.raw.wheel_max_suspension_force(A2);
  }
  setWheelMaxSuspensionForce(A2, I2) {
    this.raw.set_wheel_max_suspension_force(A2, I2);
  }
  wheelBrake(A2) {
    return this.raw.wheel_brake(A2);
  }
  setWheelBrake(A2, I2) {
    this.raw.set_wheel_brake(A2, I2);
  }
  wheelSteering(A2) {
    return this.raw.wheel_steering(A2);
  }
  setWheelSteering(A2, I2) {
    this.raw.set_wheel_steering(A2, I2);
  }
  wheelEngineForce(A2) {
    return this.raw.wheel_engine_force(A2);
  }
  setWheelEngineForce(A2, I2) {
    this.raw.set_wheel_engine_force(A2, I2);
  }
  wheelDirectionCs(A2) {
    return fA.fromRaw(this.raw.wheel_direction_cs(A2));
  }
  setWheelDirectionCs(A2, I2) {
    let g2 = fA.intoRaw(I2);
    this.raw.set_wheel_direction_cs(A2, g2), g2.free();
  }
  wheelAxleCs(A2) {
    return fA.fromRaw(this.raw.wheel_axle_cs(A2));
  }
  setWheelAxleCs(A2, I2) {
    let g2 = fA.intoRaw(I2);
    this.raw.set_wheel_axle_cs(A2, g2), g2.free();
  }
  wheelFrictionSlip(A2) {
    return this.raw.wheel_friction_slip(A2);
  }
  setWheelFrictionSlip(A2, I2) {
    this.raw.set_wheel_friction_slip(A2, I2);
  }
  wheelSideFrictionStiffness(A2) {
    return this.raw.wheel_side_friction_stiffness(A2);
  }
  setWheelSideFrictionStiffness(A2, I2) {
    this.raw.set_wheel_side_friction_stiffness(A2, I2);
  }
  wheelRotation(A2) {
    return this.raw.wheel_rotation(A2);
  }
  wheelForwardImpulse(A2) {
    return this.raw.wheel_forward_impulse(A2);
  }
  wheelSideImpulse(A2) {
    return this.raw.wheel_side_impulse(A2);
  }
  wheelSuspensionForce(A2) {
    return this.raw.wheel_suspension_force(A2);
  }
  wheelContactNormal(A2) {
    return fA.fromRaw(this.raw.wheel_contact_normal_ws(A2));
  }
  wheelContactPoint(A2) {
    return fA.fromRaw(this.raw.wheel_contact_point_ws(A2));
  }
  wheelSuspensionLength(A2) {
    return this.raw.wheel_suspension_length(A2);
  }
  wheelHardPoint(A2) {
    return fA.fromRaw(this.raw.wheel_hard_point_ws(A2));
  }
  wheelIsInContact(A2) {
    return this.raw.wheel_is_in_contact(A2);
  }
  wheelGroundObject(A2) {
    return this.colliders.get(this.raw.wheel_ground_object(A2));
  }
};
var Mg = class _Mg {
  free() {
    this.integrationParameters.free(), this.islands.free(), this.broadPhase.free(), this.narrowPhase.free(), this.bodies.free(), this.colliders.free(), this.impulseJoints.free(), this.multibodyJoints.free(), this.ccdSolver.free(), this.queryPipeline.free(), this.physicsPipeline.free(), this.serializationPipeline.free(), this.debugRenderPipeline.free(), this.characterControllers.forEach((A2) => A2.free()), this.vehicleControllers.forEach((A2) => A2.free()), this.integrationParameters = void 0, this.islands = void 0, this.broadPhase = void 0, this.narrowPhase = void 0, this.bodies = void 0, this.colliders = void 0, this.ccdSolver = void 0, this.impulseJoints = void 0, this.multibodyJoints = void 0, this.queryPipeline = void 0, this.physicsPipeline = void 0, this.serializationPipeline = void 0, this.debugRenderPipeline = void 0, this.characterControllers = void 0, this.vehicleControllers = void 0;
  }
  constructor(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2, w2, G2, k2) {
    this.gravity = A2, this.integrationParameters = new UI(I2), this.islands = new dI(g2), this.broadPhase = new nI(C2), this.narrowPhase = new TI(B2), this.bodies = new KI(Q2), this.colliders = new cg(E2), this.impulseJoints = new YI(i3), this.multibodyJoints = new eI(D2), this.ccdSolver = new rI(o2), this.queryPipeline = new kg(S2), this.physicsPipeline = new Gg(w2), this.serializationPipeline = new Kg(G2), this.debugRenderPipeline = new hg(k2), this.characterControllers = /* @__PURE__ */ new Set(), this.vehicleControllers = /* @__PURE__ */ new Set(), this.impulseJoints.finalizeDeserialization(this.bodies), this.bodies.finalizeDeserialization(this.colliders), this.colliders.finalizeDeserialization(this.bodies);
  }
  static fromRaw(A2) {
    return A2 ? new _Mg(fA.fromRaw(A2.takeGravity()), A2.takeIntegrationParameters(), A2.takeIslandManager(), A2.takeBroadPhase(), A2.takeNarrowPhase(), A2.takeBodies(), A2.takeColliders(), A2.takeImpulseJoints(), A2.takeMultibodyJoints()) : null;
  }
  takeSnapshot() {
    return this.serializationPipeline.serializeAll(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints);
  }
  static restoreSnapshot(A2) {
    return new Kg().deserializeAll(A2);
  }
  debugRender() {
    return this.debugRenderPipeline.render(this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.narrowPhase), new Ug(this.debugRenderPipeline.vertices, this.debugRenderPipeline.colors);
  }
  step(A2, I2) {
    this.physicsPipeline.step(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.ccdSolver, A2, I2), this.queryPipeline.update(this.colliders);
  }
  propagateModifiedBodyPositionsToColliders() {
    this.bodies.raw.propagateModifiedBodyPositionsToColliders(this.colliders.raw);
  }
  updateSceneQueries() {
    this.propagateModifiedBodyPositionsToColliders(), this.queryPipeline.update(this.colliders);
  }
  get timestep() {
    return this.integrationParameters.dt;
  }
  set timestep(A2) {
    this.integrationParameters.dt = A2;
  }
  get lengthUnit() {
    return this.integrationParameters.lengthUnit;
  }
  set lengthUnit(A2) {
    this.integrationParameters.lengthUnit = A2;
  }
  get numSolverIterations() {
    return this.integrationParameters.numSolverIterations;
  }
  set numSolverIterations(A2) {
    this.integrationParameters.numSolverIterations = A2;
  }
  get numAdditionalFrictionIterations() {
    return this.integrationParameters.numAdditionalFrictionIterations;
  }
  set numAdditionalFrictionIterations(A2) {
    this.integrationParameters.numAdditionalFrictionIterations = A2;
  }
  get numInternalPgsIterations() {
    return this.integrationParameters.numInternalPgsIterations;
  }
  set numInternalPgsIterations(A2) {
    this.integrationParameters.numInternalPgsIterations = A2;
  }
  switchToStandardPgsSolver() {
    this.integrationParameters.switchToStandardPgsSolver();
  }
  switchToSmallStepsPgsSolver() {
    this.integrationParameters.switchToSmallStepsPgsSolver();
  }
  switchToSmallStepsPgsSolverWithoutWarmstart() {
    this.integrationParameters.switchToSmallStepsPgsSolverWithoutWarmstart();
  }
  createRigidBody(A2) {
    return this.bodies.createRigidBody(this.colliders, A2);
  }
  createCharacterController(A2) {
    let I2 = new yg(A2, this.integrationParameters, this.bodies, this.colliders, this.queryPipeline);
    return this.characterControllers.add(I2), I2;
  }
  removeCharacterController(A2) {
    this.characterControllers.delete(A2), A2.free();
  }
  createVehicleController(A2) {
    let I2 = new Ng(A2, this.bodies, this.colliders, this.queryPipeline);
    return this.vehicleControllers.add(I2), I2;
  }
  removeVehicleController(A2) {
    this.vehicleControllers.delete(A2), A2.free();
  }
  createCollider(A2, I2) {
    let g2 = I2 ? I2.handle : void 0;
    return this.colliders.createCollider(this.bodies, A2, g2);
  }
  createImpulseJoint(A2, I2, g2, C2) {
    return this.impulseJoints.createJoint(this.bodies, A2, I2.handle, g2.handle, C2);
  }
  createMultibodyJoint(A2, I2, g2, C2) {
    return this.multibodyJoints.createJoint(A2, I2.handle, g2.handle, C2);
  }
  getRigidBody(A2) {
    return this.bodies.get(A2);
  }
  getCollider(A2) {
    return this.colliders.get(A2);
  }
  getImpulseJoint(A2) {
    return this.impulseJoints.get(A2);
  }
  getMultibodyJoint(A2) {
    return this.multibodyJoints.get(A2);
  }
  removeRigidBody(A2) {
    this.bodies && this.bodies.remove(A2.handle, this.islands, this.colliders, this.impulseJoints, this.multibodyJoints);
  }
  removeCollider(A2, I2) {
    this.colliders && this.colliders.remove(A2.handle, this.islands, this.bodies, I2);
  }
  removeImpulseJoint(A2, I2) {
    this.impulseJoints && this.impulseJoints.remove(A2.handle, I2);
  }
  removeMultibodyJoint(A2, I2) {
    this.impulseJoints && this.multibodyJoints.remove(A2.handle, I2);
  }
  forEachCollider(A2) {
    this.colliders.forEach(A2);
  }
  forEachRigidBody(A2) {
    this.bodies.forEach(A2);
  }
  forEachActiveRigidBody(A2) {
    this.bodies.forEachActiveRigidBody(this.islands, A2);
  }
  castRay(A2, I2, g2, C2, B2, Q2, E2, i3) {
    return this.queryPipeline.castRay(this.bodies, this.colliders, A2, I2, g2, C2, B2, Q2 ? Q2.handle : null, E2 ? E2.handle : null, this.colliders.castClosure(i3));
  }
  castRayAndGetNormal(A2, I2, g2, C2, B2, Q2, E2, i3) {
    return this.queryPipeline.castRayAndGetNormal(this.bodies, this.colliders, A2, I2, g2, C2, B2, Q2 ? Q2.handle : null, E2 ? E2.handle : null, this.colliders.castClosure(i3));
  }
  intersectionsWithRay(A2, I2, g2, C2, B2, Q2, E2, i3, D2) {
    this.queryPipeline.intersectionsWithRay(this.bodies, this.colliders, A2, I2, g2, C2, B2, Q2, E2 ? E2.handle : null, i3 ? i3.handle : null, this.colliders.castClosure(D2));
  }
  intersectionWithShape(A2, I2, g2, C2, B2, Q2, E2, i3) {
    let D2 = this.queryPipeline.intersectionWithShape(this.bodies, this.colliders, A2, I2, g2, C2, B2, Q2 ? Q2.handle : null, E2 ? E2.handle : null, this.colliders.castClosure(i3));
    return null != D2 ? this.colliders.get(D2) : null;
  }
  projectPoint(A2, I2, g2, C2, B2, Q2, E2) {
    return this.queryPipeline.projectPoint(this.bodies, this.colliders, A2, I2, g2, C2, B2 ? B2.handle : null, Q2 ? Q2.handle : null, this.colliders.castClosure(E2));
  }
  projectPointAndGetFeature(A2, I2, g2, C2, B2, Q2) {
    return this.queryPipeline.projectPointAndGetFeature(this.bodies, this.colliders, A2, I2, g2, C2 ? C2.handle : null, B2 ? B2.handle : null, this.colliders.castClosure(Q2));
  }
  intersectionsWithPoint(A2, I2, g2, C2, B2, Q2, E2) {
    this.queryPipeline.intersectionsWithPoint(this.bodies, this.colliders, A2, this.colliders.castClosure(I2), g2, C2, B2 ? B2.handle : null, Q2 ? Q2.handle : null, this.colliders.castClosure(E2));
  }
  castShape(A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2, S2, w2) {
    return this.queryPipeline.castShape(this.bodies, this.colliders, A2, I2, g2, C2, B2, Q2, E2, i3, D2, o2 ? o2.handle : null, S2 ? S2.handle : null, this.colliders.castClosure(w2));
  }
  intersectionsWithShape(A2, I2, g2, C2, B2, Q2, E2, i3, D2) {
    this.queryPipeline.intersectionsWithShape(this.bodies, this.colliders, A2, I2, g2, this.colliders.castClosure(C2), B2, Q2, E2 ? E2.handle : null, i3 ? i3.handle : null, this.colliders.castClosure(D2));
  }
  collidersWithAabbIntersectingAabb(A2, I2, g2) {
    this.queryPipeline.collidersWithAabbIntersectingAabb(A2, I2, this.colliders.castClosure(g2));
  }
  contactPairsWith(A2, I2) {
    this.narrowPhase.contactPairsWith(A2.handle, this.colliders.castClosure(I2));
  }
  intersectionPairsWith(A2, I2) {
    this.narrowPhase.intersectionPairsWith(A2.handle, this.colliders.castClosure(I2));
  }
  contactPair(A2, I2, g2) {
    this.narrowPhase.contactPair(A2.handle, I2.handle, g2);
  }
  intersectionPair(A2, I2) {
    return this.narrowPhase.intersectionPair(A2.handle, I2.handle);
  }
};
!function(A2) {
  A2[A2.NONE = 0] = "NONE", A2[A2.COLLISION_EVENTS = 1] = "COLLISION_EVENTS", A2[A2.CONTACT_FORCE_EVENTS = 2] = "CONTACT_FORCE_EVENTS";
}(EI || (EI = {}));
var ag = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  collider1() {
    return this.raw.collider1();
  }
  collider2() {
    return this.raw.collider2();
  }
  totalForce() {
    return fA.fromRaw(this.raw.total_force());
  }
  totalForceMagnitude() {
    return this.raw.total_force_magnitude();
  }
  maxForceDirection() {
    return fA.fromRaw(this.raw.max_force_direction());
  }
  maxForceMagnitude() {
    return this.raw.max_force_magnitude();
  }
};
var Fg = class {
  constructor(A2, I2) {
    this.raw = I2 || new _(A2);
  }
  free() {
    this.raw && this.raw.free(), this.raw = void 0;
  }
  drainCollisionEvents(A2) {
    this.raw.drainCollisionEvents(A2);
  }
  drainContactForceEvents(A2) {
    let I2 = new ag();
    this.raw.drainContactForceEvents((g2) => {
      I2.raw = g2, A2(I2), I2.free();
    });
  }
  clear() {
    this.raw.clear();
  }
};
!function(A2) {
  A2[A2.NONE = 0] = "NONE", A2[A2.FILTER_CONTACT_PAIRS = 1] = "FILTER_CONTACT_PAIRS", A2[A2.FILTER_INTERSECTION_PAIRS = 2] = "FILTER_INTERSECTION_PAIRS";
}(iI || (iI = {})), function(A2) {
  A2[A2.EMPTY = 0] = "EMPTY", A2[A2.COMPUTE_IMPULSE = 1] = "COMPUTE_IMPULSE";
}(DI || (DI = {})), function(A2) {
  A2[A2.DYNAMIC_DYNAMIC = 1] = "DYNAMIC_DYNAMIC", A2[A2.DYNAMIC_KINEMATIC = 12] = "DYNAMIC_KINEMATIC", A2[A2.DYNAMIC_FIXED = 2] = "DYNAMIC_FIXED", A2[A2.KINEMATIC_KINEMATIC = 52224] = "KINEMATIC_KINEMATIC", A2[A2.KINEMATIC_FIXED = 8704] = "KINEMATIC_FIXED", A2[A2.FIXED_FIXED = 32] = "FIXED_FIXED", A2[A2.DEFAULT = 15] = "DEFAULT", A2[A2.ALL = 60943] = "ALL";
}(oI || (oI = {}));
var sg = class {
  constructor(A2, I2, g2, C2) {
    this.colliderSet = A2, this.handle = I2, this._parent = g2, this._shape = C2;
  }
  finalizeDeserialization(A2) {
    null != this.handle && (this._parent = A2.get(this.colliderSet.raw.coParent(this.handle)));
  }
  ensureShapeIsCached() {
    this._shape || (this._shape = PI.fromRaw(this.colliderSet.raw, this.handle));
  }
  get shape() {
    return this.ensureShapeIsCached(), this._shape;
  }
  isValid() {
    return this.colliderSet.raw.contains(this.handle);
  }
  translation() {
    return fA.fromRaw(this.colliderSet.raw.coTranslation(this.handle));
  }
  rotation() {
    return XA.fromRaw(this.colliderSet.raw.coRotation(this.handle));
  }
  isSensor() {
    return this.colliderSet.raw.coIsSensor(this.handle);
  }
  setSensor(A2) {
    this.colliderSet.raw.coSetSensor(this.handle, A2);
  }
  setShape(A2) {
    let I2 = A2.intoRaw();
    this.colliderSet.raw.coSetShape(this.handle, I2), I2.free(), this._shape = A2;
  }
  setEnabled(A2) {
    this.colliderSet.raw.coSetEnabled(this.handle, A2);
  }
  isEnabled() {
    return this.colliderSet.raw.coIsEnabled(this.handle);
  }
  setRestitution(A2) {
    this.colliderSet.raw.coSetRestitution(this.handle, A2);
  }
  setFriction(A2) {
    this.colliderSet.raw.coSetFriction(this.handle, A2);
  }
  frictionCombineRule() {
    return this.colliderSet.raw.coFrictionCombineRule(this.handle);
  }
  setFrictionCombineRule(A2) {
    this.colliderSet.raw.coSetFrictionCombineRule(this.handle, A2);
  }
  restitutionCombineRule() {
    return this.colliderSet.raw.coRestitutionCombineRule(this.handle);
  }
  setRestitutionCombineRule(A2) {
    this.colliderSet.raw.coSetRestitutionCombineRule(this.handle, A2);
  }
  setCollisionGroups(A2) {
    this.colliderSet.raw.coSetCollisionGroups(this.handle, A2);
  }
  setSolverGroups(A2) {
    this.colliderSet.raw.coSetSolverGroups(this.handle, A2);
  }
  contactSkin() {
    return this.colliderSet.raw.coContactSkin(this.handle);
  }
  setContactSkin(A2) {
    return this.colliderSet.raw.coSetContactSkin(this.handle, A2);
  }
  activeHooks() {
    return this.colliderSet.raw.coActiveHooks(this.handle);
  }
  setActiveHooks(A2) {
    this.colliderSet.raw.coSetActiveHooks(this.handle, A2);
  }
  activeEvents() {
    return this.colliderSet.raw.coActiveEvents(this.handle);
  }
  setActiveEvents(A2) {
    this.colliderSet.raw.coSetActiveEvents(this.handle, A2);
  }
  activeCollisionTypes() {
    return this.colliderSet.raw.coActiveCollisionTypes(this.handle);
  }
  setContactForceEventThreshold(A2) {
    return this.colliderSet.raw.coSetContactForceEventThreshold(this.handle, A2);
  }
  contactForceEventThreshold() {
    return this.colliderSet.raw.coContactForceEventThreshold(this.handle);
  }
  setActiveCollisionTypes(A2) {
    this.colliderSet.raw.coSetActiveCollisionTypes(this.handle, A2);
  }
  setDensity(A2) {
    this.colliderSet.raw.coSetDensity(this.handle, A2);
  }
  setMass(A2) {
    this.colliderSet.raw.coSetMass(this.handle, A2);
  }
  setMassProperties(A2, I2, g2, C2) {
    let B2 = fA.intoRaw(I2), Q2 = fA.intoRaw(g2), E2 = XA.intoRaw(C2);
    this.colliderSet.raw.coSetMassProperties(this.handle, A2, B2, Q2, E2), B2.free(), Q2.free(), E2.free();
  }
  setTranslation(A2) {
    this.colliderSet.raw.coSetTranslation(this.handle, A2.x, A2.y, A2.z);
  }
  setTranslationWrtParent(A2) {
    this.colliderSet.raw.coSetTranslationWrtParent(this.handle, A2.x, A2.y, A2.z);
  }
  setRotation(A2) {
    this.colliderSet.raw.coSetRotation(this.handle, A2.x, A2.y, A2.z, A2.w);
  }
  setRotationWrtParent(A2) {
    this.colliderSet.raw.coSetRotationWrtParent(this.handle, A2.x, A2.y, A2.z, A2.w);
  }
  shapeType() {
    return this.colliderSet.raw.coShapeType(this.handle);
  }
  halfExtents() {
    return fA.fromRaw(this.colliderSet.raw.coHalfExtents(this.handle));
  }
  setHalfExtents(A2) {
    const I2 = fA.intoRaw(A2);
    this.colliderSet.raw.coSetHalfExtents(this.handle, I2);
  }
  radius() {
    return this.colliderSet.raw.coRadius(this.handle);
  }
  setRadius(A2) {
    this.colliderSet.raw.coSetRadius(this.handle, A2);
  }
  roundRadius() {
    return this.colliderSet.raw.coRoundRadius(this.handle);
  }
  setRoundRadius(A2) {
    this.colliderSet.raw.coSetRoundRadius(this.handle, A2);
  }
  halfHeight() {
    return this.colliderSet.raw.coHalfHeight(this.handle);
  }
  setHalfHeight(A2) {
    this.colliderSet.raw.coSetHalfHeight(this.handle, A2);
  }
  vertices() {
    return this.colliderSet.raw.coVertices(this.handle);
  }
  indices() {
    return this.colliderSet.raw.coIndices(this.handle);
  }
  heightfieldHeights() {
    return this.colliderSet.raw.coHeightfieldHeights(this.handle);
  }
  heightfieldScale() {
    let A2 = this.colliderSet.raw.coHeightfieldScale(this.handle);
    return fA.fromRaw(A2);
  }
  heightfieldNRows() {
    return this.colliderSet.raw.coHeightfieldNRows(this.handle);
  }
  heightfieldNCols() {
    return this.colliderSet.raw.coHeightfieldNCols(this.handle);
  }
  parent() {
    return this._parent;
  }
  friction() {
    return this.colliderSet.raw.coFriction(this.handle);
  }
  restitution() {
    return this.colliderSet.raw.coRestitution(this.handle);
  }
  density() {
    return this.colliderSet.raw.coDensity(this.handle);
  }
  mass() {
    return this.colliderSet.raw.coMass(this.handle);
  }
  volume() {
    return this.colliderSet.raw.coVolume(this.handle);
  }
  collisionGroups() {
    return this.colliderSet.raw.coCollisionGroups(this.handle);
  }
  solverGroups() {
    return this.colliderSet.raw.coSolverGroups(this.handle);
  }
  containsPoint(A2) {
    let I2 = fA.intoRaw(A2), g2 = this.colliderSet.raw.coContainsPoint(this.handle, I2);
    return I2.free(), g2;
  }
  projectPoint(A2, I2) {
    let g2 = fA.intoRaw(A2), C2 = bI.fromRaw(this.colliderSet.raw.coProjectPoint(this.handle, g2, I2));
    return g2.free(), C2;
  }
  intersectsRay(A2, I2) {
    let g2 = fA.intoRaw(A2.origin), C2 = fA.intoRaw(A2.dir), B2 = this.colliderSet.raw.coIntersectsRay(this.handle, g2, C2, I2);
    return g2.free(), C2.free(), B2;
  }
  castShape(A2, I2, g2, C2, B2, Q2, E2, i3) {
    let D2 = fA.intoRaw(A2), o2 = fA.intoRaw(g2), S2 = XA.intoRaw(C2), w2 = fA.intoRaw(B2), G2 = I2.intoRaw(), k2 = VI.fromRaw(this.colliderSet, this.colliderSet.raw.coCastShape(this.handle, D2, G2, o2, S2, w2, Q2, E2, i3));
    return D2.free(), o2.free(), S2.free(), w2.free(), G2.free(), k2;
  }
  castCollider(A2, I2, g2, C2, B2, Q2) {
    let E2 = fA.intoRaw(A2), i3 = fA.intoRaw(g2), D2 = XI.fromRaw(this.colliderSet, this.colliderSet.raw.coCastCollider(this.handle, E2, I2.handle, i3, C2, B2, Q2));
    return E2.free(), i3.free(), D2;
  }
  intersectsShape(A2, I2, g2) {
    let C2 = fA.intoRaw(I2), B2 = XA.intoRaw(g2), Q2 = A2.intoRaw(), E2 = this.colliderSet.raw.coIntersectsShape(this.handle, Q2, C2, B2);
    return C2.free(), B2.free(), Q2.free(), E2;
  }
  contactShape(A2, I2, g2, C2) {
    let B2 = fA.intoRaw(I2), Q2 = XA.intoRaw(g2), E2 = A2.intoRaw(), i3 = ZI.fromRaw(this.colliderSet.raw.coContactShape(this.handle, E2, B2, Q2, C2));
    return B2.free(), Q2.free(), E2.free(), i3;
  }
  contactCollider(A2, I2) {
    return ZI.fromRaw(this.colliderSet.raw.coContactCollider(this.handle, A2.handle, I2));
  }
  castRay(A2, I2, g2) {
    let C2 = fA.intoRaw(A2.origin), B2 = fA.intoRaw(A2.dir), Q2 = this.colliderSet.raw.coCastRay(this.handle, C2, B2, I2, g2);
    return C2.free(), B2.free(), Q2;
  }
  castRayAndGetNormal(A2, I2, g2) {
    let C2 = fA.intoRaw(A2.origin), B2 = fA.intoRaw(A2.dir), Q2 = jI.fromRaw(this.colliderSet.raw.coCastRayAndGetNormal(this.handle, C2, B2, I2, g2));
    return C2.free(), B2.free(), Q2;
  }
};
!function(A2) {
  A2[A2.Density = 0] = "Density", A2[A2.Mass = 1] = "Mass", A2[A2.MassProps = 2] = "MassProps";
}(SI || (SI = {}));
var Rg = class _Rg {
  constructor(A2) {
    this.enabled = true, this.shape = A2, this.massPropsMode = SI.Density, this.density = 1, this.friction = 0.5, this.restitution = 0, this.rotation = XA.identity(), this.translation = fA.zeros(), this.isSensor = false, this.collisionGroups = 4294967295, this.solverGroups = 4294967295, this.frictionCombineRule = AI.Average, this.restitutionCombineRule = AI.Average, this.activeCollisionTypes = oI.DEFAULT, this.activeEvents = EI.NONE, this.activeHooks = iI.NONE, this.mass = 0, this.centerOfMass = fA.zeros(), this.contactForceEventThreshold = 0, this.contactSkin = 0, this.principalAngularInertia = fA.zeros(), this.angularInertiaLocalFrame = XA.identity();
  }
  static ball(A2) {
    const I2 = new uI(A2);
    return new _Rg(I2);
  }
  static capsule(A2, I2) {
    const g2 = new $I(A2, I2);
    return new _Rg(g2);
  }
  static segment(A2, I2) {
    const g2 = new Ag(A2, I2);
    return new _Rg(g2);
  }
  static triangle(A2, I2, g2) {
    const C2 = new Ig(A2, I2, g2);
    return new _Rg(C2);
  }
  static roundTriangle(A2, I2, g2, C2) {
    const B2 = new gg(A2, I2, g2, C2);
    return new _Rg(B2);
  }
  static polyline(A2, I2) {
    const g2 = new Cg(A2, I2);
    return new _Rg(g2);
  }
  static trimesh(A2, I2, g2) {
    const C2 = new Bg(A2, I2, g2);
    return new _Rg(C2);
  }
  static cuboid(A2, I2, g2) {
    const C2 = new vI(A2, I2, g2);
    return new _Rg(C2);
  }
  static roundCuboid(A2, I2, g2, C2) {
    const B2 = new _I(A2, I2, g2, C2);
    return new _Rg(B2);
  }
  static heightfield(A2, I2, g2, C2, B2) {
    const Q2 = new ig(A2, I2, g2, C2, B2);
    return new _Rg(Q2);
  }
  static cylinder(A2, I2) {
    const g2 = new Dg(A2, I2);
    return new _Rg(g2);
  }
  static roundCylinder(A2, I2, g2) {
    const C2 = new og(A2, I2, g2);
    return new _Rg(C2);
  }
  static cone(A2, I2) {
    const g2 = new Sg(A2, I2);
    return new _Rg(g2);
  }
  static roundCone(A2, I2, g2) {
    const C2 = new wg(A2, I2, g2);
    return new _Rg(C2);
  }
  static convexHull(A2) {
    const I2 = new Qg(A2, null);
    return new _Rg(I2);
  }
  static convexMesh(A2, I2) {
    const g2 = new Qg(A2, I2);
    return new _Rg(g2);
  }
  static roundConvexHull(A2, I2) {
    const g2 = new Eg(A2, null, I2);
    return new _Rg(g2);
  }
  static roundConvexMesh(A2, I2, g2) {
    const C2 = new Eg(A2, I2, g2);
    return new _Rg(C2);
  }
  setTranslation(A2, I2, g2) {
    if ("number" != typeof A2 || "number" != typeof I2 || "number" != typeof g2) throw TypeError("The translation components must be numbers.");
    return this.translation = { x: A2, y: I2, z: g2 }, this;
  }
  setRotation(A2) {
    return XA.copy(this.rotation, A2), this;
  }
  setSensor(A2) {
    return this.isSensor = A2, this;
  }
  setEnabled(A2) {
    return this.enabled = A2, this;
  }
  setContactSkin(A2) {
    return this.contactSkin = A2, this;
  }
  setDensity(A2) {
    return this.massPropsMode = SI.Density, this.density = A2, this;
  }
  setMass(A2) {
    return this.massPropsMode = SI.Mass, this.mass = A2, this;
  }
  setMassProperties(A2, I2, g2, C2) {
    return this.massPropsMode = SI.MassProps, this.mass = A2, fA.copy(this.centerOfMass, I2), fA.copy(this.principalAngularInertia, g2), XA.copy(this.angularInertiaLocalFrame, C2), this;
  }
  setRestitution(A2) {
    return this.restitution = A2, this;
  }
  setFriction(A2) {
    return this.friction = A2, this;
  }
  setFrictionCombineRule(A2) {
    return this.frictionCombineRule = A2, this;
  }
  setRestitutionCombineRule(A2) {
    return this.restitutionCombineRule = A2, this;
  }
  setCollisionGroups(A2) {
    return this.collisionGroups = A2, this;
  }
  setSolverGroups(A2) {
    return this.solverGroups = A2, this;
  }
  setActiveHooks(A2) {
    return this.activeHooks = A2, this;
  }
  setActiveEvents(A2) {
    return this.activeEvents = A2, this;
  }
  setActiveCollisionTypes(A2) {
    return this.activeCollisionTypes = A2, this;
  }
  setContactForceEventThreshold(A2) {
    return this.contactForceEventThreshold = A2, this;
  }
};
var cg = class {
  free() {
    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;
  }
  constructor(A2) {
    this.raw = A2 || new n(), this.map = new kI(), A2 && A2.forEachColliderHandle((A3) => {
      this.map.set(A3, new sg(this, A3, null));
    });
  }
  castClosure(A2) {
    return (I2) => A2 ? A2(this.get(I2)) : void 0;
  }
  finalizeDeserialization(A2) {
    this.map.forEach((I2) => I2.finalizeDeserialization(A2));
  }
  createCollider(A2, I2, g2) {
    let C2 = null != g2 && null != g2;
    if (C2 && isNaN(g2)) throw Error("Cannot create a collider with a parent rigid-body handle that is not a number.");
    let B2 = I2.shape.intoRaw(), Q2 = fA.intoRaw(I2.translation), E2 = XA.intoRaw(I2.rotation), i3 = fA.intoRaw(I2.centerOfMass), D2 = fA.intoRaw(I2.principalAngularInertia), o2 = XA.intoRaw(I2.angularInertiaLocalFrame), S2 = this.raw.createCollider(I2.enabled, B2, Q2, E2, I2.massPropsMode, I2.mass, i3, D2, o2, I2.density, I2.friction, I2.restitution, I2.frictionCombineRule, I2.restitutionCombineRule, I2.isSensor, I2.collisionGroups, I2.solverGroups, I2.activeCollisionTypes, I2.activeHooks, I2.activeEvents, I2.contactForceEventThreshold, I2.contactSkin, C2, C2 ? g2 : 0, A2.raw);
    B2.free(), Q2.free(), E2.free(), i3.free(), D2.free(), o2.free();
    let w2 = C2 ? A2.get(g2) : null, G2 = new sg(this, S2, w2, I2.shape);
    return this.map.set(S2, G2), G2;
  }
  remove(A2, I2, g2, C2) {
    this.raw.remove(A2, I2.raw, g2.raw, C2), this.unmap(A2);
  }
  unmap(A2) {
    this.map.delete(A2);
  }
  get(A2) {
    return this.map.get(A2);
  }
  len() {
    return this.map.len();
  }
  contains(A2) {
    return null != this.get(A2);
  }
  forEach(A2) {
    this.map.forEach(A2);
  }
  getAll() {
    return this.map.getAll();
  }
};
function Yg(A2, I2, g2, C2) {
  return new (g2 || (g2 = Promise))(function(B2, Q2) {
    function E2(A3) {
      try {
        D2(C2.next(A3));
      } catch (A4) {
        Q2(A4);
      }
    }
    function i3(A3) {
      try {
        D2(C2.throw(A3));
      } catch (A4) {
        Q2(A4);
      }
    }
    function D2(A3) {
      var I3;
      A3.done ? B2(A3.value) : (I3 = A3.value, I3 instanceof g2 ? I3 : new g2(function(A4) {
        A4(I3);
      })).then(E2, i3);
    }
    D2((C2 = C2.apply(A2, I2 || [])).next());
  });
}
for (qg = { byteLength: function(A2) {
  var I2 = eg(A2), g2 = I2[0], C2 = I2[1];
  return 3 * (g2 + C2) / 4 - C2;
}, toByteArray: function(A2) {
  var I2, g2, C2 = eg(A2), B2 = C2[0], Q2 = C2[1], E2 = new Hg(function(A3, I3, g3) {
    return 3 * (I3 + g3) / 4 - g3;
  }(0, B2, Q2)), i3 = 0, D2 = Q2 > 0 ? B2 - 4 : B2;
  for (g2 = 0; g2 < D2; g2 += 4) I2 = Lg[A2.charCodeAt(g2)] << 18 | Lg[A2.charCodeAt(g2 + 1)] << 12 | Lg[A2.charCodeAt(g2 + 2)] << 6 | Lg[A2.charCodeAt(g2 + 3)], E2[i3++] = I2 >> 16 & 255, E2[i3++] = I2 >> 8 & 255, E2[i3++] = 255 & I2;
  2 === Q2 && (I2 = Lg[A2.charCodeAt(g2)] << 2 | Lg[A2.charCodeAt(g2 + 1)] >> 4, E2[i3++] = 255 & I2);
  1 === Q2 && (I2 = Lg[A2.charCodeAt(g2)] << 10 | Lg[A2.charCodeAt(g2 + 1)] << 4 | Lg[A2.charCodeAt(g2 + 2)] >> 2, E2[i3++] = I2 >> 8 & 255, E2[i3++] = 255 & I2);
  return E2;
}, fromByteArray: function(A2) {
  for (var I2, g2 = A2.length, C2 = g2 % 3, B2 = [], Q2 = 16383, E2 = 0, i3 = g2 - C2; E2 < i3; E2 += Q2) B2.push(rg(A2, E2, E2 + Q2 > i3 ? i3 : E2 + Q2));
  1 === C2 ? (I2 = A2[g2 - 1], B2.push(lg[I2 >> 2] + lg[I2 << 4 & 63] + "==")) : 2 === C2 && (I2 = (A2[g2 - 2] << 8) + A2[g2 - 1], B2.push(lg[I2 >> 10] + lg[I2 >> 4 & 63] + lg[I2 << 2 & 63] + "="));
  return B2.join("");
} }, lg = [], Lg = [], Hg = "undefined" != typeof Uint8Array ? Uint8Array : Array, tg = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", pg = 0; pg < 64; ++pg) lg[pg] = tg[pg], Lg[tg.charCodeAt(pg)] = pg;
var qg;
var lg;
var Lg;
var Hg;
var tg;
var pg;
function eg(A2) {
  var I2 = A2.length;
  if (I2 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
  var g2 = A2.indexOf("=");
  return -1 === g2 && (g2 = I2), [g2, g2 === I2 ? 0 : 4 - g2 % 4];
}
function rg(A2, I2, g2) {
  for (var C2, B2, Q2 = [], E2 = I2; E2 < g2; E2 += 3) C2 = (A2[E2] << 16 & 16711680) + (A2[E2 + 1] << 8 & 65280) + (255 & A2[E2 + 2]), Q2.push(lg[(B2 = C2) >> 18 & 63] + lg[B2 >> 12 & 63] + lg[B2 >> 6 & 63] + lg[63 & B2]);
  return Q2.join("");
}
function dg() {
  return Yg(this, void 0, void 0, function* () {
    yield jA(qg.toByteArray("").buffer);
  });
}
function ng() {
  return function() {
    let I2, g2;
    try {
      const Q2 = A.__wbindgen_add_to_stack_pointer(-16);
      A.version(Q2);
      var C2 = S()[Q2 / 4 + 0], B2 = S()[Q2 / 4 + 1];
      return I2 = C2, g2 = B2, k(C2, B2);
    } finally {
      A.__wbindgen_add_to_stack_pointer(16), A.__wbindgen_free(I2, g2, 1);
    }
  }();
}
Lg["-".charCodeAt(0)] = 62, Lg["_".charCodeAt(0)] = 63;
var Tg = Object.freeze({ __proto__: null, get ActiveCollisionTypes() {
  return oI;
}, get ActiveEvents() {
  return EI;
}, get ActiveHooks() {
  return iI;
}, Ball: uI, BroadPhase: nI, CCDSolver: rI, Capsule: $I, CharacterCollision: Jg, get CoefficientCombineRule() {
  return AI;
}, Collider: sg, ColliderDesc: Rg, ColliderSet: cg, ColliderShapeCastHit: XI, Cone: Sg, ConvexPolyhedron: Qg, Cuboid: vI, Cylinder: Dg, DebugRenderBuffers: Ug, DebugRenderPipeline: hg, DynamicRayCastVehicleController: Ng, EventQueue: Fg, get FeatureType() {
  return II;
}, FixedImpulseJoint: yI, FixedMultibodyJoint: LI, GenericImpulseJoint: sI, HalfSpace: zI, get HeightFieldFlags() {
  return CI;
}, Heightfield: ig, ImpulseJoint: hI, ImpulseJointSet: YI, IntegrationParameters: UI, IslandManager: dI, get JointAxesMask() {
  return $A;
}, JointData: cI, get JointType() {
  return vA;
}, KinematicCharacterController: yg, get MassPropsMode() {
  return SI;
}, get MotorModel() {
  return _A;
}, MultibodyJoint: qI, MultibodyJointSet: eI, NarrowPhase: TI, PhysicsPipeline: Gg, PointColliderProjection: WI, PointProjection: bI, Polyline: Cg, PrismaticImpulseJoint: aI, PrismaticMultibodyJoint: HI, Quaternion: VA, get QueryFilterFlags() {
  return QI;
}, QueryPipeline: kg, Ray: xI, RayColliderHit: fI, RayColliderIntersection: mI, RayIntersection: jI, RevoluteImpulseJoint: FI, RevoluteMultibodyJoint: tI, RigidBody: wI, RigidBodyDesc: GI, RigidBodySet: KI, get RigidBodyType() {
  return zA;
}, RopeImpulseJoint: NI, RotationOps: XA, RoundCone: wg, RoundConvexPolyhedron: Eg, RoundCuboid: _I, RoundCylinder: og, RoundTriangle: gg, SdpMatrix3: PA, SdpMatrix3Ops: uA, Segment: Ag, SerializationPipeline: Kg, Shape: PI, ShapeCastHit: VI, ShapeContact: ZI, get ShapeType() {
  return gI;
}, get SolverFlags() {
  return DI;
}, SphericalImpulseJoint: RI, SphericalMultibodyJoint: pI, SpringImpulseJoint: MI, TempContactForceEvent: ag, TempContactManifold: OI, TriMesh: Bg, get TriMeshFlags() {
  return BI;
}, Triangle: Ig, UnitImpulseJoint: JI, UnitMultibodyJoint: lI, Vector3: mA, VectorOps: fA, World: Mg, init: dg, version: ng });

// src/plugins/PhysicsRapier/PhysicsRapier.ts
var PhysicsRapier = class _PhysicsRapier extends Component {
  static hasLoaded = false;
  static Physics;
  static PhysicsWorld;
  Load() {
    return new Promise((resolve) => {
      Tg.init().then(() => {
        let gravity = { x: 0, y: -9.81, z: 0 };
        let world = new Tg.World(gravity);
        _PhysicsRapier.Physics = Tg;
        _PhysicsRapier.PhysicsWorld = world;
        _PhysicsRapier.hasLoaded = true;
        resolve(true);
      });
    });
  }
  Update() {
    if (!_PhysicsRapier.hasLoaded) return;
    _PhysicsRapier.PhysicsWorld.step();
  }
};

// src/plugins/PhysicsRapier/colliders/Collider.ts
var Collider = class extends Component {
  collider;
  colliderDesc;
};

// src/plugins/PhysicsRapier/colliders/SphereCollider.ts
var SphereCollider = class extends Collider {
  constructor(gameObject) {
    super(gameObject);
    this.colliderDesc = PhysicsRapier.Physics.ColliderDesc.ball(this.transform.scale.x * 0.5);
    this.collider = PhysicsRapier.PhysicsWorld.createCollider(this.colliderDesc);
    this.collider.setTranslation(new PhysicsRapier.Physics.Vector3(this.transform.position.x, this.transform.position.y, this.transform.position.z));
  }
};

// src/plugins/PhysicsRapier/RigidBody.ts
var RigidBody = class extends Component {
  rigidBody;
  rigidBodyDesc;
  constructor(gameObject) {
    super(gameObject);
  }
  Create(type) {
    const collider = this.gameObject.GetComponent(Collider);
    if (!collider.collider) throw Error("Rigidbody needs a collider");
    if (type === "fixed") this.rigidBodyDesc = PhysicsRapier.Physics.RigidBodyDesc.fixed();
    else if (type === "dynamic") this.rigidBodyDesc = PhysicsRapier.Physics.RigidBodyDesc.dynamic();
    else if (type === "kinematicVelocity") this.rigidBodyDesc = PhysicsRapier.Physics.RigidBodyDesc.kinematicVelocityBased();
    else if (type === "kinematicPosition") this.rigidBodyDesc = PhysicsRapier.Physics.RigidBodyDesc.kinematicPositionBased();
    else throw Error("Unknown type");
    this.rigidBody = PhysicsRapier.PhysicsWorld.createRigidBody(this.rigidBodyDesc);
    this.rigidBody.setTranslation(this.transform.position, true);
    this.rigidBody.setRotation(this.transform.rotation, true);
    PhysicsRapier.PhysicsWorld.removeCollider(collider.collider, false);
    collider.collider = PhysicsRapier.PhysicsWorld.createCollider(collider.colliderDesc, this.rigidBody);
    collider.colliderDesc = collider.colliderDesc;
  }
  Update() {
    if (!this.rigidBody) return;
    const t2 = this.rigidBody.translation();
    this.transform.position.set(t2.x, t2.y, t2.z);
    const r2 = this.rigidBody.rotation();
    this.transform.rotation.set(r2.x, r2.y, r2.z, r2.w);
  }
};

// src/plugins/PhysicsRapier/colliders/TerrainCollider.ts
var TerrainCollider = class extends Collider {
  constructor(gameObject) {
    super(gameObject);
  }
  SetTerrainData(nrows, ncols, heights, scale2) {
    this.colliderDesc = PhysicsRapier.Physics.ColliderDesc.heightfield(nrows, ncols, heights, scale2);
    this.collider = PhysicsRapier.PhysicsWorld.createCollider(this.colliderDesc);
    const p2 = this.transform.position.clone().add(new Vector3(nrows * 0.5, 0, ncols * 0.5));
    this.collider.setTranslation(p2);
    this.collider.setRotation(this.transform.rotation);
  }
  SetTerrainDataTrimesh(vertices, indices) {
    this.colliderDesc = PhysicsRapier.Physics.ColliderDesc.trimesh(vertices, indices);
    this.collider = PhysicsRapier.PhysicsWorld.createCollider(this.colliderDesc);
    this.collider.setTranslation(this.transform.position);
    this.collider.setRotation(this.transform.rotation);
  }
};

// src/plugins/Line.ts
var Line = class {
  geometry;
  constructor(scene, from, to, color = new Vector3(1, 1, 1)) {
    this.Create(scene, from, to, color);
  }
  async Create(scene, from, to, color = new Vector3(1, 1, 1)) {
    const m2 = new Material();
    m2.shader = await Shader.Create({
      code: `
            struct VertexInput {
                @builtin(instance_index) instanceIdx : u32, 
                @location(0) position : vec3<f32>,
                @location(1) color : vec3<f32>,
            };
            
            struct VertexOutput {
                @builtin(position) position : vec4<f32>,
                @location(0) vPosition : vec3<f32>,
                @location(1) vColor : vec3<f32>,
            };
            
            @group(0) @binding(0) var<storage, read> projectionMatrix: mat4x4<f32>;
            @group(0) @binding(1) var<storage, read> viewMatrix: mat4x4<f32>;
            @group(0) @binding(2) var<storage, read> modelMatrix: array<mat4x4<f32>>;
            @group(0) @binding(3) var<storage, read> cameraPosition: vec4<f32>;
            
            @vertex
            fn vertexMain(input: VertexInput) -> VertexOutput {
                var output : VertexOutput;
            
                var modelMatrixInstance = modelMatrix[input.instanceIdx];
                var modelViewMatrix = viewMatrix * modelMatrixInstance;
            
                output.position = projectionMatrix * modelViewMatrix * vec4(input.position, 1.0);
                
                output.vPosition = input.position;
                output.vColor = input.color;
                // output.vNormal = input.normal;
                // output.vUv = input.uv;
            
                return output;
            }
            
            struct FragmentOutput {
                @location(0) albedo : vec4f,
                @location(1) normal : vec4f,
                @location(2) RMO : vec4f,
            };
            
            @fragment
            fn fragmentMain(input: VertexOutput) -> FragmentOutput {
                var output: FragmentOutput;
            
                var albedo = vec3f(input.vColor);
                var normal = vec3f(1.0);
                var unlit = 1.0;
                output.albedo = vec4(albedo.rgb, 1.0);
                output.normal = vec4(normal, 0.0);
                output.RMO = vec4(vec3(0.0), unlit);

                return output;
            }
            `,
      colorOutputs: [{ format: "rgba16float" }, { format: "rgba16float" }, { format: "rgba16float" }],
      depthOutput: "depth24plus",
      attributes: {
        position: { location: 0, size: 3, type: "vec3" },
        color: { location: 1, size: 3, type: "vec3" }
      },
      uniforms: {
        projectionMatrix: { group: 0, binding: 0, type: "storage" },
        viewMatrix: { group: 0, binding: 1, type: "storage" },
        modelMatrix: { group: 0, binding: 2, type: "storage" },
        cameraPosition: { group: 0, binding: 3, type: "storage" }
      },
      cullMode: "none",
      topology: "line-list" /* Lines */
    });
    this.geometry = new Geometry();
    this.geometry.attributes.set("position", new VertexAttribute(new Float32Array([...from.elements, ...to.elements])));
    this.geometry.attributes.set("color", new VertexAttribute(new Float32Array([...color.elements, ...color.elements])));
    const linesGO = new GameObject(scene);
    const mesh = linesGO.AddComponent(Mesh);
    await mesh.SetGeometry(this.geometry);
    mesh.AddMaterial(m2);
  }
  SetFrom(from) {
    if (!this.geometry) return;
    const p2 = this.geometry.attributes.get("position");
    p2.buffer.SetArray(new Float32Array([...from.elements]), 0);
  }
  SetTo(to) {
    if (!this.geometry) return;
    const p2 = this.geometry.attributes.get("position");
    p2.buffer.SetArray(new Float32Array([...to.elements]), 3 * 4);
  }
  SetColor(color) {
    if (!this.geometry) return;
    const p2 = this.geometry.attributes.get("color");
    p2.buffer.SetArray(new Float32Array([...color.elements, ...color.elements]), 0);
  }
};

// src/plugins/PhysicsRapier/FirstPersonController.ts
var FirstPersonController = class extends Component {
  camera;
  collider;
  rigidbody;
  speed = 5;
  boostMultiplier = 10;
  orbitSpeed = 0.01;
  rayDistance = 1;
  v = new Vector3();
  keysPressed = { forward: false, backward: false, left: false, right: false, boost: false, up: false, down: false, jump: false };
  mouse = { deltaX: 0, deltaY: 0, left: false };
  line;
  target;
  state = 4 /* FALLING */;
  floorY = 0;
  async Start() {
    if (!this.camera) throw Error("Camera parameter not set");
    const collider = this.gameObject.GetComponent(Collider);
    if (!collider) throw Error("FirstPersonController needs a collider attached to it");
    this.collider = collider;
    const rigidbody = this.gameObject.GetComponent(RigidBody);
    if (!rigidbody) throw Error("FirstPersonController needs a rigidbody attached to it");
    this.rigidbody = rigidbody;
    this.camera.transform.position.copy(this.transform.position);
    document.addEventListener("keydown", (event) => {
      if (event.key === "w") this.keysPressed.forward = true;
      if (event.key === "s") this.keysPressed.backward = true;
      if (event.key === "a") this.keysPressed.left = true;
      if (event.key === "d") this.keysPressed.right = true;
      if (event.key === "q") this.keysPressed.up = true;
      if (event.key === "e") this.keysPressed.down = true;
      if (event.key === " ") this.keysPressed.jump = true;
      if (event.key === "Shift") this.keysPressed.boost = true;
    });
    document.addEventListener("keyup", (event) => {
      if (event.key === "w") this.keysPressed.forward = false;
      if (event.key === "s") this.keysPressed.backward = false;
      if (event.key === "a") this.keysPressed.left = false;
      if (event.key === "d") this.keysPressed.right = false;
      if (event.key === "q") this.keysPressed.up = false;
      if (event.key === "e") this.keysPressed.down = false;
      if (event.key === " ") this.keysPressed.jump = false;
      if (event.key === "Shift") this.keysPressed.boost = false;
    });
    document.addEventListener("mousedown", (event) => {
      document.body.requestPointerLock();
      this.mouse.left = true;
    });
    document.addEventListener("mouseup", (event) => {
      document.exitPointerLock();
      this.mouse.left = false;
    });
    document.addEventListener("mousemove", (event) => {
      if (this.mouse.left === false) return;
      this.mouse.deltaX += event.movementX * this.orbitSpeed;
      this.mouse.deltaY += event.movementY * this.orbitSpeed;
      this.camera.transform.rotation.fromEuler(new Vector3(this.mouse.deltaY, this.mouse.deltaX, 0));
    });
    const scene = Camera.mainCamera.gameObject.scene;
    this.line = new Line(scene, new Vector3(0, 0, 0), new Vector3(0, 0, 0));
    this.target = this.transform;
  }
  GroundRayCast() {
    const direction = this.target.up.clone().mul(-1);
    const from = this.target.position.clone();
    let ray = new PhysicsRapier.Physics.Ray(from, direction);
    let hit = PhysicsRapier.PhysicsWorld.castRay(ray, this.rayDistance + 2, true, void 0, void 0, this.collider.collider);
    if (hit !== null) {
      this.state = 0 /* GROUNDED */;
      this.floorY = ray.pointAt(hit.timeOfImpact).y;
      return;
    }
    this.state = 4 /* FALLING */;
  }
  CanMove() {
    return this.state == 0 /* GROUNDED */ || this.state == 1 /* MOVING */ || this.state == 2 /* RUNNING */;
  }
  SetPosition(position) {
    this.transform.position.copy(position);
    this.rigidbody.rigidBody.setNextKinematicTranslation(position);
    this.camera.transform.position.copy(position).add(new Vector3(0, 1, 0));
  }
  HandleMovement() {
    if (!this.CanMove()) {
      const g2 = new Vector3(PhysicsRapier.PhysicsWorld.gravity.x, PhysicsRapier.PhysicsWorld.gravity.y, PhysicsRapier.PhysicsWorld.gravity.z);
      const p3 = this.target.position.clone().add(g2.mul(1 / 60));
      this.SetPosition(p3);
      return;
    }
    let speed = this.speed;
    this.v.set(0, 0, 0);
    if (this.keysPressed.forward === true) this.v.z = 1;
    if (this.keysPressed.backward === true) this.v.z = -1;
    if (this.keysPressed.right === true) this.v.x = 1;
    if (this.keysPressed.left === true) this.v.x = -1;
    if (this.keysPressed.up === true) this.v.y = 1;
    if (this.keysPressed.down === true) this.v.y = -1;
    if (this.keysPressed.boost === true) speed = this.boostMultiplier;
    this.v.applyQuaternion(this.camera.transform.rotation);
    const dt = 1 / 60;
    const movement = new Vector3(this.v.x, this.v.y, this.v.z);
    movement.normalize().mul(dt * speed);
    const p2 = this.transform.position.clone().add(movement);
    p2.y = this.floorY + this.rayDistance;
    this.SetPosition(p2);
    if (this.keysPressed.boost === true) this.state = 2 /* RUNNING */;
    else this.state = 1 /* MOVING */;
  }
  Update() {
    this.GroundRayCast();
    this.HandleMovement();
  }
};

// src/plugins/SimplexNoise.ts
var SimplexNoise = class {
  perm;
  grad3;
  constructor(seed) {
    this.grad3 = [
      [1, 1],
      [-1, 1],
      [1, -1],
      [-1, -1],
      [1, 0],
      [-1, 0],
      [0, 1],
      [0, -1]
    ];
    this.perm = new Array(512);
    const p2 = new Array(256);
    for (let i3 = 0; i3 < 256; i3++) {
      p2[i3] = i3;
    }
    if (seed !== void 0) {
      this.seedShuffle(p2, seed);
    } else {
      this.randomShuffle(p2);
    }
    for (let i3 = 0; i3 < 512; i3++) {
      this.perm[i3] = p2[i3 & 255];
    }
  }
  /**
   * Generates 2D simplex noise for the given coordinates.
   * @param xin - The x-coordinate.
   * @param yin - The y-coordinate.
   * @returns A noise value in the range [-1, 1].
   */
  noise2D(xin, yin) {
    const F2 = 0.5 * (Math.sqrt(3) - 1);
    const G2 = (3 - Math.sqrt(3)) / 6;
    let n0, n1, n2;
    const s2 = (xin + yin) * F2;
    const i3 = Math.floor(xin + s2);
    const j2 = Math.floor(yin + s2);
    const t2 = (i3 + j2) * G2;
    const X0 = i3 - t2;
    const Y0 = j2 - t2;
    const x0 = xin - X0;
    const y0 = yin - Y0;
    let i1, j1;
    if (x0 > y0) {
      i1 = 1;
      j1 = 0;
    } else {
      i1 = 0;
      j1 = 1;
    }
    const x1 = x0 - i1 + G2;
    const y1 = y0 - j1 + G2;
    const x2 = x0 - 1 + 2 * G2;
    const y2 = y0 - 1 + 2 * G2;
    const ii = i3 & 255;
    const jj = j2 & 255;
    const gi0 = this.perm[ii + this.perm[jj]] % 8;
    const gi1 = this.perm[ii + i1 + this.perm[jj + j1]] % 8;
    const gi2 = this.perm[ii + 1 + this.perm[jj + 1]] % 8;
    n0 = this.calculateCornerContribution(gi0, x0, y0);
    n1 = this.calculateCornerContribution(gi1, x1, y1);
    n2 = this.calculateCornerContribution(gi2, x2, y2);
    return 70 * (n0 + n1 + n2);
  }
  calculateCornerContribution(gi, x2, y2) {
    let t2 = 0.5 - x2 * x2 - y2 * y2;
    if (t2 < 0) {
      return 0;
    } else {
      t2 *= t2;
      const g2 = this.grad3[gi];
      return t2 * t2 * (g2[0] * x2 + g2[1] * y2);
    }
  }
  seedShuffle(array, seed) {
    let random = this.seededRandom(seed);
    for (let i3 = array.length - 1; i3 > 0; i3--) {
      const j2 = Math.floor(random() * (i3 + 1));
      [array[i3], array[j2]] = [array[j2], array[i3]];
    }
  }
  randomShuffle(array) {
    for (let i3 = array.length - 1; i3 > 0; i3--) {
      const j2 = Math.floor(Math.random() * (i3 + 1));
      [array[i3], array[j2]] = [array[j2], array[i3]];
    }
  }
  seededRandom(seed) {
    return function() {
      seed = (seed * 9301 + 49297) % 233280;
      return seed / 233280;
    };
  }
};

// src/plugins/TerrainGenerator.ts
var TerrainParamsDefaults = {
  baseScale: 5e-3,
  baseOctaves: 6,
  baseHeight: 20,
  mountainScale: 1e-3,
  mountainOctaves: 4,
  mountainHeight: 1,
  mountainSharpness: 3,
  lacunarity: 2,
  gain: 0.5
};
var TerrainGenerator = class {
  geometry;
  heights;
  constructor(size, params) {
    const n2 = new SimplexNoise(1337);
    const _params = Object.assign({}, TerrainParamsDefaults, params);
    const vertices = [];
    const uvs = [];
    const TERRAIN_SIZE = size;
    const TERRAIN_STRIDE = TERRAIN_SIZE + 1;
    const heights = new Float32Array(TERRAIN_STRIDE ** 2);
    const hmIndex = (x2, y2) => x2 * TERRAIN_STRIDE + y2;
    for (let x2 = 0; x2 < TERRAIN_SIZE; x2++) {
      for (let z2 = 0; z2 < TERRAIN_SIZE; z2++) {
        const height = this.generateTerrainHeight(x2, z2, n2, _params);
        vertices.push(x2, height, z2);
        uvs.push(x2 / (TERRAIN_SIZE - 1), z2 / (TERRAIN_SIZE - 1));
        const index = hmIndex(x2, z2);
        heights[index] = height;
      }
    }
    const indices = [];
    for (let z2 = 0; z2 < TERRAIN_SIZE - 1; z2++) {
      for (let x2 = 0; x2 < TERRAIN_SIZE - 1; x2++) {
        const topLeft = z2 * TERRAIN_SIZE + x2;
        const topRight = topLeft + 1;
        const bottomLeft = (z2 + 1) * TERRAIN_SIZE + x2;
        const bottomRight = bottomLeft + 1;
        indices.push(topLeft, bottomLeft, topRight);
        indices.push(topRight, bottomLeft, bottomRight);
      }
    }
    const geometry = new Geometry();
    geometry.attributes.set("position", new VertexAttribute(new Float32Array(vertices)));
    geometry.attributes.set("uv", new VertexAttribute(new Float32Array(uvs)));
    geometry.index = new IndexAttribute(new Uint32Array(indices));
    geometry.ComputeNormals();
    this.geometry = geometry;
    this.heights = heights;
  }
  fbmNoise(x2, z2, simplex, octaves, lacunarity, gain) {
    let total = 0;
    let frequency = 1;
    let amplitude = 1;
    let maxValue = 0;
    for (let i3 = 0; i3 < octaves; i3++) {
      total += simplex.noise2D(x2 * frequency, z2 * frequency) * amplitude;
      maxValue += amplitude;
      amplitude *= gain;
      frequency *= lacunarity;
    }
    return total / maxValue;
  }
  ridgedNoise(x2, z2, simplex, octaves, lacunarity, gain) {
    let total = 0;
    let frequency = 1;
    let amplitude = 0.5;
    let weight = 1;
    let maxValue = 0;
    for (let i3 = 0; i3 < octaves; i3++) {
      let signal = simplex.noise2D(x2 * frequency, z2 * frequency);
      signal = Math.abs(signal);
      signal = 1 - signal;
      signal *= signal;
      signal *= weight;
      weight = signal * gain;
      total += signal * amplitude;
      maxValue += amplitude;
      frequency *= lacunarity;
      amplitude *= gain;
    }
    return total / maxValue;
  }
  generateTerrainHeight(x2, z2, simplex, params) {
    const baseTerrain = this.fbmNoise(x2 * params.baseScale, z2 * params.baseScale, simplex, params.baseOctaves, params.lacunarity, params.gain);
    const mountainTerrain = this.ridgedNoise(x2 * params.mountainScale, z2 * params.mountainScale, simplex, params.mountainOctaves, params.lacunarity, params.gain);
    const mountainMask = Math.pow(mountainTerrain, params.mountainSharpness);
    const terrainHeight = baseTerrain * params.baseHeight * (1 - mountainMask) + mountainTerrain * params.mountainHeight * mountainMask;
    return terrainHeight;
  }
};

// src/plugins/GLTF/mat.ts
var compose = (position, quaternion, scale2) => {
  const te = new Array(16).fill(0);
  const x2 = quaternion[0], y2 = quaternion[1], z2 = quaternion[2], w2 = quaternion[3];
  const x22 = x2 + x2, y22 = y2 + y2, z22 = z2 + z2;
  const xx = x2 * x22, xy = x2 * y22, xz = x2 * z22;
  const yy = y2 * y22, yz = y2 * z22, zz = z2 * z22;
  const wx = w2 * x22, wy = w2 * y22, wz = w2 * z22;
  const sx = scale2[0], sy = scale2[1], sz = scale2[2];
  te[0] = (1 - (yy + zz)) * sx;
  te[1] = (xy + wz) * sx;
  te[2] = (xz - wy) * sx;
  te[3] = 0;
  te[4] = (xy - wz) * sy;
  te[5] = (1 - (xx + zz)) * sy;
  te[6] = (yz + wx) * sy;
  te[7] = 0;
  te[8] = (xz + wy) * sz;
  te[9] = (yz - wx) * sz;
  te[10] = (1 - (xx + yy)) * sz;
  te[11] = 0;
  te[12] = position[0];
  te[13] = position[1];
  te[14] = position[2];
  te[15] = 1;
  return te;
};
var multiplyMatrices = (a2, b2) => {
  const ae = a2;
  const be = b2;
  const te = new Array(16).fill(0);
  const a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];
  const a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];
  const a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];
  const a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];
  const b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];
  const b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];
  const b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];
  const b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];
  te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
  te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
  te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
  te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
  te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
  te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
  te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
  te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
  te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
  te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
  te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
  te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
  te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
  te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
  te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
  te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
  return te;
};
var createMat4FromArray = (array) => {
  return [
    array[0],
    array[1],
    array[2],
    array[3],
    array[4],
    array[5],
    array[6],
    array[7],
    array[8],
    array[9],
    array[10],
    array[11],
    array[12],
    array[13],
    array[14],
    array[15]
  ];
};
var applyRotationFromQuat = (transform, rotation) => {
  const rotationMatrix = compose([0, 0, 0], rotation, [1, 1, 1]);
  return multiplyMatrices(rotationMatrix, transform);
};
var translate = (m2, v2) => {
  return [
    1,
    0,
    0,
    v2[0],
    0,
    1,
    0,
    v2[1],
    0,
    0,
    1,
    v2[2],
    0,
    0,
    0,
    1
  ];
};
var scale = (m2, v2) => {
  return [
    v2[0],
    0,
    0,
    0,
    0,
    v2[1],
    0,
    0,
    0,
    0,
    v2[2],
    0,
    0,
    0,
    0,
    1
  ];
};
var identity = () => {
  return [
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1
  ];
};

// src/plugins/GLTF/gltf.ts
var accessorSizes = {
  "SCALAR": 1,
  "VEC2": 2,
  "VEC3": 3,
  "VEC4": 4,
  "MAT2": 4,
  "MAT3": 9,
  "MAT4": 16
};
var resolveEmbeddedBuffer = (uri) => {
  const content = uri.split(",")[1];
  const binaryData = atob(content);
  const arrayBuffer = new ArrayBuffer(binaryData.length);
  const uint8Array = new Uint8Array(arrayBuffer);
  for (let i3 = 0; i3 < binaryData.length; i3++) {
    uint8Array[i3] = binaryData.charCodeAt(i3);
  }
  const blob = new Blob([uint8Array], { type: "application/octet-stream" });
  return URL.createObjectURL(blob);
};
var EMBEDDED_DATA_REGEXP = /(.*)data:(.*?)(;base64)?,(.*)$/;
var getBuffer = async (path, buffer) => {
  const dir = path.split("/").slice(0, -1).join("/");
  const finalPath = EMBEDDED_DATA_REGEXP.test(buffer) ? resolveEmbeddedBuffer(buffer) : `${dir}/${buffer}`;
  const response = await fetch(finalPath);
  return await response.arrayBuffer();
};
var getTexture = async (uri) => {
  return new Promise((resolve) => {
    const img = new Image();
    img.onload = () => {
      resolve(img);
    };
    img.src = EMBEDDED_DATA_REGEXP.test(uri) ? resolveEmbeddedBuffer(uri) : uri;
    img.crossOrigin = "undefined";
  });
};
var readBufferFromFile = (gltf, buffers, accessor) => {
  const bufferView = gltf.bufferViews[accessor.bufferView];
  const size = accessorSizes[accessor.type];
  const componentType = accessor.componentType;
  const type = accessor.type;
  let data;
  if (componentType === 5126 /* Float */) data = new Float32Array(buffers[bufferView.buffer], (accessor.byteOffset || 0) + (bufferView.byteOffset || 0), accessor.count * size);
  else if (componentType === 5123 /* Short */) data = new Int16Array(buffers[bufferView.buffer], (accessor.byteOffset || 0) + (bufferView.byteOffset || 0), accessor.count * size);
  else if (componentType === 5125 /* Int */) data = new Int32Array(buffers[bufferView.buffer], (accessor.byteOffset || 0) + (bufferView.byteOffset || 0), accessor.count * size);
  else throw Error(`Unknown component type ${componentType}`);
  return {
    size,
    data,
    type,
    componentType
  };
};
var getAccessor = (gltf, primitive, attributeName) => {
  const attribute = primitive.attributes[attributeName];
  return gltf.accessors[attribute];
};
var getBufferFromName = (gltf, buffers, primitive, name) => {
  if (primitive.attributes[name] === void 0) {
    return null;
  }
  const accessor = getAccessor(gltf, primitive, name);
  const bufferData = readBufferFromFile(gltf, buffers, accessor);
  return {
    buffer: bufferData,
    size: bufferData.size,
    type: bufferData.componentType
  };
};
var loadNodes = (index, node) => {
  let transform = identity();
  if (node.translation !== void 0) transform = translate(transform, node.translation);
  if (node.rotation !== void 0) transform = applyRotationFromQuat(transform, node.rotation);
  if (node.scale !== void 0) transform = scale(transform, node.scale);
  if (node.matrix !== void 0) transform = createMat4FromArray(node.matrix);
  return {
    id: index,
    name: node.name,
    children: node.children || [],
    localBindTransform: transform,
    animatedTransform: identity(),
    skin: node.skin,
    mesh: node.mesh
  };
};
var loadAnimation = (gltf, animation, buffers) => {
  const channels = animation.channels.map((c3) => {
    const sampler = animation.samplers[c3.sampler];
    const time = readBufferFromFile(gltf, buffers, gltf.accessors[sampler.input]);
    const buffer = readBufferFromFile(gltf, buffers, gltf.accessors[sampler.output]);
    return {
      node: c3.target.node,
      type: c3.target.path,
      time,
      buffer,
      interpolation: sampler.interpolation ? sampler.interpolation : "LINEAR"
    };
  });
  const c2 = {};
  channels.forEach((channel) => {
    if (c2[channel.node] === void 0) {
      c2[channel.node] = {
        translation: [],
        rotation: [],
        scale: []
      };
    }
    for (let i3 = 0; i3 < channel.time.data.length; i3++) {
      const size = channel.interpolation === "CUBICSPLINE" ? channel.buffer.size * 3 : channel.buffer.size;
      const offset = channel.interpolation === "CUBICSPLINE" ? channel.buffer.size : 0;
      const transform = channel.type === "rotation" ? [
        channel.buffer.data[i3 * size + offset],
        channel.buffer.data[i3 * size + offset + 1],
        channel.buffer.data[i3 * size + offset + 2],
        channel.buffer.data[i3 * size + offset + 3]
      ] : [
        channel.buffer.data[i3 * size + offset],
        channel.buffer.data[i3 * size + offset + 1],
        channel.buffer.data[i3 * size + offset + 2]
      ];
      c2[channel.node][channel.type].push({
        time: channel.time.data[i3],
        transform,
        type: channel.type
      });
    }
  });
  return c2;
};
var loadMesh = (gltf, mesh, buffers) => {
  let indices = null;
  let elementCount = 0;
  let meshes = [];
  for (const primitive of mesh.primitives) {
    if (primitive.indices !== void 0) {
      const indexAccessor = gltf.accessors[primitive.indices];
      const indexBuffer = readBufferFromFile(gltf, buffers, indexAccessor);
      indices = indexBuffer;
      elementCount = indexBuffer.data.length;
    } else {
      const accessor = getAccessor(gltf, primitive, "POSITION");
      elementCount = accessor.count;
    }
    meshes.push({
      indices,
      elementCount,
      positions: getBufferFromName(gltf, buffers, primitive, "POSITION"),
      normals: getBufferFromName(gltf, buffers, primitive, "NORMAL"),
      tangents: getBufferFromName(gltf, buffers, primitive, "TANGENT"),
      texCoord: getBufferFromName(gltf, buffers, primitive, "TEXCOORD_0"),
      joints: getBufferFromName(gltf, buffers, primitive, "JOINTS_0"),
      weights: getBufferFromName(gltf, buffers, primitive, "WEIGHTS_0"),
      material: primitive.material
    });
  }
  return meshes;
};
var loadMaterial = async (material, path, images) => {
  const dir = path.split("/").slice(0, -1).join("/");
  let baseColorTexture = null;
  let metallicRoughnessTexture = null;
  let emissiveTexture = null;
  let normalTexture = null;
  let occlusionTexture = null;
  let baseColorFactor = [1, 1, 1, 1];
  let roughnessFactor = 0.5;
  let metallicFactor = 0;
  let emissiveFactor = [0, 0, 0];
  const pbr = material.pbrMetallicRoughness;
  if (pbr) {
    if (pbr.baseColorTexture) {
      if (images !== void 0 && images.length > pbr.baseColorTexture.index) {
        const uri = images[pbr.baseColorTexture.index].uri;
        baseColorTexture = await getTexture(`${dir}/${uri}`);
      }
    }
    if (pbr.baseColorFactor) {
      baseColorFactor = pbr.baseColorFactor;
    }
    if (pbr.metallicRoughnessTexture) {
      const uri = images[pbr.metallicRoughnessTexture.index].uri;
      metallicRoughnessTexture = await getTexture(`${dir}/${uri}`);
    }
    metallicFactor = pbr.metallicFactor !== void 0 ? pbr.metallicFactor : 1;
    roughnessFactor = pbr.roughnessFactor !== void 0 ? pbr.roughnessFactor : 1;
  }
  if (material.emissiveTexture) {
    const uri = images[material.emissiveTexture.index].uri;
    emissiveTexture = await getTexture(`${dir}/${uri}`);
  }
  if (material.normalTexture) {
    const uri = images[material.normalTexture.index].uri;
    normalTexture = await getTexture(`${dir}/${uri}`);
  }
  if (material.occlusionTexture) {
    const uri = images[material.occlusionTexture.index].uri;
    occlusionTexture = await getTexture(`${dir}/${uri}`);
  }
  if (material.emissiveFactor) {
    emissiveFactor = material.emissiveFactor;
  }
  return {
    baseColorTexture,
    baseColorFactor,
    metallicRoughnessTexture,
    metallicFactor,
    roughnessFactor,
    emissiveTexture,
    emissiveFactor,
    normalTexture,
    occlusionTexture
  };
};
var loadModel = async (uri) => {
  const response = await fetch(uri);
  const gltf = await response.json();
  if (gltf.accessors === void 0 || gltf.accessors.length === 0) {
    throw new Error("GLTF File is missing accessors");
  }
  const buffers = await Promise.all(
    gltf.buffers.map(
      async (b2) => await getBuffer(uri, b2.uri)
    )
  );
  const scene = gltf.scenes[gltf.scene || 0];
  const meshes = gltf.meshes.map((m2) => loadMesh(gltf, m2, buffers)).flat();
  const materials = gltf.materials ? await Promise.all(gltf.materials.map(async (m2) => await loadMaterial(m2, uri, gltf.images))) : [];
  const rootNode = scene.nodes[0];
  const nodes = gltf.nodes.map((n2, i3) => loadNodes(i3, n2));
  const animations = {};
  gltf.animations?.forEach((anim) => animations[anim.name] = loadAnimation(gltf, anim, buffers));
  const skins = gltf.skins ? gltf.skins.map((x2) => {
    const bindTransforms = readBufferFromFile(gltf, buffers, gltf.accessors[x2.inverseBindMatrices]);
    const inverseBindTransforms = x2.joints.map((_2, i3) => createMat4FromArray(bindTransforms.data.slice(i3 * 16, i3 * 16 + 16)));
    return {
      joints: x2.joints,
      inverseBindTransforms
    };
  }) : [];
  const name = uri.split("/").slice(-1)[0];
  return {
    name,
    meshes,
    nodes,
    rootNode,
    animations,
    skins,
    materials
  };
};
var GLTFLoader = class {
  // GLB
  // fetch("./assets/GLTFScenes/SketchBook/world.glb").then(v => v.arrayBuffer()).then(arrayBuffer => {
  //     console.log(arrayBuffer)
  //     const dataView = new DataView(arrayBuffer);
  //     const header = new Uint8Array(dataView.buffer.slice(0, 4));
  //     const headerStr = String.fromCharCode(...header);
  //     if (headerStr !== "glTF") throw Error("Invalid glb");
  //     const version = dataView.getUint32(4, true);
  //     const length = dataView.getUint32(8, true);
  //     console.log(version, length)
  //     // Read the JSON chunk
  //     const jsonChunkLength = dataView.getUint32(12, true);
  //     const jsonChunkType = String.fromCharCode(dataView.getUint8(16), dataView.getUint8(17), dataView.getUint8(18), dataView.getUint8(19));
  //     if (jsonChunkType !== 'JSON') {
  //         throw new Error('Expected JSON chunk');
  //     }
  //     const jsonContent = JSON.parse(new TextDecoder().decode(new Uint8Array(dataView.buffer, dataView.byteOffset + 20, jsonChunkLength)));
  //     console.log('JSON Content:', jsonContent);
  //     // Read the binary chunk if exists
  //     const binaryChunkOffset = 20 + jsonChunkLength;
  //     if (binaryChunkOffset < length) {
  //         const binaryChunkLength = dataView.getUint32(binaryChunkOffset, true);
  //         const binaryChunkType = String.fromCharCode(dataView.getUint8(binaryChunkOffset + 4), dataView.getUint8(binaryChunkOffset + 5), dataView.getUint8(binaryChunkOffset + 6), dataView.getUint8(binaryChunkOffset + 7));
  //         if (binaryChunkType !== 'BIN\0') {
  //             throw new Error('Expected BIN chunk');
  //         }
  //         console.log(`Binary Chunk Length: ${binaryChunkLength}`);
  //         // Handle binary data as needed
  //     }
  // })
  static async load(url) {
    const gltfModel = await loadModel(url);
    console.log(gltfModel);
    const groupObject3D = [];
    for (const node of gltfModel.nodes) {
      if (node.mesh === void 0) continue;
      const meshId = node.mesh;
      const gltfMesh = gltfModel.meshes[meshId];
      if (gltfMesh === void 0) continue;
      const geometry = new Geometry();
      geometry.attributes.set("position", new VertexAttribute(gltfMesh.positions.buffer.data));
      if (gltfMesh.normals) geometry.attributes.set("normal", new VertexAttribute(gltfMesh.normals.buffer.data));
      if (gltfMesh.texCoord) geometry.attributes.set("uv", new VertexAttribute(gltfMesh.texCoord.buffer.data));
      if (gltfMesh.indices) {
        const uint32Array = new Uint32Array(gltfMesh.indices.data.length);
        for (let i3 = 0; i3 < gltfMesh.indices.data.length; i3++) {
          uint32Array[i3] = gltfMesh.indices.data[i3] & 65535;
        }
        geometry.index = new IndexAttribute(uint32Array);
      }
      const materialId = gltfMesh.material;
      const material = gltfModel.materials[materialId];
      const params = { albedoColor: new Color(1, 1, 1, 1), emissiveColor: new Color(0, 0, 0, 0), roughness: 0, metalness: 0, unlit: false };
      if (material) {
        params.albedoColor = new Color(material.baseColorFactor[0], material.baseColorFactor[1], material.baseColorFactor[2], material.baseColorFactor[3]);
        params.emissiveColor = new Color(material.emissiveFactor[0], material.emissiveFactor[1], material.emissiveFactor[2], 0);
        params.roughness = material.roughnessFactor;
        params.metalness = material.metallicFactor;
        if (material.baseColorTexture) params.albedoMap = await Texture2.LoadImageSource(material.baseColorTexture);
        if (material.normalTexture) params.normalMap = await Texture2.LoadImageSource(material.normalTexture);
        if (material.metallicRoughnessTexture) params.metalnessMap = await Texture2.LoadImageSource(material.metallicRoughnessTexture);
        if (material.emissiveTexture) params.emissiveMap = await Texture2.LoadImageSource(material.emissiveTexture);
      }
      const mat = new PBRMaterial(params);
      console.log(params);
      groupObject3D.push({
        geometry,
        material: mat,
        children: node.children,
        localMatrix: new Matrix4().setFromArray(node.localBindTransform)
      });
    }
    return groupObject3D;
  }
};

// src/TEST/Physics.ts
var canvas = document.createElement("canvas");
var aspectRatio = window.devicePixelRatio;
canvas.width = window.innerWidth * aspectRatio;
canvas.height = window.innerHeight * aspectRatio;
canvas.style.width = `${window.innerWidth}px`;
canvas.style.height = `${window.innerHeight}px`;
document.body.appendChild(canvas);
async function Application() {
  const renderer = Renderer.Create(canvas, "webgpu");
  const scene = new Scene(renderer);
  const mainCameraGameObject = new GameObject(scene);
  mainCameraGameObject.transform.position.set(0, 0, -35);
  mainCameraGameObject.name = "MainCamera";
  const camera = mainCameraGameObject.AddComponent(Camera);
  camera.SetPerspective(72, canvas.width / canvas.height, 0.5, 5e4);
  const lightGameObject = new GameObject(scene);
  lightGameObject.transform.position.set(4, 4, 4);
  lightGameObject.transform.LookAt(new Vector3(0, 0, 0));
  const light = lightGameObject.AddComponent(DirectionalLight);
  light.intensity = 1;
  light.color.set(1, 1, 1, 1);
  const physicsWorld = new GameObject(scene);
  const physicsComponent = physicsWorld.AddComponent(PhysicsRapier);
  await physicsComponent.Load();
  const terrainSize = 128;
  const terrain = new TerrainGenerator(terrainSize);
  const gameObject = new GameObject(scene);
  gameObject.transform.position.z -= terrainSize * 0.5;
  gameObject.transform.position.x -= terrainSize * 0.5;
  const terrainAlbedo = await Texture2.Load("./assets/textures/rocky_terrain_02_2k.gltf/textures/rocky_terrain_02_diff_2k.jpg");
  const terrainNormal = await Texture2.Load("./assets/textures/rocky_terrain_02_2k.gltf/textures/rocky_terrain_02_nor_gl_2k.jpg");
  const terrainSpec = await Texture2.Load("./assets/textures/rocky_terrain_02_2k.gltf/textures/rocky_terrain_02_spec_2k.jpg");
  const material = new PBRMaterial({ albedoMap: terrainAlbedo, normalMap: terrainNormal, metalnessMap: terrainSpec });
  const mesh = gameObject.AddComponent(Mesh);
  await mesh.SetGeometry(terrain.geometry);
  mesh.AddMaterial(material);
  const collider = gameObject.AddComponent(TerrainCollider);
  collider.SetTerrainData(
    terrainSize,
    terrainSize,
    terrain.heights,
    new Vector3(terrainSize, 1, terrainSize)
  );
  {
    const sphereGO = new GameObject(scene);
    sphereGO.transform.position.y = 5;
    sphereGO.transform.position.x = 2.1;
    sphereGO.transform.eulerAngles.x = -90;
    const sphereMesh = sphereGO.AddComponent(Mesh);
    await sphereMesh.SetGeometry(Geometry.Sphere());
    sphereMesh.AddMaterial(new PBRMaterial({ albedoColor: new Color(1, 0, 0, 1) }));
    sphereGO.AddComponent(SphereCollider);
    sphereGO.AddComponent(RigidBody);
  }
  {
    const playerGameObject = new GameObject(scene);
    playerGameObject.transform.position.y = 30;
    playerGameObject.transform.position.x = 2.1;
    const sphereMesh = playerGameObject.AddComponent(Mesh);
    await sphereMesh.SetGeometry(Geometry.Sphere());
    sphereMesh.AddMaterial(new PBRMaterial({ albedoColor: new Color(1, 0, 0, 1) }));
    playerGameObject.AddComponent(SphereCollider);
    const rigidbody = playerGameObject.AddComponent(RigidBody);
    rigidbody.Create("kinematicPosition");
    const firstPersonController = playerGameObject.AddComponent(FirstPersonController);
    firstPersonController.camera = camera;
  }
  const terrainGeometryPositions = terrain.geometry.attributes.get("position");
  if (!terrainGeometryPositions) throw Error("Uh oh");
  const pine = await GLTFLoader.load("./assets/models/quiver_tree_02/quiver_tree_02.gltf");
  let instances = 0;
  const pinesGO = new GameObject(scene);
  const instancedMesh = pinesGO.AddComponent(InstancedMesh);
  await instancedMesh.SetGeometry(pine[0].geometry);
  instancedMesh.AddMaterial(pine[0].material);
  const m2 = new Matrix4();
  const p2 = new Vector3();
  const q2 = new Quaternion();
  const s2 = new Vector3(5, 5, 5);
  for (let i3 = 0; i3 < terrainGeometryPositions.array.length; i3 += 3) {
    const generate = Math.random() > 0.99;
    if (generate === true) {
      p2.set(terrainGeometryPositions.array[i3 + 0], terrainGeometryPositions.array[i3 + 1], terrainGeometryPositions.array[i3 + 2]);
      p2.z -= terrainSize * 0.5;
      p2.x -= terrainSize * 0.5;
      m2.compose(p2, q2, s2);
      instancedMesh.SetMatrixAt(instances, m2);
      instances++;
    }
  }
  scene.Start();
}
Application();
